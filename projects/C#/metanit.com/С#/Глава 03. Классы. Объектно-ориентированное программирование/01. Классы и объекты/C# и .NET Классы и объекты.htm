<!DOCTYPE html>
<html theme="dark"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<title>C# и .NET | Классы и объекты</title>
<meta charset="utf-8">
<meta name="description" content="Создание и использование классов и объектов в C# и .NET Core, оператор new, конструкторы классов, ключевое слово this, инициализаторы объектов">
<meta name="viewport" content="width=device-width">
<link href="C%23%20%D0%B8%20.NET%20%D0%9A%D0%BB%D0%B0%D1%81%D1%81%D1%8B%20%D0%B8%20%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D1%8B_files/style30.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="C%23%20%D0%B8%20.NET%20%D0%9A%D0%BB%D0%B0%D1%81%D1%81%D1%8B%20%D0%B8%20%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D1%8B_files/context.js" async=""></script><script type="text/javascript" src="C%23%20%D0%B8%20.NET%20%D0%9A%D0%BB%D0%B0%D1%81%D1%81%D1%8B%20%D0%B8%20%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D1%8B_files/context.js" async=""></script><script async="" src="C%23%20%D0%B8%20.NET%20%D0%9A%D0%BB%D0%B0%D1%81%D1%81%D1%8B%20%D0%B8%20%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D1%8B_files/analytics.js"></script><script type="text/javascript" async="" src="C%23%20%D0%B8%20.NET%20%D0%9A%D0%BB%D0%B0%D1%81%D1%81%D1%8B%20%D0%B8%20%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D1%8B_files/embed.js"></script><link rel="prefetch" as="style" href="C%23%20%D0%B8%20.NET%20%D0%9A%D0%BB%D0%B0%D1%81%D1%81%D1%8B%20%D0%B8%20%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D1%8B_files/a_data/lounge.css"><link rel="prefetch" as="script" href="C%23%20%D0%B8%20.NET%20%D0%9A%D0%BB%D0%B0%D1%81%D1%81%D1%8B%20%D0%B8%20%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D1%8B_files/a_data/common.js"><link rel="prefetch" as="script" href="C%23%20%D0%B8%20.NET%20%D0%9A%D0%BB%D0%B0%D1%81%D1%81%D1%8B%20%D0%B8%20%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D1%8B_files/a_data/lounge.js"><link rel="prefetch" as="script" href="C%23%20%D0%B8%20.NET%20%D0%9A%D0%BB%D0%B0%D1%81%D1%81%D1%8B%20%D0%B8%20%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D1%8B_files/a_data/config.js"></head>
<body>
<div id="container">

<div id="header">
<div id="logo">
<a class="logoTitle" href="https://metanit.com/" title="На главную">METANIT.COM</a>
<div class="logoDefinition">Сайт о программировании</div> 
</div>

<div class="socialbtns">
<ul>
<li><a title="Посмотреть меню" rel="nofollow" class="fa fa-lg fa-bars"></a></li>
<li><a href="https://metanit.com/donations.php" title="Помощь сайту" rel="nofollow" class="fa fa-lg fa-usd"></a></li>
<li><a href="https://vk.com/metanit" title="Группа в ВКонтакте" rel="nofollow" class="fa fa-lg fa-vk"></a></li>
<li><a href="https://twitter.com/Eugene225" title="Твиттер" rel="nofollow" class="fa fa-lg fa-twitter"></a></li>
<li><a href="https://www.facebook.com/metanitcom" title="Страница в Facebook" rel="nofollow" class="fa fa-lg fa-facebook"></a></li>
<li><a href="https://www.youtube.com/user/Eugene22584/" title="Канал сайта на Youtube" rel="nofollow" class="fa fa-lg fa-youtube"></a></li>
<li><a href="https://t.me/metanit" title="Телеграмм" class="fa fa-lg fa-tel"></a></li>
<li><i id="toggle-theme" class="fa fa-lg fa-adjust"></i></li>
</ul>
</div>

<div id="search" class="transp">
<form action="https://www.google.ru" id="cse-search-box">
  <div>
    <input type="hidden" name="cx" value="partner-pub-3716042175333627:1096498938">
    <input type="hidden" name="ie" value="UTF-8">
    <input type="text" name="q" style="border: 1px solid rgb(126, 157, 185); padding: 2px; background: rgb(255, 255, 255) url(&quot;https://www.google.com/cse/static/images/1x/googlelogo_lightgrey_46x16dp.png&quot;) no-repeat scroll left center; text-indent: 48px;" placeholder="Пользовательского поиска">
    <input type="submit" name="sa" value="Найти">
  </div>
<input name="siteurl" type="hidden" value="metanit.com/sharp/tutorial/3.1.php"><input name="ref" type="hidden" value="metanit.com/sharp/tutorial/3.1.php"><input name="ss" type="hidden"></form>
</div>
<div class="icon-vk"></div>
<div id="magnifying-glass"></div>

<div class="menuButton" id="menuButton">
	<span class="icon-bar"></span>
    <span class="icon-bar"></span>
    <span class="icon-bar"></span>
</div>

<div id="menu" class="menu">
<ul class="mainmenu">
   <li><a href="https://metanit.com/sharp/">C#/.NET</a></li>
   <li><a href="https://metanit.com/java/">Java</a></li>
   <li><a href="https://metanit.com/web/">WEB</a></li>
   <li><a href="https://metanit.com/python/">Python</a></li>
   <li><a href="https://metanit.com/cpp/">C/C++</a></li>
   <li><a href="https://metanit.com/sql/">SQL</a></li>
   <li><a href="https://metanit.com/nosql/mongodb/">MongoDB</a></li>
   <li><a href="https://metanit.com/go/">Go</a></li>
   <li><a href="https://metanit.com/visualbasic/tutorial/">VB.NET</a></li>
   <li><a href="https://metanit.com/swift/tutorial/">Swift</a></li>
   <li><a href="https://metanit.com/kotlin/tutorial/">Kotlin</a></li>
   <li><a href="https://metanit.com/dart/">Dart</a></li>
</ul>
</div>
</div>
<div id="content_right"> 
<div id="content_right_inner"> 
<div id="content_center"> 
<div id="menC" class="menC">
<div class="articleText" id="articleText">
<h1>Классы. Объектно-ориентированное программирование</h1><h2>Классы и объекты</h2><div class="date">Последнее обновление: 16.09.2019</div>

<div class="socialBlock">
<div class="share socialtop">
<ul>
<li><a title="Поделиться в Вконтакте" rel="nofollow" class="fa fa-lg fa-vk" onclick='window.open("http://vk.com/share.php?url=https://metanit.com/sharp/tutorial/3.1.php","Поделиться в ВКОНТАКТЕ","width=420,height=230,resizable=yes,scrollbars=yes,status=yes")'></a></li>
<li><a title="Поделиться в Одноклассниках" rel="nofollow" class="fa fa-lg fa-odnoklassniki" onclick='window.open("https://connect.ok.ru/offer?url=https://metanit.com/sharp/tutorial/3.1.php","Поделиться в Одноклассниках","width=420,height=230,resizable=yes,scrollbars=yes,status=yes")'></a></li>
<li><a title="Поделиться в Твиттере" rel="nofollow" class="fa fa-lg fa-twitter" onclick='window.open("http://twitter.com/share?url=https://metanit.com/sharp/tutorial/3.1.php","Поделиться в Твиттере","width=420,height=230,resizable=yes,scrollbars=yes,status=yes")'></a></li>
<li><a title="Поделиться в Фейсбуке" rel="nofollow" class="fa fa-lg fa-facebook" onclick='window.open("http://www.facebook.com/sharer.php?u=https://metanit.com/sharp/tutorial/3.1.php","Поделиться в Facebook","width=420,height=230,resizable=yes,scrollbars=yes,status=yes")'></a></li>
</ul>
</div>

</div>

<div style="margin-top:23px;margin-left:5px;">
<script async="" src="C%23%20%D0%B8%20.NET%20%D0%9A%D0%BB%D0%B0%D1%81%D1%81%D1%8B%20%D0%B8%20%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D1%8B_files/adsbygoogle.js"></script>
<style>
.top_dark { width: 320px; height: 100px; }
@media(min-width: 480px) { .top_dark { width: 468px; height: 60px; } }
@media(min-width: 760px) { .top_dark { width: 728px; height: 90px;  } }
@media(min-width: 1000px) { .top_dark { width: 468px; height: 60px;  } }
@media(min-width: 1122px) { .top_dark{ width: 728px; height: 90px;} }
@media(min-width: 1400px) { .top_dark { width: 970px; height: 90px;} }
</style>
<!-- top_dark -->
<ins class="adsbygoogle top_dark" style="display:inline-block" data-ad-client="ca-pub-3716042175333627" data-ad-slot="7629300475"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
</div>

<p>C# является полноценным объектно-ориентированным языком. Это значит, 
что программу на C# можно представить в виде взаимосвязанных 
взаимодействующих между собой объектов.</p>
<p>Описанием объекта является <span class="b">класс</span>, а объект 
представляет экземпляр этого класса. Можно еще провести следующую 
аналогию. 
У нас у всех есть некоторое представление о человеке, у которого есть 
имя, возраст, какие-то другие характеристики. 
То есть некоторый шаблон - этот шаблон можно назвать классом. Конкретное
 воплощение этого шаблона может отличаться, например, одни люди имеют 
одно имя, другие - другое имя. 
И реально существующий человек (фактически экземпляр данного класса) 
будет представлять объект этого класса.</p>
<p>По умолчанию проект консольного приложения уже содержит один класс Program, с которого и начинается выполнение программы.</p>
<p>По сути класс представляет новый тип, который определяется пользователем. Класс определяется с помощью ключевого слова <span class="b">сlass</span>:</p>
<div><div id="highlighter_974588" class="syntaxhighlighter  c#"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="c# keyword">class</code> <code class="c# plain">Person</code></div><div class="line number2 index1 alt1"><code class="c# plain">{</code></div><div class="line number3 index2 alt2">&nbsp;</div><div class="line number4 index3 alt1"><code class="c# plain">}</code></div></div></td></tr></tbody></table></div></div>
<p>Где определяется класс? Класс можно определять внутри пространства 
имен, вне пространства имен, внутри другого класса. Как правило, классы 
помещаются в отдельные файлы. 
Но в данном случае поместим новый класс в файле, где располагается класс
 Program. То есть файл Program.cs будет выглядеть следующим образом:</p>
<div><div id="highlighter_335831" class="syntaxhighlighter  c#"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="c# keyword">using</code> <code class="c# plain">System;</code></div><div class="line number2 index1 alt1">&nbsp;</div><div class="line number3 index2 alt2"><code class="c# keyword">namespace</code> <code class="c# plain">HelloApp</code></div><div class="line number4 index3 alt1"><code class="c# plain">{</code></div><div class="line number5 index4 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">class</code> <code class="c# plain">Person</code></div><div class="line number6 index5 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">{</code></div><div class="line number7 index6 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number8 index7 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">}</code></div><div class="line number9 index8 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">class</code> <code class="c# plain">Program</code></div><div class="line number10 index9 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">{</code></div><div class="line number11 index10 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">static</code> <code class="c# keyword">void</code> <code class="c# plain">Main(</code><code class="c# keyword">string</code><code class="c# plain">[] args)</code></div><div class="line number12 index11 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">{</code></div><div class="line number13 index12 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number14 index13 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">}</code></div><div class="line number15 index14 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">}</code></div><div class="line number16 index15 alt1"><code class="c# plain">}</code></div></div></td></tr></tbody></table></div></div>
<p>Вся функциональность класса представлена его членами - полями (полями
 называются переменные класса), свойствами, методами, событиями. 
Например, 
определим в классе Person поля и метод:</p>
<div><div id="highlighter_182043" class="syntaxhighlighter  c#"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="c# keyword">using</code> <code class="c# plain">System;</code></div><div class="line number2 index1 alt1">&nbsp;</div><div class="line number3 index2 alt2"><code class="c# keyword">namespace</code> <code class="c# plain">HelloApp</code></div><div class="line number4 index3 alt1"><code class="c# plain">{</code></div><div class="line number5 index4 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">class</code> <code class="c# plain">Person</code></div><div class="line number6 index5 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">{</code></div><div class="line number7 index6 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">public</code> <code class="c# keyword">string</code> <code class="c# plain">name; </code><code class="c# comments">// имя</code></div><div class="line number8 index7 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">public</code> <code class="c# keyword">int</code> <code class="c# plain">age = 18;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="c# comments">// возраст</code></div><div class="line number9 index8 alt2">&nbsp;</div><div class="line number10 index9 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">public</code> <code class="c# keyword">void</code> <code class="c# plain">GetInfo()</code></div><div class="line number11 index10 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">{</code></div><div class="line number12 index11 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">Console.WriteLine($</code><code class="c# string">"Имя: {name}&nbsp; Возраст: {age}"</code><code class="c# plain">);</code></div><div class="line number13 index12 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">}</code></div><div class="line number14 index13 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">}</code></div><div class="line number15 index14 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">class</code> <code class="c# plain">Program</code></div><div class="line number16 index15 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">{</code></div><div class="line number17 index16 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">static</code> <code class="c# keyword">void</code> <code class="c# plain">Main(</code><code class="c# keyword">string</code><code class="c# plain">[] args)</code></div><div class="line number18 index17 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">{</code></div><div class="line number19 index18 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">Person tom;</code></div><div class="line number20 index19 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">}</code></div><div class="line number21 index20 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">}</code></div><div class="line number22 index21 alt1"><code class="c# plain">}</code></div></div></td></tr></tbody></table></div></div>
<p>В данном случае класс Person представляет человека. Поле name хранит 
имя, а поле age - возраст человека. А метод GetInfo выводит все данные 
на консоль. 
Чтобы все данные были доступны вне класса Person переменные и метод 
определены с модификатором public. Поскольку поля фактически те же 
переменные, им можно присвоить начальные 
значения, как в случае выше, поле age инициализировано значением 18.</p>
<p>Так как класс представляет собой новый тип, то в программе мы можем 
определять переменные, которые представляют данный тип. Так, здесь в 
методе Main определена переменная tom, 
которая представляет класс Person. Но пока эта переменная не указывает 
ни на какой объект и по умолчанию она имеет значение <span class="b">null</span>. 
Поэтому вначале необходимо создать объект класса Person.</p>
<h3>Конструкторы</h3>
<p>Кроме обычных методов в классах используются также и специальные методы, которые называются <span class="b">конструкторами</span>. 
Конструкторы вызываются при создании нового объекта данного класса. Конструкторы выполняют инициализацию объекта.</p>
<h4>Конструктор по умолчанию</h4>
<p>Если в классе не определено ни одного конструктора, то для этого 
класса автоматически создается конструктор по умолчанию. Такой 
конструктор 
не имеет параметров и не имеет тела.</p>
<p>Выше класс Person не имеет никаких конструкторов. Поэтому для него 
автоматически создается конструктор по умолчанию. И мы можем 
использовать этот конструктор. В частности, создадим один объект класса 
Person:</p>
<div><div id="highlighter_880083" class="syntaxhighlighter  c#"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="c# keyword">class</code> <code class="c# plain">Person</code></div><div class="line number2 index1 alt1"><code class="c# plain">{</code></div><div class="line number3 index2 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">public</code> <code class="c# keyword">string</code> <code class="c# plain">name; </code><code class="c# comments">// имя</code></div><div class="line number4 index3 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">public</code> <code class="c# keyword">int</code> <code class="c# plain">age;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="c# comments">// возраст</code></div><div class="line number5 index4 alt2">&nbsp;</div><div class="line number6 index5 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">public</code> <code class="c# keyword">void</code> <code class="c# plain">GetInfo()</code></div><div class="line number7 index6 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">{</code></div><div class="line number8 index7 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">Console.WriteLine($</code><code class="c# string">"Имя: {name}&nbsp; Возраст: {age}"</code><code class="c# plain">);</code></div><div class="line number9 index8 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">}</code></div><div class="line number10 index9 alt1"><code class="c# plain">}</code></div><div class="line number11 index10 alt2"><code class="c# keyword">class</code> <code class="c# plain">Program</code></div><div class="line number12 index11 alt1"><code class="c# plain">{</code></div><div class="line number13 index12 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">static</code> <code class="c# keyword">void</code> <code class="c# plain">Main(</code><code class="c# keyword">string</code><code class="c# plain">[] args)</code></div><div class="line number14 index13 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">{</code></div><div class="line number15 index14 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">Person tom = </code><code class="c# keyword">new</code> <code class="c# plain">Person();</code></div><div class="line number16 index15 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">tom.GetInfo();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="c# comments">// Имя: Возраст: 0</code></div><div class="line number17 index16 alt2">&nbsp;</div><div class="line number18 index17 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">tom.name = </code><code class="c# string">"Tom"</code><code class="c# plain">;</code></div><div class="line number19 index18 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">tom.age = 34;</code></div><div class="line number20 index19 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">tom.GetInfo();&nbsp; </code><code class="c# comments">// Имя: Tom Возраст: 34</code></div><div class="line number21 index20 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">Console.ReadKey();</code></div><div class="line number22 index21 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">}</code></div><div class="line number23 index22 alt2"><code class="c# plain">}</code></div></div></td></tr></tbody></table></div></div>
<p>Для создания объекта Person используется выражение <code>new Person()</code>. Оператор <span class="b">new</span>
 выделяет память для 
объекта Person. И затем вызывается конструктор по умолчанию, который не 
принимает никаких параметров. В итоге после выполнения данного выражения
 в 
памяти будет выделен участок, где будут храниться все данные объекта 
Person. А переменная tom получит ссылку на созданный объект.</p>
<p>Если конструктор не инициализирует значения переменных объекта, то 
они получают значения по умолчанию. Для переменных числовых типов это 
число 0, 
а для типа string и классов - это значение <span class="b">null</span> (то есть фактически отсутствие значения).</p>
<p>После создания объекта мы можем обратиться к переменным объекта 
Person через переменную tom и установить или получить их значения, 
например, 
<code>tom.name = "Tom";</code>.</p>
<p>Консольный вывод данной программы:</p>
<div class="console">
<pre class="consoletext">Имя:	Возраст: 0
Имя: Tom	Возраст: 34
</pre>
</div>
<h4>Создание конструкторов</h4>
<p>Выше для инициализации объекта использовался конструктор по умолчанию. Однако мы сами можем определить свои конструкторы:</p>
<div><div id="highlighter_82191" class="syntaxhighlighter  c#"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="c# keyword">class</code> <code class="c# plain">Person</code></div><div class="line number2 index1 alt1"><code class="c# plain">{</code></div><div class="line number3 index2 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">public</code> <code class="c# keyword">string</code> <code class="c# plain">name;</code></div><div class="line number4 index3 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">public</code> <code class="c# keyword">int</code> <code class="c# plain">age;</code></div><div class="line number5 index4 alt2">&nbsp;</div><div class="line number6 index5 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">public</code> <code class="c# plain">Person() { name = </code><code class="c# string">"Неизвестно"</code><code class="c# plain">; age = 18; }&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="c# comments">// 1 конструктор</code></div><div class="line number7 index6 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number8 index7 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">public</code> <code class="c# plain">Person(</code><code class="c# keyword">string</code> <code class="c# plain">n) { name = n; age = 18; }&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="c# comments">// 2 конструктор</code></div><div class="line number9 index8 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number10 index9 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">public</code> <code class="c# plain">Person(</code><code class="c# keyword">string</code> <code class="c# plain">n, </code><code class="c# keyword">int</code> <code class="c# plain">a) { name = n; age = a; }&nbsp;&nbsp; </code><code class="c# comments">// 3 конструктор</code></div><div class="line number11 index10 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number12 index11 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">public</code> <code class="c# keyword">void</code> <code class="c# plain">GetInfo()</code></div><div class="line number13 index12 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">{</code></div><div class="line number14 index13 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">Console.WriteLine($</code><code class="c# string">"Имя: {name}&nbsp; Возраст: {age}"</code><code class="c# plain">);</code></div><div class="line number15 index14 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">}</code></div><div class="line number16 index15 alt1"><code class="c# plain">}</code></div></div></td></tr></tbody></table></div></div>
<p>Теперь в классе определено три конструктора, каждый из которых 
принимает различное количество параметров и устанавливает значения полей
 класса. 
Используем эти конструкторы:</p>
<div><div id="highlighter_682375" class="syntaxhighlighter  c#"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="c# keyword">static</code> <code class="c# keyword">void</code> <code class="c# plain">Main(</code><code class="c# keyword">string</code><code class="c# plain">[] args)</code></div><div class="line number2 index1 alt1"><code class="c# plain">{</code></div><div class="line number3 index2 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">Person tom = </code><code class="c# keyword">new</code> <code class="c# plain">Person();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="c# comments">// вызов 1-ого конструктора без параметров</code></div><div class="line number4 index3 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">Person bob = </code><code class="c# keyword">new</code> <code class="c# plain">Person(</code><code class="c# string">"Bob"</code><code class="c# plain">);&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="c# comments">//вызов 2-ого конструктора с одним параметром</code></div><div class="line number5 index4 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">Person sam = </code><code class="c# keyword">new</code> <code class="c# plain">Person(</code><code class="c# string">"Sam"</code><code class="c# plain">, 25); </code><code class="c# comments">// вызов 3-его конструктора с двумя параметрами</code></div><div class="line number6 index5 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number7 index6 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number8 index7 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">bob.GetInfo();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="c# comments">// Имя: Bob&nbsp; Возраст: 18</code></div><div class="line number9 index8 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">tom.GetInfo();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="c# comments">// Имя: Неизвестно&nbsp; Возраст: 18</code></div><div class="line number10 index9 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">sam.GetInfo();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="c# comments">// Имя: Sam&nbsp; Возраст: 25</code></div><div class="line number11 index10 alt2"><code class="c# plain">}</code></div></div></td></tr></tbody></table></div></div>
<p>Консольный вывод данной программы:</p>
<div class="console">
<pre class="consoletext">Имя: Неизвестно  Возраст: 18
Имя: Bob  Возраст: 18
Имя: Sam  Возраст: 25
</pre>
</div>
<p>При этом если в классе определены конструкторы, то при создании объекта необходимо использовать один из этих конструкторов.</p>
<h3>Ключевое слово this</h3>
<p>Ключевое слово <span class="b">this</span> представляет ссылку на 
текущий экземпляр класса. В каких ситуациях оно нам может пригодиться? 
В примере выше определены три конструктора. Все три конструктора 
выполняют однотипные действия - устанавливают значения полей name и age.
 Но этих повторяющихся действий могло быть больше. 
И мы можем не дублировать функциональность конструкторов, а просто 
обращаться из одного конструктора к другому через ключевое слово this, 
передавая нужные значения для параметров:</p>
<div><div id="highlighter_400888" class="syntaxhighlighter  c#"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="c# keyword">class</code> <code class="c# plain">Person</code></div><div class="line number2 index1 alt1"><code class="c# plain">{</code></div><div class="line number3 index2 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">public</code> <code class="c# keyword">string</code> <code class="c# plain">name;</code></div><div class="line number4 index3 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">public</code> <code class="c# keyword">int</code> <code class="c# plain">age;</code></div><div class="line number5 index4 alt2">&nbsp;</div><div class="line number6 index5 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">public</code> <code class="c# plain">Person() : </code><code class="c# keyword">this</code><code class="c# plain">(</code><code class="c# string">"Неизвестно"</code><code class="c# plain">)</code></div><div class="line number7 index6 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">{</code></div><div class="line number8 index7 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">}</code></div><div class="line number9 index8 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">public</code> <code class="c# plain">Person(</code><code class="c# keyword">string</code> <code class="c# plain">name) : </code><code class="c# keyword">this</code><code class="c# plain">(name, 18)</code></div><div class="line number10 index9 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">{</code></div><div class="line number11 index10 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">}</code></div><div class="line number12 index11 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">public</code> <code class="c# plain">Person(</code><code class="c# keyword">string</code> <code class="c# plain">name, </code><code class="c# keyword">int</code> <code class="c# plain">age)</code></div><div class="line number13 index12 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">{</code></div><div class="line number14 index13 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">this</code><code class="c# plain">.name = name;</code></div><div class="line number15 index14 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">this</code><code class="c# plain">.age = age;</code></div><div class="line number16 index15 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">}</code></div><div class="line number17 index16 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">public</code> <code class="c# keyword">void</code> <code class="c# plain">GetInfo()</code></div><div class="line number18 index17 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">{</code></div><div class="line number19 index18 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">Console.WriteLine($</code><code class="c# string">"Имя: {name}&nbsp; Возраст: {age}"</code><code class="c# plain">);</code></div><div class="line number20 index19 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">}</code></div><div class="line number21 index20 alt2"><code class="c# plain">}</code></div></div></td></tr></tbody></table></div></div>
<p>В данном случае первый конструктор вызывает второй, а второй 
конструктор вызывает третий. По количеству и типу параметров компилятор 
узнает, 
какой именно конструктор вызывается. Например, во втором конструкторе:</p>
<div><div id="highlighter_261840" class="syntaxhighlighter  c#"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="c# keyword">public</code> <code class="c# plain">Person(</code><code class="c# keyword">string</code> <code class="c# plain">name) : </code><code class="c# keyword">this</code><code class="c# plain">(name, 18)</code></div><div class="line number2 index1 alt1"><code class="c# plain">{</code></div><div class="line number3 index2 alt2"><code class="c# plain">}</code></div></div></td></tr></tbody></table></div></div>
<p>идет обращение к третьему конструктору, которому передаются два 
значения. Причем в начале будет выполняться именно третий конструктор, и
 только потом код второго конструктора.</p>
<p>Также стоит отметить, что в третьем конструкторе параметры называются также, как и поля класса.</p>
<div><div id="highlighter_764349" class="syntaxhighlighter  c#"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="c# keyword">public</code> <code class="c# plain">Person(</code><code class="c# keyword">string</code> <code class="c# plain">name, </code><code class="c# keyword">int</code> <code class="c# plain">age)</code></div><div class="line number2 index1 alt1"><code class="c# plain">{</code></div><div class="line number3 index2 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">this</code><code class="c# plain">.name = name;</code></div><div class="line number4 index3 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">this</code><code class="c# plain">.age = age;</code></div><div class="line number5 index4 alt2"><code class="c# plain">}</code></div></div></td></tr></tbody></table></div></div>
<p>И чтобы разграничить параметры и поля класса, к полям класса обращение идет через ключевое слово this. 
Так, в выражении <code>this.name = name;</code> первая часть <code>this.name</code> означает, что name - это 
поле текущего класса, а не название параметра name. Если бы у нас параметры и поля назывались по-разному, то использовать слово 
<code>this</code> было бы необязательно. Также через ключевое слово this можно обращаться к любому полю или методу.</p>
<h3>Инициализаторы объектов</h3>
<p>Для инициализации объектов классов можно применять <span class="b">инициализаторы</span>. 
Инициализаторы представляют передачу в фигурных скобках значений доступным полям и свойствам объекта:</p>
<div><div id="highlighter_419043" class="syntaxhighlighter  c#"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="c# plain">Person tom = </code><code class="c# keyword">new</code> <code class="c# plain">Person { name = </code><code class="c# string">"Tom"</code><code class="c# plain">, age=31 };</code></div><div class="line number2 index1 alt1"><code class="c# plain">tom.GetInfo();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="c# comments">// Имя: Tom&nbsp; Возраст: 31</code></div></div></td></tr></tbody></table></div></div>
<p>С помощью инициализатора объектов можно присваивать значения всем 
доступным полям и свойствам объекта в момент создания без явного 
вызова конструктора.</p>
<p>При использовании инициализаторов следует учитывать следующие моменты:</p>
<ul>
<li><p>С помощью инициализатора мы можем установить значения только 
доступных из внешнего кода полей и свойств объекта. Например, в примере 
выше поля name и age 
имеют модификатор доступа public, поэтому они доступны из любой части 
программы.</p></li>
<li><p>Инициализатор выполняется после конструктора, поэтому если и в 
конструкторе, и в инициализаторе устанавливаются значения одних и тех же
 
полей и свойств, то значения, устанавливаемые в конструкторе, заменяются
 значениями из инициализатора.</p></li>
</ul>
<div style="margin-top:25px;clear:both;">
<style>
.bottom_dark { width: 300px; height: 250px; }
@media(min-width: 500px) { .bottom_dark { width: 336px; height: 280px; } }
@media(min-width: 760px) { .bottom_dark { width: 728px; height: 90px;  } }
@media(min-width: 1000px) { .bottom_dark { width: 336px; height: 280px;  } }
@media(min-width: 1122px) { .bottom_dark{ width: 728px; height: 90px;} }
@media(min-width: 1400px) { .bottom_dark{ width: 970px; height: 90px;} }
</style>
<!-- bottom_dark -->
<ins class="adsbygoogle bottom_dark" style="display:inline-block" data-ad-client="ca-pub-3716042175333627" data-ad-slot="5571426425"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
</div>

<div class="dop socialtop"><fieldset><legend>Дополнительные материалы</legend>
<ul>
<li><a title="Вопросы для самопроверки" href="https://metanit.com/sharp/questions/2.1.php"><i class="fa fa-lg fa-question"></i><span class="dop-txt">Вопросы для самопроверки</span></a></li>
<li><a title="Видео по статье" rel="nofollow" href="https://youtu.be/_yk5lMV-Bx0"><i class="fa fa-lg fa-youtube-play"></i><span class="dop-txt yt">Модуль 21. Классы и объекты в языке программирования C#</span></a></li>
</ul>
</fieldset></div>
<div class="nav"><p><a href="https://metanit.com/sharp/tutorial/2.19.php">Назад</a><a href="https://metanit.com/sharp/tutorial/">Содержание</a><a href="https://metanit.com/sharp/tutorial/2.13.php">Вперед</a></p></div></div>
<div class="socialBlock">
<div class="share socialbottom">
<ul>
<li><a title="Поделиться в Вконтакте" rel="nofollow" class="fa fa-lg fa-vk" onclick='window.open("http://vk.com/share.php?url=https://metanit.com/sharp/tutorial/3.1.php","Поделиться в ВКОНТАКТЕ","width=420,height=230,resizable=yes,scrollbars=yes,status=yes")'></a></li>
<li><a title="Поделиться в Одноклассниках" rel="nofollow" class="fa fa-lg fa-odnoklassniki" onclick='window.open("https://connect.ok.ru/offer?url=https://metanit.com/sharp/tutorial/3.1.php","Поделиться в Одноклассниках","width=420,height=230,resizable=yes,scrollbars=yes,status=yes")'></a></li>
<li><a title="Поделиться в Твиттере" rel="nofollow" class="fa fa-lg fa-twitter" onclick='window.open("http://twitter.com/share?url=https://metanit.com/sharp/tutorial/3.1.php","Поделиться в Твиттере","width=420,height=230,resizable=yes,scrollbars=yes,status=yes")'></a></li>
<li><a title="Поделиться в Фейсбуке" rel="nofollow" class="fa fa-lg fa-facebook" onclick='window.open("http://www.facebook.com/sharer.php?u=https://metanit.com/sharp/tutorial/3.1.php","Поделиться в Facebook","width=420,height=230,resizable=yes,scrollbars=yes,status=yes")'></a></li>
</ul>
</div>
</div>

<style>
.commentABl { margin: 25px 0px 15px 0px;}
@media(min-width: 860px) { .commentABl { margin: 35px 10px 15px 15px;  } }
</style>
<div class="commentABl" style="clear:both;">
<div id="yandex_rtb_R-A-201190-3" style="display:inline-block;width:320px;vertical-align:top; margin-right:12px;"></div>
<div id="yandex_rtb_R-A-201190-2" style="display:inline-block;width:320px;vertical-align:top;"></div>
</div>

<div id="disqus_thread" style="margin-left:8px;margin-right:8px;clear:both;"><iframe id="dsq-app3174" name="dsq-app3174" allowtransparency="true" scrolling="no" tabindex="0" title="Disqus" src="C%23%20%D0%B8%20.NET%20%D0%9A%D0%BB%D0%B0%D1%81%D1%81%D1%8B%20%D0%B8%20%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D1%8B_files/a.htm" style="height: 7560px !important;" horizontalscrolling="no" verticalscrolling="no" width="100%" frameborder="0"></iframe></div>
<script type="text/javascript">
var disqus_shortname = 'metanitcom';
(function() {
var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
(document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
})();
</script>
</div>
</div> 
<div id="menR" class="menR">
<style>
.dark_side { width: 300px; height: 250px; }
@media(min-width: 500px) { .dark_side { width: 336px; height: 280px; } }
@media(min-width: 1000px) { .dark_side { width: 160px; height: 600px; } }
</style>
<!-- dark_side -->
<ins class="adsbygoogle dark_side" style="display:inline-block" data-ad-client="ca-pub-3716042175333627" data-ad-slot="8886665532"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
<style>
.dn {font-size:12.5px;margin:3px;}
.dh{font-weight:bold;margin-left:2px;}
</style>
<div class="dn">
<div class="dh">Помощь сайту</div>
<div class="dh">WebMoney</div>
<ul>
<li>P378451176208</li>
<li>Z280152397659</li>
</ul>
<div class="dh">Yandex-деньги</div>
<ul>
<li>410011174743222</li>
</ul>
<div class="dh">PayPal</div>
<ul>
<li>metanit22@mail.ru</li>
</ul>
</div>

</div>
</div>
</div> 
<div class="menT" id="menT" style="max-height: 5281px;"><ul id="browser" class="filetree treeview"> 
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 1. Введение в C#</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/1.1.php">Язык C# и платформа .NET</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/1.2.php">Начало работы с Visual Studio. Первая программа</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/1.3.php">Компиляция в командной строке</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/1.4.php">Установка версии языка</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 2. Основы программирования на C#</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/1.5.php">Структура программы</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.25.php">Переменные</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.26.php">Литералы</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.1.php">Типы данных</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.15.php">Консольный ввод-вывод</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.3.php">Арифметические операции</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.22.php">Поразрядные операции</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.23.php">Операции присваивания</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.2.php">Преобразования базовых типов данных</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.24.php">Условные выражения</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.5.php">Условные конструкции</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.6.php">Циклы</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.4.php">Массивы</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.7.php">Программа сортировки массива</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.8.php">Методы</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.9.php">Параметры методов</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.27.php">Передача параметров по ссылке и значению. Выходные параметры</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.10.php">Массив параметров и ключевое слово params</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.18.php">Область видимости (контекст) переменных</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.11.php">Рекурсивные функции</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.12.php">Перечисления enum</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/2.19.php">Кортежи</a></span></li>
		</ul>
	</li>
	<li class="closed collapsable"><div class="hitarea closed-hitarea collapsable-hitarea"></div><span class="folder aMItem">Глава 3. Классы. Объектно-ориентированное программирование.</span>
		<ul style="display: block;">
			<li><span class="file aMItem"><a href="https://metanit.com/sharp/tutorial/3.1.php" class="aMItem">Классы и объекты</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.13.php">Структуры</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.16.php">Типы значений и ссылочные типы</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.25.php">Пространства имен, псевдонимы и статический импорт</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.46.php">Создание библиотеки классов</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.2.php">Модификаторы доступа</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.4.php">Свойства</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.5.php">Перегрузка методов</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.6.php">Статические члены и модификатор static</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.3.php">Константы, поля и структуры для чтения</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.36.php">Перегрузка операторов</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.26.php">Значение null</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/4.10.php">Индексаторы</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.7.php">Наследование</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.11.php">Преобразование типов</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.37.php">Перегрузка операций преобразования типов</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.19.php">Виртуальные методы и свойства</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.41.php">Сокрытие методов</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.42.php">Различие переопределения и сокрытия методов</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.8.php">Абстрактные классы</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.10.php">Класс System.Object и его методы</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.12.php">Обобщенные типы</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.38.php">Ограничения обобщений</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/3.39.php">Наследование обобщенных типов</a></span></li>
			</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 4. Обработка исключений</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.14.php">Конструкция try..catch..finally</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.28.php">Блок catch и фильтры исключений</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.29.php">Типы исключений. Класс Exception</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.17.php">Создание классов исключений</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.30.php">Поиск блока catch при обработке исключений</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/2.31.php">Генерация исключения и оператор throw</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 5. Делегаты, события и лямбды</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.13.php">Делегаты</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.43.php">Применение делегатов</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.15.php">Анонимные методы</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.16.php">Лямбды</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.14.php">События</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.28.php">Ковариантность и контравариантность делегатов</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/3.33.php">Делегаты Action, Predicate и Func</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 6. Интерфейсы</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.9.php">Определение интерфейсов</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.49.php">Применение интерфейсов</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.44.php">Явная реализация интерфейсов</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.47.php">Реализация интерфейсов в базовых и производных классах</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.48.php">Наследование интерфейсов</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.40.php">Интерфейсы в обобщениях</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.22.php">Копирование объектов. Интерфейс ICloneable</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.23.php">Сортировка объектов. Интерфейс IComparable</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/3.27.php">Ковариантность и контравариантность обобщенных интерфейсов</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 7. Дополнительные возможности ООП в C#</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.18.php">Методы расширения</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.21.php">Частичные классы и методы</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.20.php">Анонимные типы</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.20.php">Локальные функции</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.34.php">Pattern matching</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.35.php">Деконструкторы</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.45.php">Паттерны switch</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.17.php">Nullable-типы</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/2.21.php">Переменные-ссылки и возвращение ссылки</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 8. Объектно-ориентированное программирование. Практика</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.29.php">Создание проекта библиотеки классов</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.30.php">Создание классов. Часть 1</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.31.php">Создание классов. Часть 2</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/3.32.php">Создание главного проекта</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 9. Коллекции</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/4.3.php">ArrayList</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/4.5.php">Список List&lt;T&gt;</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/4.6.php">Двухсвязный список LinkedList&lt;T&gt;</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/4.7.php">Очередь Queue&lt;T&gt;</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/4.8.php">Стек Stack&lt;T&gt;</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/4.9.php">Словарь Dictionary&lt;T, V&gt;</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/4.13.php">Класс ObservableCollection</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/4.11.php">Интерфейсы IEnumerable и IEnumerator</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/4.12.php">Итераторы и оператор yield</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 10. Работа со строками</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/7.1.php">Строки и класс System.String</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/7.2.php">Операции со строками</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/7.5.php">Форматирование и интерполяция строк</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/7.3.php">Класс StringBuilder</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/7.4.php">Регулярные выражения</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 11. Работа с датами и временем</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/19.1.php">Структура DateTime</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/19.2.php">Форматирование дат и времени</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 12. Дополнительные классы и структуры .NET</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/20.1.php">Отложенная инициализация и тип Lazy</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/20.2.php">Математические вычисления и класс Math</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/20.4.php">Преобразование типов и класс Convert</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/20.5.php">Класс Array и массивы</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.33.php">Span</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/2.32.php">Индексы и диапазоны</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 13. Многопоточность</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/11.1.php">Введение в многопоточность. Класс Thread</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/11.2.php">Создание потоков. Делегат ThreadStart</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/11.3.php">Потоки с параметрами и ParameterizedThreadStart</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/11.4.php">Синхронизация потоков</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/11.5.php">Мониторы</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/11.6.php">Класс AutoResetEvent</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/11.7.php">Мьютексы</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/11.8.php">Семафоры</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/11.9.php">Таймеры</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 14. Параллельное программирование и библиотека TPL</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/12.1.php">Задачи и класс Task</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/12.2.php">Работа с классом Task</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/12.3.php">Задачи продолжения</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/12.4.php">Класс Parallel</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/12.5.php">Отмена задач и параллельных операций. CancellationToken</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 15. Aсинхронное программирование</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/13.3.php">Асинхронные методы, async и await</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/13.7.php">Возвращение результата из асинхронного метода</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/13.5.php">Последовательный и параллельный вызов асинхронных операций</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/13.4.php">Обработка ошибок в асинхронных методах</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/13.6.php">Отмена асинхронных операций</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/13.8.php">Асинхронные стримы</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 16. LINQ</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/15.1.php">Основы LINQ</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/15.2.php">Фильтрация выборки и проекция</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/15.3.php">Сортировка</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/15.4.php">Объединение, пересечение и разность коллекций</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/15.5.php">Агрегатные операции</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/15.11.php">Методы Skip и Take</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/15.6.php">Группировка</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/15.7.php">Соединение коллекций. Метод Join, GroupJoin и Zip</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/15.10.php">Методы All и Any</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/15.8.php">Отложенное и немедленное выполнение LINQ</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/15.9.php">Делегаты и анонимные методы в запросах LINQ</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 17. Parallel LINQ</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/17.1.php">Введение в Parallel LINQ. Метод AsParallel</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/17.2.php">Метод AsOrdered</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/17.3.php">Обработка ошибок и отмена параллельных операции</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 18. Рефлексия</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/14.1.php">Введение в рефлексию. Класс System.Type</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/14.2.php">Применение рефлексии и исследование типов</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/14.3.php">Динамическая загрузка сборок и позднее связывание</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/14.4.php">Атрибуты в .NET</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 19. Dynamic Language Runtime</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/9.1.php">DLR в C#. Ключевое слово dynamic</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/9.2.php">DynamicObject и ExpandoObject</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/9.3.php">Использование IronPython в .NET</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 20. Сборка мусора, управление памятью и указатели</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/8.1.php">Сборщик мусора в C#</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/8.2.php">Финализируемые объекты. Метод Dispose</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/8.5.php">Конструкция using</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/8.3.php">Указатели</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/8.4.php">Указатели на структуры, члены классов и массивы</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 21. Работа с потоками и файловой системой</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/5.1.php">Работа с дисками</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/5.2.php">Работа с каталогами</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/5.3.php">Работа с файлами. Классы File и FileInfo</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/5.4.php">FileStream. Чтение и запись файла</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/5.5.php">Чтение и запись текстовых файлов. StreamReader и StreamWriter</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/5.6.php">Бинарные файлы. BinaryWriter и BinaryReader</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/6.2.php">Бинарная сериализация. BinaryFormatter</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/5.7.php">Архивация и сжатие файлов</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 22. Работа с JSON</span>
		<ul style="display: none;">
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/6.5.php">Сериализация в JSON. JsonSerializer</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 23. Работа с XML</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/16.1.php">XML-Документы</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/16.2.php">Работа с XML с помощью System.Xml</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/16.3.php">Изменение XML-документа</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/16.4.php">XPath</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/16.5.php">Linq to Xml. Создание Xml-документа</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/16.6.php">Выборка элементов в LINQ to XML</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/16.7.php">Изменение документа в LINQ to XML</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/6.4.php">Сериализация в XML. XmlSerializer</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 24. Процессы и домены приложения</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/18.1.php">Процессы</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/18.2.php">Домены приложений</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/18.3.php">AssemblyLoadContext и динамическая загрузка и выгрузка сборок</a></span></li>
		</ul>
	</li>
	<li class="closed expandable lastExpandable"><div class="hitarea closed-hitarea expandable-hitarea lastExpandable-hitarea"></div><span class="folder">Глава 25. Валидация модели</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/22.1.php">Основы валидации модели</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/22.2.php">Атрибуты валидации</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/22.3.php">Создание своих атрибутов валидации</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/22.4.php">Самовалидация модели</a></span></li>
		</ul>
	</li>
</ul></div>
<div id="footer">

<div class="bootomLinks">
<a href="https://vk.com/metanit" title="Присоединиться к группе вконтакте" rel="nofollow">
Вконтакте</a>|
<a href="https://twitter.com/Eugene225" title="Подписаться на твит-ленту" rel="nofollow">
Twitter</a>|
<a href="https://www.youtube.com/user/Eugene22584/" title="Подписаться на канал на youtube" rel="nofollow">
Канал сайта на youtube</a>|
<a href="https://metanit.com/donations.php" rel="nofollow">Помощь сайту</a>
</div>
<p>Контакты для связи: metanit22@mail.ru</p>
<p>Copyright © metanit.com, 2012-2020. Все права защищены.</p>
</div>
</div>
<script type="text/javascript" src="C%23%20%D0%B8%20.NET%20%D0%9A%D0%BB%D0%B0%D1%81%D1%81%D1%8B%20%D0%B8%20%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D1%8B_files/jquery_002.js"></script>
<script type="text/javascript" src="C%23%20%D0%B8%20.NET%20%D0%9A%D0%BB%D0%B0%D1%81%D1%81%D1%8B%20%D0%B8%20%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D1%8B_files/jquery.js"></script>
<script type="text/javascript" src="C%23%20%D0%B8%20.NET%20%D0%9A%D0%BB%D0%B0%D1%81%D1%81%D1%8B%20%D0%B8%20%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D1%8B_files/syntax9.js"></script>
<script type="text/javascript">SyntaxHighlighter.all();</script>
<script>
$(function() { 
	$("#menuButton").on('click', function(){
          $(this).toggleClass('menu-opened');
          var mainmenu = $('.mainmenu');
          if (mainmenu.hasClass('open')) { 
            mainmenu.removeClass('open');
          }
          else {
            mainmenu.addClass('open');
          }
        });
	$('.submenu-button').on('click', function() {
            $(this).toggleClass('submenu-opened');
            if ($(this).siblings('ul').hasClass('open')) {
              $(this).siblings('ul').removeClass('open');
			  $(this).children('span').removeClass('open');
			  $(this).children('span').addClass('close');
            }
            else {
              $(this).siblings('ul').addClass('open');
			  $(this).children('span').removeClass('close');
			  $(this).children('span').addClass('open');
            }
          });
  $("#toggle-theme").on("click", function() {
		if(document.documentElement.hasAttribute("theme")){
			document.documentElement.removeAttribute("theme");
			document.cookie="theme=1;expires=Mon, 19 Feb 2001 12:00:00 UTC;path=/;";
		}
		else{
			document.documentElement.setAttribute("theme", "dark");
			var expire = new Date();
			expire.setHours(expire.getHours() + 7);
			document.cookie="theme=1;expires=" + expire.toUTCString() + ";path=/;";
		}
	});
	$('#magnifying-glass').on('click', function() {
            if ($('#search').hasClass('transp')) {
              $('#search').removeClass('transp').show();
            }
            else {
              $('#search').addClass('transp').hide();
            }
          });
	$('#browser').treeview();$('#navigation').treeview({persist: 'location',collapsed: true, unique: true});
	
	$("li:contains('Глава 3.')").removeClass('expandable').addClass('collapsable').children('ul').css({"display":"block"});
	$("li:contains('Глава 3.')").children('div').removeClass('expandable-hitarea').addClass('collapsable-hitarea');
	$("li:contains('Глава .')").removeClass('lastExpandable').addClass('lastCollapsable').children('ul').css({"display":"block"});
	$("li:contains('Глава .')").children('div').removeClass('lastExpandable-hitarea').addClass('lastCollapsable-hitarea');
	
var url = "//metanit.com" + location.pathname;
	$('.file a[href="' + url + '"]').addClass('aMItem').parent().addClass('aMItem').closest('li.collapsable').find('span.folder').addClass('aMItem');
	

	$(".fa-bars").on('click', function() {
		$(".menT").toggleClass("menTOpened");
		$("#content_right_inner").toggleClass("contentRightInnerOpened");
	});
	
	$(".share .fa-vk").attr('onclick','window.open("http://vk.com/share.php?url=' + window.location.href+'","Поделиться в ВКОНТАКТЕ","width=420,height=230,resizable=yes,scrollbars=yes,status=yes")');
	$(".share .fa-odnoklassniki").attr('onclick','window.open("https://connect.ok.ru/offer?url=' + window.location.href+'","Поделиться в Одноклассниках","width=420,height=230,resizable=yes,scrollbars=yes,status=yes")');
	$(".share .fa-twitter").attr('onclick','window.open("http://twitter.com/share?url=' + window.location.href+'","Поделиться в Твиттере","width=420,height=230,resizable=yes,scrollbars=yes,status=yes")');
	$(".share .fa-facebook").attr('onclick','window.open("http://www.facebook.com/sharer.php?u=' + window.location.href +'","Поделиться в Facebook","width=420,height=230,resizable=yes,scrollbars=yes,status=yes")');
});
</script>
<script>
window.onload= function(){
	setMenC();
};
window.onresize= function(){
	setMenC();
};

function setMenC(){
	if(window.innerWidth >859){
			
		var h = document.getElementById("articleText").clientHeight;
		document.getElementById("menT").style.maxHeight=h + "px";
	}
}
</script>
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-35780297-1', 'metanit.com');
  ga('send', 'pageview');

</script>

<script async="" defer="defer" type="text/javascript" src="C%23%20%D0%B8%20.NET%20%D0%9A%D0%BB%D0%B0%D1%81%D1%81%D1%8B%20%D0%B8%20%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D1%8B_files/brand"></script>
<script type="text/javascript">
    (function(w, d, n, s, t) {
        w[n] = w[n] || [];
        w[n].push(function() {
            Ya.Context.AdvManager.render({
                blockId: "R-A-201190-3",
                renderTo: "yandex_rtb_R-A-201190-3",
                horizontalAlign: false,
                async: true
            });
        });
        t = d.getElementsByTagName("script")[0];
        s = d.createElement("script");
        s.type = "text/javascript";
        s.src = "//an.yandex.ru/system/context.js";
        s.async = true;
        t.parentNode.insertBefore(s, t);
    })(this, this.document, "yandexContextAsyncCallbacks");
</script>
<script type="text/javascript">
    (function(w, d, n, s, t) {
        w[n] = w[n] || [];
        w[n].push(function() {
            Ya.Context.AdvManager.render({
                blockId: "R-A-201190-2",
                renderTo: "yandex_rtb_R-A-201190-2",
                async: true
            });
        });
        t = d.getElementsByTagName("script")[0];
        s = d.createElement("script");
        s.type = "text/javascript";
        s.src = "//an.yandex.ru/system/context.js";
        s.async = true;
        t.parentNode.insertBefore(s, t);
    })(this, this.document, "yandexContextAsyncCallbacks");
</script>

<iframe style="display: none;"></iframe></body></html>