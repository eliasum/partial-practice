<!DOCTYPE html>
<html theme="dark"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<title>C# и .NET | Обобщения</title>
<meta charset="utf-8">
<meta name="description" content="Обобщения (generics) в языке пограммирования C#, универсальный параметр T, универсальные шаблоны, упаковка и распаковка объектов, boxing и unboxing, обобщенные типы и методы">
<meta name="viewport" content="width=device-width">
<link href="C%23%20%D0%B8%20.NET%20%D0%9E%D0%B1%D0%BE%D0%B1%D1%89%D0%B5%D0%BD%D0%B8%D1%8F_files/style30.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="C%23%20%D0%B8%20.NET%20%D0%9E%D0%B1%D0%BE%D0%B1%D1%89%D0%B5%D0%BD%D0%B8%D1%8F_files/context.js" async=""></script><script type="text/javascript" src="C%23%20%D0%B8%20.NET%20%D0%9E%D0%B1%D0%BE%D0%B1%D1%89%D0%B5%D0%BD%D0%B8%D1%8F_files/context.js" async=""></script><script async="" src="C%23%20%D0%B8%20.NET%20%D0%9E%D0%B1%D0%BE%D0%B1%D1%89%D0%B5%D0%BD%D0%B8%D1%8F_files/analytics.js"></script><script type="text/javascript" async="" src="C%23%20%D0%B8%20.NET%20%D0%9E%D0%B1%D0%BE%D0%B1%D1%89%D0%B5%D0%BD%D0%B8%D1%8F_files/embed.js"></script><link rel="prefetch" as="style" href="C%23%20%D0%B8%20.NET%20%D0%9E%D0%B1%D0%BE%D0%B1%D1%89%D0%B5%D0%BD%D0%B8%D1%8F_files/a_data/lounge.css"><link rel="prefetch" as="script" href="C%23%20%D0%B8%20.NET%20%D0%9E%D0%B1%D0%BE%D0%B1%D1%89%D0%B5%D0%BD%D0%B8%D1%8F_files/a_data/common.js"><link rel="prefetch" as="script" href="C%23%20%D0%B8%20.NET%20%D0%9E%D0%B1%D0%BE%D0%B1%D1%89%D0%B5%D0%BD%D0%B8%D1%8F_files/a_data/lounge.js"><link rel="prefetch" as="script" href="C%23%20%D0%B8%20.NET%20%D0%9E%D0%B1%D0%BE%D0%B1%D1%89%D0%B5%D0%BD%D0%B8%D1%8F_files/a_data/config.js"></head>
<body>
<div id="container">

<div id="header">
<div id="logo">
<a class="logoTitle" href="https://metanit.com/" title="На главную">METANIT.COM</a>
<div class="logoDefinition">Сайт о программировании</div> 
</div>

<div class="socialbtns">
<ul>
<li><a title="Посмотреть меню" rel="nofollow" class="fa fa-lg fa-bars"></a></li>
<li><a href="https://metanit.com/donations.php" title="Помощь сайту" rel="nofollow" class="fa fa-lg fa-usd"></a></li>
<li><a href="https://vk.com/metanit" title="Группа в ВКонтакте" rel="nofollow" class="fa fa-lg fa-vk"></a></li>
<li><a href="https://twitter.com/Eugene225" title="Твиттер" rel="nofollow" class="fa fa-lg fa-twitter"></a></li>
<li><a href="https://www.facebook.com/metanitcom" title="Страница в Facebook" rel="nofollow" class="fa fa-lg fa-facebook"></a></li>
<li><a href="https://www.youtube.com/user/Eugene22584/" title="Канал сайта на Youtube" rel="nofollow" class="fa fa-lg fa-youtube"></a></li>
<li><a href="https://t.me/metanit" title="Телеграмм" class="fa fa-lg fa-tel"></a></li>
<li><i id="toggle-theme" class="fa fa-lg fa-adjust"></i></li>
</ul>
</div>

<div id="search" class="transp">
<form action="https://www.google.ru" id="cse-search-box">
  <div>
    <input type="hidden" name="cx" value="partner-pub-3716042175333627:1096498938">
    <input type="hidden" name="ie" value="UTF-8">
    <input type="text" name="q" style="border: 1px solid rgb(126, 157, 185); padding: 2px; background: rgb(255, 255, 255) url(&quot;https://www.google.com/cse/static/images/1x/googlelogo_lightgrey_46x16dp.png&quot;) no-repeat scroll left center; text-indent: 48px;" placeholder="Пользовательского поиска">
    <input type="submit" name="sa" value="Найти">
  </div>
<input name="siteurl" type="hidden" value="metanit.com/sharp/tutorial/3.12.php"><input name="ref" type="hidden" value="metanit.com/sharp/tutorial/3.12.php"><input name="ss" type="hidden"></form>
</div>
<div class="icon-vk"></div>
<div id="magnifying-glass"></div>

<div class="menuButton" id="menuButton">
	<span class="icon-bar"></span>
    <span class="icon-bar"></span>
    <span class="icon-bar"></span>
</div>

<div id="menu" class="menu">
<ul class="mainmenu">
   <li><a href="https://metanit.com/sharp/">C#/.NET</a></li>
   <li><a href="https://metanit.com/java/">Java</a></li>
   <li><a href="https://metanit.com/web/">WEB</a></li>
   <li><a href="https://metanit.com/python/">Python</a></li>
   <li><a href="https://metanit.com/cpp/">C/C++</a></li>
   <li><a href="https://metanit.com/sql/">SQL</a></li>
   <li><a href="https://metanit.com/nosql/mongodb/">MongoDB</a></li>
   <li><a href="https://metanit.com/go/">Go</a></li>
   <li><a href="https://metanit.com/visualbasic/tutorial/">VB.NET</a></li>
   <li><a href="https://metanit.com/swift/tutorial/">Swift</a></li>
   <li><a href="https://metanit.com/kotlin/tutorial/">Kotlin</a></li>
   <li><a href="https://metanit.com/dart/">Dart</a></li>
</ul>
</div>
</div>
<div id="content_right"> 
<div id="content_right_inner"> 
<div id="content_center"> 
<div id="menC" class="menC">
<div class="articleText" id="articleText">
<h2>Обобщения</h2><div class="date">Последнее обновление: 28.09.2017</div>

<div class="socialBlock">
<div class="share socialtop">
<ul>
<li><a title="Поделиться в Вконтакте" rel="nofollow" class="fa fa-lg fa-vk" onclick='window.open("http://vk.com/share.php?url=https://metanit.com/sharp/tutorial/3.12.php","Поделиться в ВКОНТАКТЕ","width=420,height=230,resizable=yes,scrollbars=yes,status=yes")'></a></li>
<li><a title="Поделиться в Одноклассниках" rel="nofollow" class="fa fa-lg fa-odnoklassniki" onclick='window.open("https://connect.ok.ru/offer?url=https://metanit.com/sharp/tutorial/3.12.php","Поделиться в Одноклассниках","width=420,height=230,resizable=yes,scrollbars=yes,status=yes")'></a></li>
<li><a title="Поделиться в Твиттере" rel="nofollow" class="fa fa-lg fa-twitter" onclick='window.open("http://twitter.com/share?url=https://metanit.com/sharp/tutorial/3.12.php","Поделиться в Твиттере","width=420,height=230,resizable=yes,scrollbars=yes,status=yes")'></a></li>
<li><a title="Поделиться в Фейсбуке" rel="nofollow" class="fa fa-lg fa-facebook" onclick='window.open("http://www.facebook.com/sharer.php?u=https://metanit.com/sharp/tutorial/3.12.php","Поделиться в Facebook","width=420,height=230,resizable=yes,scrollbars=yes,status=yes")'></a></li>
</ul>
</div>

</div>

<div style="margin-top:23px;margin-left:5px;">
<script async="" src="C%23%20%D0%B8%20.NET%20%D0%9E%D0%B1%D0%BE%D0%B1%D1%89%D0%B5%D0%BD%D0%B8%D1%8F_files/adsbygoogle.js"></script>
<style>
.footer-adaptive { width: 320px; height: 100px; }
@media(min-width: 480px) { .footer-adaptive { width: 468px; height: 60px; } }
@media(min-width: 760px) { .footer-adaptive { width: 728px; height: 90px;  } }
@media(min-width: 1000px) { .footer-adaptive { width: 468px; height: 60px;  } }
@media(min-width: 1122px) { .footer-adaptive{ width: 728px; height: 90px;} }
@media(min-width: 1400px) { .footer-adaptive { width: 970px; height: 90px;} }
</style>
<!-- footer_adaptive -->
<ins class="adsbygoogle footer-adaptive" style="display:inline-block" data-ad-client="ca-pub-3716042175333627" data-ad-slot="9659512088"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
</div>

<p>Кроме обычных типов фреймворк .NET также поддерживает обобщенные типы
 (generics), а также создание обобщенных методов. 
Чтобы разобраться в особенности данного явления, сначала посмотрим на 
проблему, которая могла возникнуть до появления обобщенных 
типов. Посмотрим на примере. Допустим, мы определяем класс для 
представления банковского счета. К примеру, он мог бы выглядеть 
следующим образом:</p>
<div><div id="highlighter_627919" class="syntaxhighlighter  c#"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="c# keyword">class</code> <code class="c# plain">Account</code></div><div class="line number2 index1 alt1"><code class="c# plain">{</code></div><div class="line number3 index2 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">public</code> <code class="c# keyword">int</code> <code class="c# plain">Id { </code><code class="c# keyword">get</code><code class="c# plain">; </code><code class="c# keyword">set</code><code class="c# plain">; }</code></div><div class="line number4 index3 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">public</code> <code class="c# keyword">int</code> <code class="c# plain">Sum { </code><code class="c# keyword">get</code><code class="c# plain">; </code><code class="c# keyword">set</code><code class="c# plain">; }</code></div><div class="line number5 index4 alt2"><code class="c# plain">}</code></div></div></td></tr></tbody></table></div></div>
<p>Класс Account определяет два свойства: Id - уникальный идентификатор и Sum - сумму на счете.</p>
<p>Здесь идентификатор задан как числовое значение, то есть банковские 
счета будут иметь значения 1, 2, 3, 4 и так далее. 
Однако также нередко для идентификатора используются и строковые 
значения. И у числовых, и у строковых значений есть свои плюсы и минусы.
 И на момент 
написания класса мы можем точно не знать, что лучше выбрать для хранения
 идентификатора - строки или числа. Либо, возможно, этот класс будет 
использоваться другими разработчиками, 
которые могут иметь свое мнение по данной проблеме.</p>
<p>И на первый взгляд, чтобы выйти из подобной ситуации, мы можем 
определить свойство Id как свойство типа object. Так как тип object 
является 
универсальным типом, от которого наследуется все типы, соответственно в 
свойствах подобного типа мы можем сохранить и строки, и числа:</p>
<div><div id="highlighter_803039" class="syntaxhighlighter  c#"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="c# keyword">class</code> <code class="c# plain">Account</code></div><div class="line number2 index1 alt1"><code class="c# plain">{</code></div><div class="line number3 index2 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">public</code> <code class="c# keyword">object</code> <code class="c# plain">Id { </code><code class="c# keyword">get</code><code class="c# plain">; </code><code class="c# keyword">set</code><code class="c# plain">; }</code></div><div class="line number4 index3 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">public</code> <code class="c# keyword">int</code> <code class="c# plain">Sum { </code><code class="c# keyword">get</code><code class="c# plain">; </code><code class="c# keyword">set</code><code class="c# plain">; }</code></div><div class="line number5 index4 alt2"><code class="c# plain">}</code></div></div></td></tr></tbody></table></div></div>
<p>Затем этот класс можно было использовать для создания банковских счетов в программе:</p>
<div><div id="highlighter_687038" class="syntaxhighlighter  c#"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="c# plain">Account account1 = </code><code class="c# keyword">new</code> <code class="c# plain">Account { Sum = 5000 };</code></div><div class="line number2 index1 alt1"><code class="c# plain">Account account2 = </code><code class="c# keyword">new</code> <code class="c# plain">Account { Sum = 4000 };</code></div><div class="line number3 index2 alt2"><code class="c# plain">account1.Id = 2;</code></div><div class="line number4 index3 alt1"><code class="c# plain">account2.Id = </code><code class="c# string">"4356"</code><code class="c# plain">;</code></div><div class="line number5 index4 alt2"><code class="c# keyword">int</code> <code class="c# plain">id1 = (</code><code class="c# keyword">int</code><code class="c# plain">)account1.Id;</code></div><div class="line number6 index5 alt1"><code class="c# keyword">string</code> <code class="c# plain">id2 = (</code><code class="c# keyword">string</code><code class="c# plain">)account2.Id;</code></div><div class="line number7 index6 alt2"><code class="c# plain">Console.WriteLine(id1);</code></div><div class="line number8 index7 alt1"><code class="c# plain">Console.WriteLine(id2);</code></div></div></td></tr></tbody></table></div></div>
<p>Все вроде замечательно работает, но такое решение является не очень 
оптимальным. Дело в том, что в данном случае мы сталкиваемся с такими 
явлениями как <span class="b">упаковка (boxing)</span> и <span class="b">распаковка (unboxing)</span>.</p>
<p>Так, при присвоении свойству Id значения типа int, происходит упаковка этого значения в тип Object:</p>
<div><div id="highlighter_476786" class="syntaxhighlighter  c#"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="c# plain">account1.Id = 2;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="c# comments">// упаковка в значения int в тип Object</code></div></div></td></tr></tbody></table></div></div>
<p>Чтобы обратно получить данные в переменную типов int, необходимо выполнить распаковку:</p>
<div><div id="highlighter_288862" class="syntaxhighlighter  c#"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="c# keyword">int</code> <code class="c# plain">id1 = (</code><code class="c# keyword">int</code><code class="c# plain">)account1.Id;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="c# comments">// Распаковка в тип int</code></div></div></td></tr></tbody></table></div></div>
<p>Упаковка (boxing) предполагает преобразование объекта значимого типа 
(например, типа int) к типу object. При упаковке общеязыковая среда 
CLR обертывает значение в объект типа <span class="b">System.Object</span> и сохраняет его в управляемой куче (хипе). 
Распаковка (unboxing), наоборот, предполагает преобразование объекта типа object к значимому типу. Упаковка и 
распаковка ведут к снижению производительности, так как системе надо осуществить необходимые преобразования.</p>
<p>Кроме того, существует другая проблема - проблема безопасности типов.
 Так, мы получим ошибку во время выполнения программы, если 
напишем следующим образом:</p>
<div><div id="highlighter_333520" class="syntaxhighlighter  c#"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="c# plain">Account account2 = </code><code class="c# keyword">new</code> <code class="c# plain">Account { Sum = 4000 };</code></div><div class="line number2 index1 alt1"><code class="c# plain">account2.Id = </code><code class="c# string">"4356"</code><code class="c# plain">;</code></div><div class="line number3 index2 alt2"><code class="c# keyword">int</code> <code class="c# plain">id2 = (</code><code class="c# keyword">int</code><code class="c# plain">)account2.Id;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="c# comments">// Исключение InvalidCastException</code></div></div></td></tr></tbody></table></div></div>
<p>Мы можем не знать, какой именно объект представляет Id, и при попытке
 получить число в данном случае мы столкнемся с исключением 
InvalidCastException.</p>
<p>Эти проблемы были призваны устранить <span class="b">обобщенные типы</span> (также часто называют универсальными типами). Обобщенные типы позволяют указать конкретный тип, который будет использоваться. 
Поэтому определим класс Account как обощенный:</p>
<div><div id="highlighter_601662" class="syntaxhighlighter  c#"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="c# keyword">class</code> <code class="c# plain">Account&lt;T&gt;</code></div><div class="line number2 index1 alt1"><code class="c# plain">{</code></div><div class="line number3 index2 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">public</code> <code class="c# plain">T Id { </code><code class="c# keyword">get</code><code class="c# plain">; </code><code class="c# keyword">set</code><code class="c# plain">; }</code></div><div class="line number4 index3 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">public</code> <code class="c# keyword">int</code> <code class="c# plain">Sum { </code><code class="c# keyword">get</code><code class="c# plain">; </code><code class="c# keyword">set</code><code class="c# plain">; }</code></div><div class="line number5 index4 alt2"><code class="c# plain">}</code></div></div></td></tr></tbody></table></div></div>
<p>Угловые скобки в описании <code>class Account&lt;T&gt;</code> 
указывают, что класс является обобщенным,  а тип T, заключенный в 
угловые 
скобки, будет использоваться этим классом. Необязательно использовать 
именно букву T, это может быть и любая другая буква или набор символов. 
Причем сейчас нам неизвестно, что это будет за тип, это может быть любой
 тип. Поэтому параметр <span class="b">T</span> в угловых скобках 
еще называется <span class="b">универсальным параметром</span>, так как вместо него можно подставить любой тип.</p>
<p>Например, вместо параметра T можно использовать объект int, то есть 
число, представляющее номер счета. Это также может быть объект string, 
либо или любой другой класс или 
структура:</p> 
<div><div id="highlighter_595111" class="syntaxhighlighter  c#"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="c# plain">Account&lt;</code><code class="c# keyword">int</code><code class="c# plain">&gt; account1 = </code><code class="c# keyword">new</code> <code class="c# plain">Account&lt;</code><code class="c# keyword">int</code><code class="c# plain">&gt; { Sum = 5000 };</code></div><div class="line number2 index1 alt1"><code class="c# plain">Account&lt;</code><code class="c# keyword">string</code><code class="c# plain">&gt; account2 = </code><code class="c# keyword">new</code> <code class="c# plain">Account&lt;</code><code class="c# keyword">string</code><code class="c# plain">&gt; { Sum = 4000 };</code></div><div class="line number3 index2 alt2"><code class="c# plain">account1.Id = 2;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="c# comments">// упаковка не нужна</code></div><div class="line number4 index3 alt1"><code class="c# plain">account2.Id = </code><code class="c# string">"4356"</code><code class="c# plain">;</code></div><div class="line number5 index4 alt2"><code class="c# keyword">int</code> <code class="c# plain">id1 = account1.Id;&nbsp; </code><code class="c# comments">// распаковка не нужна</code></div><div class="line number6 index5 alt1"><code class="c# keyword">string</code> <code class="c# plain">id2 = account2.Id;</code></div><div class="line number7 index6 alt2"><code class="c# plain">Console.WriteLine(id1);</code></div><div class="line number8 index7 alt1"><code class="c# plain">Console.WriteLine(id2);</code></div></div></td></tr></tbody></table></div></div>
<p>Поскольку класс Account является обобщенным, то при определении 
переменной после названия типа в угловых скобках необходимо указать тот 
тип, 
который будет использоваться вместо универсального параметра T. В данном
 случае объекты Account типизируется типами int и string:</p>
<div><div id="highlighter_773282" class="syntaxhighlighter  c#"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="c# plain">Account&lt;</code><code class="c# keyword">int</code><code class="c# plain">&gt; account1 = </code><code class="c# keyword">new</code> <code class="c# plain">Account&lt;</code><code class="c# keyword">int</code><code class="c# plain">&gt; { Sum = 5000 };</code></div><div class="line number2 index1 alt1"><code class="c# plain">Account&lt;</code><code class="c# keyword">string</code><code class="c# plain">&gt; account2 = </code><code class="c# keyword">new</code> <code class="c# plain">Account&lt;</code><code class="c# keyword">string</code><code class="c# plain">&gt; { Sum = 4000 };</code></div></div></td></tr></tbody></table></div></div>
<p>Поэтому у первого объекта account1 свойство Id будет иметь тип int, а у объекта account2 - тип string.</p>
<p>При попытке присвоить значение свойства Id переменной другого типа мы получим ошибку компиляции:</p>
<div><div id="highlighter_527296" class="syntaxhighlighter  c#"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="c# plain">Account&lt;</code><code class="c# keyword">string</code><code class="c# plain">&gt; account2 = </code><code class="c# keyword">new</code> <code class="c# plain">Account&lt;</code><code class="c# keyword">string</code><code class="c# plain">&gt; { Sum = 4000 };</code></div><div class="line number2 index1 alt1"><code class="c# plain">account2.Id = </code><code class="c# string">"4356"</code><code class="c# plain">;</code></div><div class="line number3 index2 alt2"><code class="c# keyword">int</code> <code class="c# plain">id1 = account2.Id;&nbsp; </code><code class="c# comments">// ошибка компиляции</code></div></div></td></tr></tbody></table></div></div>
<p>Тем самым мы избежим проблем с типобезопасностью. Таким образом, 
используя обобщенный вариант класса, мы снижаем время на выполнение и 
количество потенциальных ошибок.</p>
<h3>Значения по умолчанию</h3>
<p>Иногда возникает необходимость присвоить переменным универсальных 
параметров некоторое начальное значение, в том числе и null. Но напрямую
 мы его 
присвоить не можем:</p>
<div><div id="highlighter_654277" class="syntaxhighlighter  c#"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="c# plain">T id = </code><code class="c# keyword">null</code><code class="c# plain">;</code></div></div></td></tr></tbody></table></div></div>
<p>В этом случае нам надо использовать оператор <span class="b">default(T)</span>. Он присваивает ссылочным типам в качестве значения null, а типам значений - значение 0:</p>
<div><div id="highlighter_502133" class="syntaxhighlighter  c#"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="c# keyword">class</code> <code class="c# plain">Account&lt;T&gt;</code></div><div class="line number2 index1 alt1"><code class="c# plain">{</code></div><div class="line number3 index2 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">T id = </code><code class="c# keyword">default</code><code class="c# plain">(T);</code></div><div class="line number4 index3 alt1"><code class="c# plain">}</code></div></div></td></tr></tbody></table></div></div>
<h3>Статические поля обобщенных классов</h3>
<p>При типизации обобщенного класса определенным типом будет создаваться
 свой набор статических членов. Например, в классе Account определено 
следующее статическое поле:</p>
<div><div id="highlighter_463903" class="syntaxhighlighter  c#"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="c# keyword">class</code> <code class="c# plain">Account&lt;T&gt;</code></div><div class="line number2 index1 alt1"><code class="c# plain">{</code></div><div class="line number3 index2 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">public</code> <code class="c# keyword">static</code> <code class="c# plain">T session;</code></div><div class="line number4 index3 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number5 index4 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">public</code> <code class="c# plain">T Id { </code><code class="c# keyword">get</code><code class="c# plain">; </code><code class="c# keyword">set</code><code class="c# plain">; }</code></div><div class="line number6 index5 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">public</code> <code class="c# keyword">int</code> <code class="c# plain">Sum { </code><code class="c# keyword">get</code><code class="c# plain">; </code><code class="c# keyword">set</code><code class="c# plain">; }</code></div><div class="line number7 index6 alt2"><code class="c# plain">}</code></div></div></td></tr></tbody></table></div></div>
<p>Теперь типизируем класс двумя типами int и string:</p>
<div><div id="highlighter_406102" class="syntaxhighlighter  c#"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="c# plain">Account&lt;</code><code class="c# keyword">int</code><code class="c# plain">&gt; account1 = </code><code class="c# keyword">new</code> <code class="c# plain">Account&lt;</code><code class="c# keyword">int</code><code class="c# plain">&gt; { Sum = 5000 };</code></div><div class="line number2 index1 alt1"><code class="c# plain">Account&lt;</code><code class="c# keyword">int</code><code class="c# plain">&gt;.session = 5436;</code></div><div class="line number3 index2 alt2">&nbsp;</div><div class="line number4 index3 alt1"><code class="c# plain">Account&lt;</code><code class="c# keyword">string</code><code class="c# plain">&gt; account2 = </code><code class="c# keyword">new</code> <code class="c# plain">Account&lt;</code><code class="c# keyword">string</code><code class="c# plain">&gt; { Sum = 4000 };</code></div><div class="line number5 index4 alt2"><code class="c# plain">Account&lt;</code><code class="c# keyword">string</code><code class="c# plain">&gt;.session = </code><code class="c# string">"45245"</code><code class="c# plain">;</code></div><div class="line number6 index5 alt1">&nbsp;</div><div class="line number7 index6 alt2"><code class="c# plain">Console.WriteLine(Account&lt;</code><code class="c# keyword">int</code><code class="c# plain">&gt;.session);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="c# comments">// 5436</code></div><div class="line number8 index7 alt1"><code class="c# plain">Console.WriteLine(Account&lt;</code><code class="c# keyword">string</code><code class="c# plain">&gt;.session);&nbsp;&nbsp; </code><code class="c# comments">// 45245</code></div></div></td></tr></tbody></table></div></div>
<p>В итоге для Account&lt;string&gt; и для Account&lt;int&gt; будет создана своя переменная session.</p>
<h3>Использование нескольких универсальных параметров</h3>
<p>Обобщения могут использовать несколько универсальных параметров одновременно, которые могут представлять различные типы:</p>
<div><div id="highlighter_377580" class="syntaxhighlighter  c#"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="c# keyword">class</code> <code class="c# plain">Transaction&lt;U, V&gt;</code></div><div class="line number2 index1 alt1"><code class="c# plain">{</code></div><div class="line number3 index2 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">public</code> <code class="c# plain">U FromAccount { </code><code class="c# keyword">get</code><code class="c# plain">; </code><code class="c# keyword">set</code><code class="c# plain">; }&nbsp; </code><code class="c# comments">// с какого счета перевод</code></div><div class="line number4 index3 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">public</code> <code class="c# plain">U ToAccount { </code><code class="c# keyword">get</code><code class="c# plain">; </code><code class="c# keyword">set</code><code class="c# plain">; }&nbsp;&nbsp;&nbsp; </code><code class="c# comments">// на какой счет перевод</code></div><div class="line number5 index4 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">public</code> <code class="c# plain">V Code { </code><code class="c# keyword">get</code><code class="c# plain">; </code><code class="c# keyword">set</code><code class="c# plain">; }&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="c# comments">// код операции</code></div><div class="line number6 index5 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">public</code> <code class="c# keyword">int</code> <code class="c# plain">Sum { </code><code class="c# keyword">get</code><code class="c# plain">; </code><code class="c# keyword">set</code><code class="c# plain">; }&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="c# comments">// сумма перевода</code></div><div class="line number7 index6 alt2"><code class="c# plain">}</code></div></div></td></tr></tbody></table></div></div>
<p>Здесь класс Transaction использует два универсальных параметра. Применим данный класс:</p>
<div><div id="highlighter_459829" class="syntaxhighlighter  c#"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="c# plain">Account&lt;</code><code class="c# keyword">int</code><code class="c# plain">&gt; acc1 = </code><code class="c# keyword">new</code> <code class="c# plain">Account&lt;</code><code class="c# keyword">int</code><code class="c# plain">&gt; { Id = 1857, Sum = 4500 };</code></div><div class="line number2 index1 alt1"><code class="c# plain">Account&lt;</code><code class="c# keyword">int</code><code class="c# plain">&gt; acc2 = </code><code class="c# keyword">new</code> <code class="c# plain">Account&lt;</code><code class="c# keyword">int</code><code class="c# plain">&gt; { Id = 3453, Sum = 5000 };</code></div><div class="line number3 index2 alt2">&nbsp;</div><div class="line number4 index3 alt1"><code class="c# plain">Transaction&lt;Account&lt;</code><code class="c# keyword">int</code><code class="c# plain">&gt;, </code><code class="c# keyword">string</code><code class="c# plain">&gt; transaction1 = </code><code class="c# keyword">new</code> <code class="c# plain">Transaction&lt;Account&lt;</code><code class="c# keyword">int</code><code class="c# plain">&gt;, </code><code class="c# keyword">string</code><code class="c# plain">&gt;</code></div><div class="line number5 index4 alt2"><code class="c# plain">{</code></div><div class="line number6 index5 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">FromAccount = acc1,</code></div><div class="line number7 index6 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">ToAccount = acc2,</code></div><div class="line number8 index7 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">Code = </code><code class="c# string">"45478758"</code><code class="c# plain">,</code></div><div class="line number9 index8 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">Sum = 900</code></div><div class="line number10 index9 alt1"><code class="c# plain">};</code></div></div></td></tr></tbody></table></div></div>
<p>Здесь объект Transaction типизируется типами Account&lt;int&gt; и 
string. То есть в качестве универсального параметра U используется 
класс Account&lt;int&gt;, а для параметра V - тип string. При этом, как 
можно заметить, класс, которым типизируется Transaction, сам является 
обобщенным.</p>
<h3>Обобщенные методы</h3>
<p>Кроме обобщенных классов можно также создавать обобщенные методы, 
которые точно также будут использовать универсальные параметры. 
Например:</p>
<div><div id="highlighter_605836" class="syntaxhighlighter  c#"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="c# keyword">class</code> <code class="c# plain">Program</code></div><div class="line number2 index1 alt1"><code class="c# plain">{</code></div><div class="line number3 index2 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">private</code> <code class="c# keyword">static</code> <code class="c# keyword">void</code> <code class="c# plain">Main(</code><code class="c# keyword">string</code><code class="c# plain">[] args)</code></div><div class="line number4 index3 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">{</code></div><div class="line number5 index4 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">int</code> <code class="c# plain">x = 7;</code></div><div class="line number6 index5 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">int</code> <code class="c# plain">y = 25;</code></div><div class="line number7 index6 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">Swap&lt;</code><code class="c# keyword">int</code><code class="c# plain">&gt;(</code><code class="c# keyword">ref</code> <code class="c# plain">x, </code><code class="c# keyword">ref</code> <code class="c# plain">y); </code><code class="c# comments">// или так Swap(ref x, ref y);</code></div><div class="line number8 index7 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">Console.WriteLine($</code><code class="c# string">"x={x}&nbsp;&nbsp;&nbsp; y={y}"</code><code class="c# plain">);&nbsp;&nbsp; </code><code class="c# comments">// x=25&nbsp;&nbsp; y=7</code></div><div class="line number9 index8 alt2">&nbsp;</div><div class="line number10 index9 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">string</code> <code class="c# plain">s1 = </code><code class="c# string">"hello"</code><code class="c# plain">;</code></div><div class="line number11 index10 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">string</code> <code class="c# plain">s2 = </code><code class="c# string">"bye"</code><code class="c# plain">;</code></div><div class="line number12 index11 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">Swap&lt;</code><code class="c# keyword">string</code><code class="c# plain">&gt;(</code><code class="c# keyword">ref</code> <code class="c# plain">s1, </code><code class="c# keyword">ref</code> <code class="c# plain">s2); </code><code class="c# comments">// или так Swap(ref s1, ref s2);</code></div><div class="line number13 index12 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">Console.WriteLine($</code><code class="c# string">"s1={s1}&nbsp;&nbsp;&nbsp; s2={s2}"</code><code class="c# plain">); </code><code class="c# comments">// s1=bye&nbsp;&nbsp; s2=hello</code></div><div class="line number14 index13 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number15 index14 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">Console.Read();</code></div><div class="line number16 index15 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">}</code></div><div class="line number17 index16 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">public</code> <code class="c# keyword">static</code> <code class="c# keyword">void</code> <code class="c# plain">Swap&lt;T&gt; (</code><code class="c# keyword">ref</code> <code class="c# plain">T x, </code><code class="c# keyword">ref</code> <code class="c# plain">T y)</code></div><div class="line number18 index17 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">{</code></div><div class="line number19 index18 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">T temp = x;</code></div><div class="line number20 index19 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">x = y;</code></div><div class="line number21 index20 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">y = temp;</code></div><div class="line number22 index21 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">}</code></div><div class="line number23 index22 alt2"><code class="c# plain">}</code></div></div></td></tr></tbody></table></div></div>
<p>Здесь определен обощенный метод Swap, который принимает параметры по 
ссылке и меняет их значения. При этом в данном случае не важно, какой 
тип представляют эти параметры.</p>
<p>В методе Main вызываем метод Swap, типизируем его определенным типом и передаем ему некоторые значения.</p>
<div style="margin-top:25px;clear:both;">
<style>
.metanit-rect { width: 300px; height: 250px; }
@media(min-width: 500px) { .metanit-rect { width: 336px; height: 280px; } }
@media(min-width: 760px) { .metanit-rect { width: 728px; height: 90px;  } }
@media(min-width: 1000px) { .metanit-rect { width: 336px; height: 280px;  } }
@media(min-width: 1122px) { .metanit-rect{ width: 728px; height: 90px;} }
@media(min-width: 1400px) { .metanit-rect{ width: 970px; height: 90px;} }
</style>
<!-- metanit_rect -->
<ins class="adsbygoogle metanit-rect" style="display:inline-block" data-ad-client="ca-pub-3716042175333627" data-ad-slot="3119477283"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
</div>

<div class="dop socialtop"><fieldset><legend>Дополнительные материалы</legend>
<ul>
<li><a title="Вопросы для самопроверки" href="https://metanit.com/sharp/questions/2.6.php"><i class="fa fa-lg fa-question"></i><span class="dop-txt">Вопросы для самопроверки</span></a></li>
<li><a title="Упражнения" href="https://metanit.com/sharp/practice/2.1.php"><i class="fa fa-lg fa-pencil"></i><span class="dop-txt">Упражнения</span></a></li>
<li><a title="Видео по статье" rel="nofollow" href="https://youtu.be/xOQnDqf8N-I"><i class="fa fa-lg fa-youtube-play"></i><span class="dop-txt yt">Модуль 36. Обобщения (generics) в языке программирования C#</span></a></li>
</ul>
</fieldset></div>
<div class="nav"><p><a href="https://metanit.com/sharp/tutorial/3.11.php">Назад</a><a href="https://metanit.com/sharp/tutorial/">Содержание</a><a href="https://metanit.com/sharp/tutorial/3.38.php">Вперед</a></p></div></div>
<div class="socialBlock">
<div class="share socialbottom">
<ul>
<li><a title="Поделиться в Вконтакте" rel="nofollow" class="fa fa-lg fa-vk" onclick='window.open("http://vk.com/share.php?url=https://metanit.com/sharp/tutorial/3.12.php","Поделиться в ВКОНТАКТЕ","width=420,height=230,resizable=yes,scrollbars=yes,status=yes")'></a></li>
<li><a title="Поделиться в Одноклассниках" rel="nofollow" class="fa fa-lg fa-odnoklassniki" onclick='window.open("https://connect.ok.ru/offer?url=https://metanit.com/sharp/tutorial/3.12.php","Поделиться в Одноклассниках","width=420,height=230,resizable=yes,scrollbars=yes,status=yes")'></a></li>
<li><a title="Поделиться в Твиттере" rel="nofollow" class="fa fa-lg fa-twitter" onclick='window.open("http://twitter.com/share?url=https://metanit.com/sharp/tutorial/3.12.php","Поделиться в Твиттере","width=420,height=230,resizable=yes,scrollbars=yes,status=yes")'></a></li>
<li><a title="Поделиться в Фейсбуке" rel="nofollow" class="fa fa-lg fa-facebook" onclick='window.open("http://www.facebook.com/sharer.php?u=https://metanit.com/sharp/tutorial/3.12.php","Поделиться в Facebook","width=420,height=230,resizable=yes,scrollbars=yes,status=yes")'></a></li>
</ul>
</div>
</div>

<style>
.commentABl { margin: 25px 0px 15px 0px;}
@media(min-width: 860px) { .commentABl { margin: 35px 10px 15px 15px;  } }
</style>
<div class="commentABl" style="clear:both;">
<div id="yandex_rtb_R-A-201190-3" style="display:inline-block;width:320px;vertical-align:top; margin-right:12px;"></div>
<div id="yandex_rtb_R-A-201190-2" style="display:inline-block;width:320px;vertical-align:top;"></div>
</div>

<div id="disqus_thread" style="margin-left:8px;margin-right:8px;clear:both;"><iframe id="dsq-app1789" name="dsq-app1789" allowtransparency="true" scrolling="no" tabindex="0" title="Disqus" src="C%23%20%D0%B8%20.NET%20%D0%9E%D0%B1%D0%BE%D0%B1%D1%89%D0%B5%D0%BD%D0%B8%D1%8F_files/a.htm" style="height: 8544px !important;" horizontalscrolling="no" verticalscrolling="no" width="100%" frameborder="0"></iframe><iframe id="indicator-north" name="indicator-north" allowtransparency="true" scrolling="no" tabindex="0" title="Disqus" style="width: 898px !important; border: medium none !important; overflow: hidden !important; top: 0px !important; min-width: 898px !important; max-width: 898px !important; position: fixed !important; z-index: 2147483646 !important; height: 18px !important; min-height: 18px !important; max-height: 18px !important; display: none !important;" frameborder="0"></iframe><iframe id="indicator-south" name="indicator-south" allowtransparency="true" scrolling="no" tabindex="0" title="Disqus" style="width: 898px !important; border: medium none !important; overflow: hidden !important; bottom: 0px !important; min-width: 898px !important; max-width: 898px !important; position: fixed !important; z-index: 2147483646 !important; height: 18px !important; min-height: 18px !important; max-height: 18px !important; display: none !important;" frameborder="0"></iframe></div>
<script type="text/javascript">
var disqus_shortname = 'metanitcom';
(function() {
var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
(document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
})();
</script>
</div>
</div> 
<div id="menR" class="menR">
<style>
.meta-vert { width: 300px; height: 250px; }
@media(min-width: 500px) { .meta-vert { width: 336px; height: 280px; } }
@media(min-width: 1000px) { .meta-vert { width: 160px; height: 600px; } }
</style>
<!-- meta_vert -->
<ins class="adsbygoogle meta-vert" style="display:inline-block" data-ad-client="ca-pub-3716042175333627" data-ad-slot="4596210485"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
<style>
.dn {font-size:12.5px;margin:3px;}
.dh{font-weight:bold;margin-left:2px;}
</style>
<div class="dn">
<div class="dh">Помощь сайту</div>
<div class="dh">WebMoney</div>
<ul>
<li>P378451176208</li>
<li>Z280152397659</li>
</ul>
<div class="dh">Yandex-деньги</div>
<ul>
<li>410011174743222</li>
</ul>
<div class="dh">PayPal</div>
<ul>
<li>metanit22@mail.ru</li>
</ul>
</div>

</div>
</div>
</div> 
<div class="menT" id="menT" style="max-height: 4554px;"><ul id="browser" class="filetree treeview"> 
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 1. Введение в C#</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/1.1.php">Язык C# и платформа .NET</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/1.2.php">Начало работы с Visual Studio. Первая программа</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/1.3.php">Компиляция в командной строке</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/1.4.php">Установка версии языка</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 2. Основы программирования на C#</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/1.5.php">Структура программы</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.25.php">Переменные</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.26.php">Литералы</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.1.php">Типы данных</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.15.php">Консольный ввод-вывод</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.3.php">Арифметические операции</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.22.php">Поразрядные операции</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.23.php">Операции присваивания</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.2.php">Преобразования базовых типов данных</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.24.php">Условные выражения</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.5.php">Условные конструкции</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.6.php">Циклы</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.4.php">Массивы</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.7.php">Программа сортировки массива</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.8.php">Методы</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.9.php">Параметры методов</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.27.php">Передача параметров по ссылке и значению. Выходные параметры</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.10.php">Массив параметров и ключевое слово params</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.18.php">Область видимости (контекст) переменных</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.11.php">Рекурсивные функции</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.12.php">Перечисления enum</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/2.19.php">Кортежи</a></span></li>
		</ul>
	</li>
	<li class="closed collapsable"><div class="hitarea closed-hitarea collapsable-hitarea"></div><span class="folder aMItem">Глава 3. Классы. Объектно-ориентированное программирование.</span>
		<ul style="display: block;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.1.php">Классы и объекты</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.13.php">Структуры</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.16.php">Типы значений и ссылочные типы</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.25.php">Пространства имен, псевдонимы и статический импорт</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.46.php">Создание библиотеки классов</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.2.php">Модификаторы доступа</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.4.php">Свойства</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.5.php" class="">Перегрузка методов</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.6.php">Статические члены и модификатор static</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.3.php">Константы, поля и структуры для чтения</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.36.php">Перегрузка операторов</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.26.php">Значение null</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/4.10.php">Индексаторы</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.7.php">Наследование</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.11.php">Преобразование типов</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.37.php">Перегрузка операций преобразования типов</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.19.php">Виртуальные методы и свойства</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.41.php">Сокрытие методов</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.42.php" class="">Различие переопределения и сокрытия методов</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.8.php">Абстрактные классы</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.10.php" class="">Класс System.Object и его методы</a></span></li>
			<li><span class="file aMItem"><a href="https://metanit.com/sharp/tutorial/3.12.php" class="aMItem">Обобщенные типы</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.38.php" class="">Ограничения обобщений</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/3.39.php" class="">Наследование обобщенных типов</a></span></li>
			</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 4. Обработка исключений</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.14.php">Конструкция try..catch..finally</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.28.php">Блок catch и фильтры исключений</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.29.php">Типы исключений. Класс Exception</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.17.php">Создание классов исключений</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.30.php">Поиск блока catch при обработке исключений</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/2.31.php">Генерация исключения и оператор throw</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 5. Делегаты, события и лямбды</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.13.php">Делегаты</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.43.php">Применение делегатов</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.15.php">Анонимные методы</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.16.php">Лямбды</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.14.php">События</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.28.php">Ковариантность и контравариантность делегатов</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/3.33.php">Делегаты Action, Predicate и Func</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 6. Интерфейсы</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.9.php">Определение интерфейсов</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.49.php">Применение интерфейсов</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.44.php">Явная реализация интерфейсов</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.47.php">Реализация интерфейсов в базовых и производных классах</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.48.php">Наследование интерфейсов</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.40.php">Интерфейсы в обобщениях</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.22.php">Копирование объектов. Интерфейс ICloneable</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.23.php">Сортировка объектов. Интерфейс IComparable</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/3.27.php">Ковариантность и контравариантность обобщенных интерфейсов</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 7. Дополнительные возможности ООП в C#</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.18.php">Методы расширения</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.21.php">Частичные классы и методы</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.20.php">Анонимные типы</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.20.php">Локальные функции</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.34.php">Pattern matching</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.35.php">Деконструкторы</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.45.php">Паттерны switch</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.17.php">Nullable-типы</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/2.21.php">Переменные-ссылки и возвращение ссылки</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 8. Объектно-ориентированное программирование. Практика</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.29.php">Создание проекта библиотеки классов</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.30.php">Создание классов. Часть 1</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.31.php">Создание классов. Часть 2</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/3.32.php">Создание главного проекта</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 9. Коллекции</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/4.3.php">ArrayList</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/4.5.php">Список List&lt;T&gt;</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/4.6.php">Двухсвязный список LinkedList&lt;T&gt;</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/4.7.php">Очередь Queue&lt;T&gt;</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/4.8.php">Стек Stack&lt;T&gt;</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/4.9.php">Словарь Dictionary&lt;T, V&gt;</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/4.13.php">Класс ObservableCollection</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/4.11.php">Интерфейсы IEnumerable и IEnumerator</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/4.12.php">Итераторы и оператор yield</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 10. Работа со строками</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/7.1.php">Строки и класс System.String</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/7.2.php">Операции со строками</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/7.5.php">Форматирование и интерполяция строк</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/7.3.php">Класс StringBuilder</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/7.4.php">Регулярные выражения</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 11. Работа с датами и временем</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/19.1.php">Структура DateTime</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/19.2.php">Форматирование дат и времени</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 12. Дополнительные классы и структуры .NET</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/20.1.php">Отложенная инициализация и тип Lazy</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/20.2.php">Математические вычисления и класс Math</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/20.4.php">Преобразование типов и класс Convert</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/20.5.php">Класс Array и массивы</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.33.php">Span</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/2.32.php">Индексы и диапазоны</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 13. Многопоточность</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/11.1.php">Введение в многопоточность. Класс Thread</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/11.2.php">Создание потоков. Делегат ThreadStart</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/11.3.php">Потоки с параметрами и ParameterizedThreadStart</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/11.4.php">Синхронизация потоков</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/11.5.php">Мониторы</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/11.6.php">Класс AutoResetEvent</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/11.7.php">Мьютексы</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/11.8.php">Семафоры</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/11.9.php">Таймеры</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 14. Параллельное программирование и библиотека TPL</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/12.1.php">Задачи и класс Task</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/12.2.php">Работа с классом Task</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/12.3.php">Задачи продолжения</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/12.4.php">Класс Parallel</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/12.5.php">Отмена задач и параллельных операций. CancellationToken</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 15. Aсинхронное программирование</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/13.3.php">Асинхронные методы, async и await</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/13.7.php">Возвращение результата из асинхронного метода</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/13.5.php">Последовательный и параллельный вызов асинхронных операций</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/13.4.php">Обработка ошибок в асинхронных методах</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/13.6.php">Отмена асинхронных операций</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/13.8.php">Асинхронные стримы</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 16. LINQ</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/15.1.php">Основы LINQ</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/15.2.php">Фильтрация выборки и проекция</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/15.3.php">Сортировка</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/15.4.php">Объединение, пересечение и разность коллекций</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/15.5.php">Агрегатные операции</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/15.11.php">Методы Skip и Take</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/15.6.php">Группировка</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/15.7.php">Соединение коллекций. Метод Join, GroupJoin и Zip</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/15.10.php">Методы All и Any</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/15.8.php">Отложенное и немедленное выполнение LINQ</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/15.9.php">Делегаты и анонимные методы в запросах LINQ</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 17. Parallel LINQ</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/17.1.php">Введение в Parallel LINQ. Метод AsParallel</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/17.2.php">Метод AsOrdered</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/17.3.php">Обработка ошибок и отмена параллельных операции</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 18. Рефлексия</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/14.1.php">Введение в рефлексию. Класс System.Type</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/14.2.php">Применение рефлексии и исследование типов</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/14.3.php">Динамическая загрузка сборок и позднее связывание</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/14.4.php">Атрибуты в .NET</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 19. Dynamic Language Runtime</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/9.1.php">DLR в C#. Ключевое слово dynamic</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/9.2.php">DynamicObject и ExpandoObject</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/9.3.php">Использование IronPython в .NET</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 20. Сборка мусора, управление памятью и указатели</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/8.1.php">Сборщик мусора в C#</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/8.2.php">Финализируемые объекты. Метод Dispose</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/8.5.php">Конструкция using</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/8.3.php">Указатели</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/8.4.php">Указатели на структуры, члены классов и массивы</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 21. Работа с потоками и файловой системой</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/5.1.php">Работа с дисками</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/5.2.php">Работа с каталогами</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/5.3.php">Работа с файлами. Классы File и FileInfo</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/5.4.php">FileStream. Чтение и запись файла</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/5.5.php">Чтение и запись текстовых файлов. StreamReader и StreamWriter</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/5.6.php">Бинарные файлы. BinaryWriter и BinaryReader</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/6.2.php">Бинарная сериализация. BinaryFormatter</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/5.7.php">Архивация и сжатие файлов</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 22. Работа с JSON</span>
		<ul style="display: none;">
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/6.5.php">Сериализация в JSON. JsonSerializer</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 23. Работа с XML</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/16.1.php">XML-Документы</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/16.2.php">Работа с XML с помощью System.Xml</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/16.3.php">Изменение XML-документа</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/16.4.php">XPath</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/16.5.php">Linq to Xml. Создание Xml-документа</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/16.6.php">Выборка элементов в LINQ to XML</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/16.7.php">Изменение документа в LINQ to XML</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/6.4.php">Сериализация в XML. XmlSerializer</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 24. Процессы и домены приложения</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/18.1.php">Процессы</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/18.2.php">Домены приложений</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/18.3.php">AssemblyLoadContext и динамическая загрузка и выгрузка сборок</a></span></li>
		</ul>
	</li>
	<li class="closed expandable lastExpandable"><div class="hitarea closed-hitarea expandable-hitarea lastExpandable-hitarea"></div><span class="folder">Глава 25. Валидация модели</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/22.1.php">Основы валидации модели</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/22.2.php">Атрибуты валидации</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/22.3.php">Создание своих атрибутов валидации</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/22.4.php">Самовалидация модели</a></span></li>
		</ul>
	</li>
</ul></div>
<div id="footer">

<div class="bootomLinks">
<a href="https://vk.com/metanit" title="Присоединиться к группе вконтакте" rel="nofollow">
Вконтакте</a>|
<a href="https://twitter.com/Eugene225" title="Подписаться на твит-ленту" rel="nofollow">
Twitter</a>|
<a href="https://www.youtube.com/user/Eugene22584/" title="Подписаться на канал на youtube" rel="nofollow">
Канал сайта на youtube</a>|
<a href="https://metanit.com/donations.php" rel="nofollow">Помощь сайту</a>
</div>
<p>Контакты для связи: metanit22@mail.ru</p>
<p>Copyright © metanit.com, 2012-2020. Все права защищены.</p>
</div>
</div>
<script type="text/javascript" src="C%23%20%D0%B8%20.NET%20%D0%9E%D0%B1%D0%BE%D0%B1%D1%89%D0%B5%D0%BD%D0%B8%D1%8F_files/jquery_002.js"></script>
<script type="text/javascript" src="C%23%20%D0%B8%20.NET%20%D0%9E%D0%B1%D0%BE%D0%B1%D1%89%D0%B5%D0%BD%D0%B8%D1%8F_files/jquery.js"></script>
<script type="text/javascript" src="C%23%20%D0%B8%20.NET%20%D0%9E%D0%B1%D0%BE%D0%B1%D1%89%D0%B5%D0%BD%D0%B8%D1%8F_files/syntax9.js"></script>
<script type="text/javascript">SyntaxHighlighter.all();</script>
<script>
$(function() { 
	$("#menuButton").on('click', function(){
          $(this).toggleClass('menu-opened');
          var mainmenu = $('.mainmenu');
          if (mainmenu.hasClass('open')) { 
            mainmenu.removeClass('open');
          }
          else {
            mainmenu.addClass('open');
          }
        });
	$('.submenu-button').on('click', function() {
            $(this).toggleClass('submenu-opened');
            if ($(this).siblings('ul').hasClass('open')) {
              $(this).siblings('ul').removeClass('open');
			  $(this).children('span').removeClass('open');
			  $(this).children('span').addClass('close');
            }
            else {
              $(this).siblings('ul').addClass('open');
			  $(this).children('span').removeClass('close');
			  $(this).children('span').addClass('open');
            }
          });
  $("#toggle-theme").on("click", function() {
		if(document.documentElement.hasAttribute("theme")){
			document.documentElement.removeAttribute("theme");
			document.cookie="theme=1;expires=Mon, 19 Feb 2001 12:00:00 UTC;path=/;";
		}
		else{
			document.documentElement.setAttribute("theme", "dark");
			var expire = new Date();
			expire.setHours(expire.getHours() + 7);
			document.cookie="theme=1;expires=" + expire.toUTCString() + ";path=/;";
		}
	});
	$('#magnifying-glass').on('click', function() {
            if ($('#search').hasClass('transp')) {
              $('#search').removeClass('transp').show();
            }
            else {
              $('#search').addClass('transp').hide();
            }
          });
	$('#browser').treeview();$('#navigation').treeview({persist: 'location',collapsed: true, unique: true});
	
	$("li:contains('Глава 3.')").removeClass('expandable').addClass('collapsable').children('ul').css({"display":"block"});
	$("li:contains('Глава 3.')").children('div').removeClass('expandable-hitarea').addClass('collapsable-hitarea');
	$("li:contains('Глава .')").removeClass('lastExpandable').addClass('lastCollapsable').children('ul').css({"display":"block"});
	$("li:contains('Глава .')").children('div').removeClass('lastExpandable-hitarea').addClass('lastCollapsable-hitarea');
	
var url = "//metanit.com" + location.pathname;
	$('.file a[href="' + url + '"]').addClass('aMItem').parent().addClass('aMItem').closest('li.collapsable').find('span.folder').addClass('aMItem');
	

	$(".fa-bars").on('click', function() {
		$(".menT").toggleClass("menTOpened");
		$("#content_right_inner").toggleClass("contentRightInnerOpened");
	});
	
	$(".share .fa-vk").attr('onclick','window.open("http://vk.com/share.php?url=' + window.location.href+'","Поделиться в ВКОНТАКТЕ","width=420,height=230,resizable=yes,scrollbars=yes,status=yes")');
	$(".share .fa-odnoklassniki").attr('onclick','window.open("https://connect.ok.ru/offer?url=' + window.location.href+'","Поделиться в Одноклассниках","width=420,height=230,resizable=yes,scrollbars=yes,status=yes")');
	$(".share .fa-twitter").attr('onclick','window.open("http://twitter.com/share?url=' + window.location.href+'","Поделиться в Твиттере","width=420,height=230,resizable=yes,scrollbars=yes,status=yes")');
	$(".share .fa-facebook").attr('onclick','window.open("http://www.facebook.com/sharer.php?u=' + window.location.href +'","Поделиться в Facebook","width=420,height=230,resizable=yes,scrollbars=yes,status=yes")');
});
</script>
<script>
window.onload= function(){
	setMenC();
};
window.onresize= function(){
	setMenC();
};

function setMenC(){
	if(window.innerWidth >859){
			
		var h = document.getElementById("articleText").clientHeight;
		document.getElementById("menT").style.maxHeight=h + "px";
	}
}
</script>
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-35780297-1', 'metanit.com');
  ga('send', 'pageview');

</script>

<script async="" defer="defer" type="text/javascript" src="C%23%20%D0%B8%20.NET%20%D0%9E%D0%B1%D0%BE%D0%B1%D1%89%D0%B5%D0%BD%D0%B8%D1%8F_files/brand"></script>
<script type="text/javascript">
    (function(w, d, n, s, t) {
        w[n] = w[n] || [];
        w[n].push(function() {
            Ya.Context.AdvManager.render({
                blockId: "R-A-201190-3",
                renderTo: "yandex_rtb_R-A-201190-3",
                horizontalAlign: false,
                async: true
            });
        });
        t = d.getElementsByTagName("script")[0];
        s = d.createElement("script");
        s.type = "text/javascript";
        s.src = "//an.yandex.ru/system/context.js";
        s.async = true;
        t.parentNode.insertBefore(s, t);
    })(this, this.document, "yandexContextAsyncCallbacks");
</script>
<script type="text/javascript">
    (function(w, d, n, s, t) {
        w[n] = w[n] || [];
        w[n].push(function() {
            Ya.Context.AdvManager.render({
                blockId: "R-A-201190-2",
                renderTo: "yandex_rtb_R-A-201190-2",
                async: true
            });
        });
        t = d.getElementsByTagName("script")[0];
        s = d.createElement("script");
        s.type = "text/javascript";
        s.src = "//an.yandex.ru/system/context.js";
        s.async = true;
        t.parentNode.insertBefore(s, t);
    })(this, this.document, "yandexContextAsyncCallbacks");
</script>

<iframe style="display: none;"></iframe></body></html>