<!--
2021.08.26 15:01 IMM  
    
I    
    
ObservableCollection

    В примере выше в качестве источника данных использовался список List. Также в качестве
    источника мы бы могли использовать другой какой-нибудь тип набора данных - массив, объект
    HashSet и т.д. Но нередко в качестве источника применяется класс ObservableCollection,
    который находится в пространстве имен System.Collections.ObjectModel. Его преимущество 
    заключается в том, что при любом изменении ObservableCollection может уведомлять элементы,
    которые применяют привязку, в результате чего обновляется не только сам объект
    ObservableCollection, но и привязанные к нему элементы интерфейса.

    Например, рассмотрим следующую ситуацию. У нас кроме элемента ListBox есть текстовое поле и 
    кнопка для добавления нового объекта:    
-->
    
<Window x:Class="DataApp2.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DataApp2"
        mc:Ignorable="d"
        Title="MainWindow" Height="250" Width="300" Name="mainWindow">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <ListBox x:Name="phonesList" />
        <StackPanel Grid.Row="1" Orientation="Horizontal" Margin="0 15 0 0" HorizontalAlignment="Center">
            <TextBox Name="phoneTextBox" Width="190" />
            <Button Content="Сохранить" MaxWidth="70" Margin="10 0 0 0" Click="Button_Click" />
        </StackPanel>
    </Grid>
</Window>
