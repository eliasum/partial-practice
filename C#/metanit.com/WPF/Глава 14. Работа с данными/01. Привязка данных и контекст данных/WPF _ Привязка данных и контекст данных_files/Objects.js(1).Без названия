/* -------------------------------------------------------------------------------------
--------------                        WARGAMING.NET                       --------------
----------------------------------------------------------------------------------------
--------------                 Â© 2016 ALL RIGHTS RESERVED                 --------------
--------------------------------------------------------------------------------------*/
function drawArtaT(obj)
{
	var ctx = canvasMain.getContext("2d");
	//
	ctx.save();
	ctx.globalAlpha = obj.alpha;
	ctx.translate(obj.x, obj.y);
	ctx.scale (obj.scale, obj.scale);
	ctx.rotate(radian(obj.rot));
	ctx.translate(- obj.pic.width,- obj.pic.height/2);
	//arta mask
	ctx.beginPath();
	ctx.moveTo(2.1,99.9);
	ctx.quadraticCurveTo(1.75,96.7,2.9,95.5);
	ctx.lineTo(6.1,92.55);
	ctx.lineTo(3.7,90.6);
	ctx.lineTo(5.9,89.65);
	ctx.lineTo(7.3,88.1);
	ctx.lineTo(10.1,86.65);
	ctx.lineTo(13.65,85.95);
	ctx.lineTo(19.3,86);
	ctx.lineTo(22.35,84.95);
	ctx.lineTo(29.15,84.7);
	ctx.lineTo(29.15,73.55);
	ctx.lineTo(61.6,73.25);
	ctx.lineTo(63.35,69);
	ctx.lineTo(66.25,68.65);
	ctx.lineTo(70.6,70.95);
	ctx.lineTo(70.75,67.95);
	ctx.lineTo(75.7,67.65);
	ctx.lineTo(77.45,64.9);
	ctx.lineTo(96.15,64.9);
	ctx.lineTo(96.05,61.3);
	ctx.lineTo(98.1,58.85);
	ctx.lineTo(102.15,57.95);
	ctx.lineTo(107.95,58.15);
	ctx.lineTo(108.9,60.65);
	ctx.lineTo(106.75,63.8);
	ctx.lineTo(118.55,63.1);
	ctx.lineTo(121.95,15.1);
	ctx.lineTo(183.95,14.15);
	ctx.lineTo(184.05,7.65);
	ctx.lineTo(188.3,11);
	ctx.lineTo(189.25,10);
	ctx.lineTo(196.85,9.9);
	ctx.lineTo(196.95,5.6);
	ctx.lineTo(198.05,3.1);
	ctx.lineTo(200.05,1.85);
	ctx.lineTo(202.25,2.45);
	ctx.lineTo(203.7,5.6);
	ctx.lineTo(203.85,11.85);
	ctx.lineTo(211.1,11.95);
	ctx.lineTo(212.8,15);
	ctx.lineTo(223.9,15.2);
	ctx.lineTo(233.85,17.2);
	ctx.lineTo(233.85,14.9);
	ctx.lineTo(238.15,16);
	ctx.lineTo(238.3,17.95);
	ctx.lineTo(246.1,20.05);
	ctx.lineTo(250.6,20.2);
	ctx.lineTo(253.15,73.8);
	ctx.lineTo(256.85,74.85);
	ctx.lineTo(258.2,78);
	ctx.lineTo(257.7,80.15);
	ctx.lineTo(243.55,79.95);
	ctx.lineTo(215.6,90.15);
	ctx.lineTo(210.85,90.9);
	ctx.lineTo(200.8,91.55);
	ctx.lineTo(171.45,97.55);
	ctx.lineTo(170.1,98.8);
	ctx.lineTo(168.1,101.45);
	ctx.lineTo(166.7,104.4);
	ctx.lineTo(164.8,105.05);
	ctx.lineTo(136.95,105.25);
	ctx.lineTo(134.5,108.3);
	ctx.lineTo(132.4,111.95);
	ctx.lineTo(130.95,116.15);
	ctx.lineTo(129.7,125.65);
	ctx.lineTo(130,138.05);
	ctx.lineTo(131.2,142.25);
	ctx.lineTo(137.95,156.1);
	ctx.lineTo(43.05,146.9);
	ctx.lineTo(31.6,132.65);
	ctx.lineTo(29.2,131.75);
	ctx.lineTo(25.9,128.05);
	ctx.lineTo(25.95,125.2);
	ctx.lineTo(27.1,121.15);
	ctx.lineTo(28.75,120.25);
	ctx.lineTo(34.45,99.15);
	ctx.lineTo(32.25,98.75);
	ctx.lineTo(31.55,100.05);
	ctx.lineTo(28.1,98.7);
	ctx.lineTo(23.45,98.1);
	ctx.lineTo(12.7,97.7);
	ctx.lineTo(9.95,98.05);
	ctx.lineTo(6.1,99.8);
	ctx.lineTo(2.1,99.9);
	ctx.closePath();
	ctx.clip();
	ctx.drawImage(obj.pic, 0, 0, obj.pic.width, obj.pic.height);

	//
	ctx.translate(obj.pic.width,obj.pic.height/2);
	//
	ctx.restore();
}
function drawArtaB(obj)
{
	var ctx = canvasMain.getContext("2d");
	//
	ctx.save();
	ctx.globalAlpha = obj.alpha;
	ctx.translate(obj.x, obj.y);
	ctx.scale (obj.scale, obj.scale);
	ctx.rotate(radian(obj.rot));
	ctx.translate(- obj.pic.width/2,- obj.pic.height/2);
	//arta shadow
	ctx.beginPath();
	ctx.moveTo(180,190);
	ctx.lineTo(0,175);
	ctx.lineTo(124,115);
	ctx.lineTo(245,135);
	ctx.closePath();
	var grd = ctx.createLinearGradient(180,190,10,155);
	grd.addColorStop(0,"rgba(0, 0, 0, "+ trueAlpha(0.7*obj.alpha) +")");
	grd.addColorStop(0.7,"rgba(0, 0, 0, "+ trueAlpha(0.6*obj.alpha) +")");
	grd.addColorStop(1,"rgba(0, 0, 0, "+ trueAlpha(0.1*obj.alpha) +")");
	ctx.fillStyle=grd;
	//ctx.fill();
	//arta mask
	ctx.beginPath();
	ctx.moveTo(152,18.4);
	ctx.lineTo(169,19.15);
	ctx.lineTo(229.35,2.4);
	ctx.lineTo(232.6,2.25);
	ctx.lineTo(234.95,4.75);
	ctx.lineTo(261.1,5.65);
	ctx.lineTo(262.7,7.1);
	ctx.quadraticCurveTo(264.35,8.8,264.45,10);
	ctx.quadraticCurveTo(264.75,13.65,264.75,15.15);
	ctx.quadraticCurveTo(264.85,19.5,264.1,23.15);
	ctx.quadraticCurveTo(262.95,28.9,256.95,49.15);
	ctx.quadraticCurveTo(256.75,49.8,256.2,50.7);
	ctx.quadraticCurveTo(255.1,52.5,253.2,53.9);
	ctx.lineTo(196.2,96.35);
	ctx.quadraticCurveTo(195.75,96.8,194.45,97.15);
	ctx.quadraticCurveTo(191.8,97.9,187.6,97.7);
	ctx.lineTo(162.85,96.2);
	ctx.quadraticCurveTo(161.9,96.3,160.2,95.7);
	ctx.quadraticCurveTo(156.8,94.55,153.1,91.35);
	ctx.quadraticCurveTo(149.4,88.15,144.7,80.65);
	ctx.lineTo(140.7,73.85);
	ctx.lineTo(136.2,64.6);
	ctx.quadraticCurveTo(135.3,61.9,134.7,58);
	ctx.quadraticCurveTo(133.55,50.2,135.2,44.35);
	ctx.quadraticCurveTo(137.55,36.05,138.1,34.85);
	ctx.quadraticCurveTo(139.35,31.95,143.1,27.9);
	ctx.lineTo(152,18.4);
	ctx.closePath();
	ctx.moveTo(1.9,41.65);
	ctx.quadraticCurveTo(2.05,38.2,2.85,34.25);
	ctx.quadraticCurveTo(4.45,26.3,7.75,23.75);
	ctx.lineTo(16.5,19.65);
	ctx.lineTo(40.65,22.9);
	ctx.lineTo(41.75,27.75);
	ctx.lineTo(41.25,31.75);
	ctx.quadraticCurveTo(40.8,32.35,40.2,33.45);
	ctx.quadraticCurveTo(39,35.65,38.35,38.05);
	ctx.quadraticCurveTo(36.15,45.7,39.9,52.75);
	ctx.lineTo(43.4,58.6);
	ctx.quadraticCurveTo(48.05,64.75,53.65,66.1);
	ctx.lineTo(61.4,67.7);
	ctx.quadraticCurveTo(71.8,69.25,84.9,69);
	ctx.lineTo(95.4,69);
	ctx.lineTo(96.25,74.25);
	ctx.lineTo(75.5,83.1);
	ctx.quadraticCurveTo(74.15,83.65,71.8,84.1);
	ctx.quadraticCurveTo(67.15,85.05,62.25,84.75);
	ctx.quadraticCurveTo(57.35,84.45,52.55,84);
	ctx.lineTo(48.75,83.6);
	ctx.quadraticCurveTo(47.2,83.35,45.2,82.8);
	ctx.quadraticCurveTo(41.2,81.65,39,80.1);
	ctx.quadraticCurveTo(36.8,78.55,21.65,66.75);
	ctx.lineTo(6.9,55.25);
	ctx.quadraticCurveTo(5.8,54.1,4.65,51.85);
	ctx.quadraticCurveTo(2.3,47.3,1.9,41.65);
	ctx.closePath();
	ctx.clip();
	ctx.drawImage(obj.pic, 0, 0, obj.pic.width, obj.pic.height);
	//
	ctx.translate(obj.pic.width/2,obj.pic.height/2);
	//
	ctx.restore();
}
function drawGun(obj)
{
	var ctx = canvasMain.getContext("2d");
	//
	ctx.save();
	ctx.globalAlpha = obj.alpha;
	ctx.translate(obj.x, obj.y);
	ctx.scale (obj.scale, obj.scale);
	ctx.rotate(radian(obj.rot));
	ctx.translate(- obj.pic.width,- obj.pic.height/2);
	//gun mask
	ctx.beginPath();
	ctx.moveTo(1.9,14.5);
	ctx.quadraticCurveTo(2.2,11.5,3.85,8.45);
	ctx.quadraticCurveTo(7.15,2.3,13.8,2);
	ctx.lineTo(15.9,2.3);
	ctx.quadraticCurveTo(18.2,2.85,19.5,4.15);
	ctx.lineTo(24.7,6.15);
	ctx.lineTo(27.4,8.7);
	ctx.quadraticCurveTo(101.85,37.6,101.85,37.65);
	ctx.quadraticCurveTo(102.55,33.25,103.75,28);
	ctx.quadraticCurveTo(106.15,17.5,108.5,13.4);
	ctx.quadraticCurveTo(158.55,12.8,158.55,12.85);
	ctx.lineTo(161.8,14.55);
	ctx.quadraticCurveTo(160.55,18.5,159.2,23.8);
	ctx.quadraticCurveTo(156.5,34.4,155.9,41.1);
	ctx.quadraticCurveTo(155.25,48.5,154.95,61.5);
	ctx.quadraticCurveTo(154.7,73,154.85,79.6);
	ctx.lineTo(100.7,77.75);
	ctx.quadraticCurveTo(99.65,58.4,100.05,52.2);
	ctx.lineTo(22.1,28.85);
	ctx.lineTo(12.3,28.3);
	ctx.quadraticCurveTo(10.7,28.1,8.75,27.35);
	ctx.quadraticCurveTo(4.9,25.75,3.35,22.8);
	ctx.quadraticCurveTo(1.8,19.85,1.7,16.85);
	ctx.lineTo(1.9,14.5);
	ctx.closePath();
	ctx.clip();
	ctx.drawImage(obj.pic, 0, 0, obj.pic.width, obj.pic.height);

	//
	ctx.translate(obj.pic.width,obj.pic.height/2);
	//
	ctx.restore();
}
function drawArtaShine(obj)
{
	var ctx = canvasMain.getContext("2d");
	//
	ctx.save();
	ctx.globalAlpha = obj.alpha;
	ctx.translate(obj.x, obj.y);
	ctx.scale (obj.scale, obj.scale);
	ctx.translate(- img_artaT.pic.width,- img_artaT.pic.height/2);
	//
	ctx.beginPath();
	ctx.moveTo(33.15,13.1);
	ctx.quadraticCurveTo(33.65,10.4,35.35,7.7);
	ctx.quadraticCurveTo(38.7,2.3,44.5,2.35);
	ctx.lineTo(46.7,2.45);
	ctx.quadraticCurveTo(49.35,2.85,51.55,4.65);
	ctx.lineTo(54.3,5.9);
	ctx.quadraticCurveTo(57.25,7.4,58.3,8.95);
	ctx.lineTo(126,35);
	ctx.lineTo(127.05,29.25);
	ctx.lineTo(134.95,29.3);
	ctx.quadraticCurveTo(135.45,26.65,136.3,23.35);
	ctx.quadraticCurveTo(137.95,16.85,139.6,13.9);
	ctx.lineTo(189.5,13);
	ctx.lineTo(192.7,14.3);
	ctx.lineTo(190.75,22.35);
	ctx.lineTo(192.95,24.95);
	ctx.lineTo(201.9,24.35);
	ctx.lineTo(203.15,17.55);
	ctx.lineTo(204.3,16.1);
	ctx.lineTo(207,16.15);
	ctx.lineTo(208.15,18.15);
	ctx.lineTo(208.5,25.75);
	ctx.lineTo(215.5,26.15);
	ctx.lineTo(217.35,28.85);
	ctx.lineTo(228.85,29.4);
	ctx.lineTo(233.1,31);
	ctx.lineTo(238.75,31.15);
	ctx.lineTo(239.15,29.05);
	ctx.lineTo(242.95,29.9);
	ctx.lineTo(243.4,31.85);
	ctx.lineTo(255.65,34.85);
	ctx.lineTo(257.55,86.75);
	ctx.lineTo(261.95,89.05);
	ctx.lineTo(262.95,93.7);
	ctx.lineTo(247.05,94.1);
	ctx.lineTo(241.1,96.7);
	ctx.lineTo(219.75,103.75);
	ctx.lineTo(210,104);
	ctx.lineTo(176.5,111.5);
	ctx.lineTo(170.25,119.5);
	ctx.lineTo(138,119);
	ctx.lineTo(130.5,149.25);
	ctx.lineTo(29.75,141.5);
	ctx.lineTo(43,115);
	ctx.lineTo(37.5,107.75);
	ctx.lineTo(10.7,106.65);
	ctx.lineTo(9,104.45);
	ctx.quadraticCurveTo(9.55,103.8,10.55,103.1);
	ctx.quadraticCurveTo(12.6,101.6,14.8,101.1);
	ctx.quadraticCurveTo(17.65,100.45,23.95,99.8);
	ctx.quadraticCurveTo(30.55,99.1,34.25,99.15);
	ctx.lineTo(34.2,88.3);
	ctx.lineTo(66.85,87);
	ctx.lineTo(68.3,82.9);
	ctx.lineTo(71.25,82.85);
	ctx.lineTo(75.6,85.3);
	ctx.lineTo(76.45,82);
	ctx.lineTo(81.05,82.2);
	ctx.lineTo(82.45,79.45);
	ctx.lineTo(101,79.3);
	ctx.lineTo(101.1,75.7);
	ctx.lineTo(103.25,73.3);
	ctx.lineTo(112.55,72.4);
	ctx.lineTo(113.6,74.45);
	ctx.lineTo(111.8,76.1);
	ctx.lineTo(111.6,78);
	ctx.lineTo(123.9,77.1);
	ctx.lineTo(125.15,50.25);
	ctx.lineTo(55.4,29.5);
	ctx.lineTo(52.95,29.05);
	ctx.quadraticCurveTo(42.6,28.6,39.5,27.25);
	ctx.quadraticCurveTo(36.45,25.9,34.4,22.55);
	ctx.quadraticCurveTo(31.8,18.25,33.15,13.1);
	ctx.closePath();
	//ctx.stroke();
	ctx.translate(img_artaT.pic.width,img_artaT.pic.height/2);
	var grd = ctx.createLinearGradient(- 100, - 96, 50, - 15);
	grd.addColorStop(0,"rgba(226, 104, 0, "+ trueAlpha(1*obj.alpha) +")");
	grd.addColorStop(1,"rgba(226, 104, 0, "+ trueAlpha(0*obj.alpha) +")");
	ctx.fillStyle=grd;
	ctx.globalCompositeOperation = "lighter";
	ctx.fill();
	//
	ctx.restore();
}
function drawPics(obj)
{
	var ctx = canvasMain.getContext("2d");
	//
	ctx.save();
	ctx.globalAlpha = obj.alpha;
	ctx.translate(obj.x, obj.y);
	ctx.scale (obj.scale, obj.scale);
	ctx.rotate(radian(obj.rot));
	//
	ctx.translate(-obj.pic.width/2, -obj.pic.height/2);
	ctx.drawImage(obj.pic, 0, 0, obj.pic.width, obj.pic.height);
	ctx.translate(obj.pic.width/2, obj.pic.height/2);
	//
	ctx.restore();
}
function drawBush1(obj)
{
	var ctx = canvasMain.getContext("2d");
	//
	ctx.save();

	ctx.globalAlpha = obj.alpha;
	ctx.translate(obj.x, obj.y);
	ctx.scale (obj.scale, obj.scale);
	ctx.rotate(radian(obj.rot));

	ctx.translate(-12, -obj.pic.height/2);

	ctx.beginPath();
	ctx.moveTo(0,0);
	ctx.lineTo(27,0);
	ctx.lineTo(27,obj.pic.height);
	ctx.lineTo(0,obj.pic.height);
	ctx.closePath();

	ctx.clip();

	ctx.drawImage(obj.pic, 0, 0, obj.pic.width, obj.pic.height);
	ctx.translate(12, obj.pic.height/2);
	//
	ctx.restore();
}
function drawBush2(obj)
{
	var ctx = canvasMain.getContext("2d");
	//
	ctx.save();
	ctx.globalAlpha = obj.alpha;
	ctx.translate(obj.x, obj.y);
	ctx.scale (obj.scale, obj.scale);
	ctx.rotate(radian(obj.rot));
	//
	ctx.translate(-59, -obj.pic.height/2);

	ctx.beginPath();
	ctx.moveTo(27,0);
	ctx.lineTo(92,0);
	ctx.lineTo(92,obj.pic.height);
	ctx.lineTo(27,obj.pic.height);
	ctx.closePath();

	ctx.clip();
	//ctx.stroke()

	ctx.drawImage(obj.pic, 0, 0, obj.pic.width, obj.pic.height);
	ctx.translate(59, obj.pic.height/2);
	//
	ctx.restore();
}
function drawBush3(obj)
{
	var ctx = canvasMain.getContext("2d");
	//
	ctx.save();
	ctx.globalAlpha = obj.alpha;
	ctx.translate(obj.x, obj.y);
	ctx.scale (obj.scale, obj.scale);
	ctx.rotate(radian(obj.rot));
	//
	ctx.translate(-116, -obj.pic.height/2);

	ctx.beginPath();
	ctx.moveTo(92,0);
	ctx.lineTo(146,0);
	ctx.lineTo(146,obj.pic.height);
	ctx.lineTo(92,obj.pic.height);
	ctx.closePath();

	ctx.clip();
	//ctx.stroke()

	ctx.drawImage(obj.pic, 0, 0, obj.pic.width, obj.pic.height);
	ctx.translate(116, obj.pic.height/2);
	//
	ctx.restore();
}
function drawBush4(obj)
{
	var ctx = canvasMain.getContext("2d");
	//
	ctx.save();
	ctx.globalAlpha = obj.alpha;
	ctx.translate(obj.x, obj.y);
	ctx.scale (obj.scale, obj.scale);
	ctx.rotate(radian(obj.rot));
	//
	ctx.translate(-188, -obj.pic.height/2);

	ctx.beginPath();
	ctx.moveTo(146,0);
	ctx.lineTo(232,0);
	ctx.lineTo(232,obj.pic.height);
	ctx.lineTo(146,obj.pic.height);
	ctx.closePath();

	ctx.clip();
	//ctx.stroke()

	ctx.drawImage(obj.pic, 0, 0, obj.pic.width, obj.pic.height);
	ctx.translate(188, obj.pic.height/2);
	//
	ctx.restore();
}
function drawShine(obj)
{
	var ctx = canvasMain.getContext("2d");
	//
	ctx.save();
	ctx.globalAlpha = obj.alpha;
	ctx.translate(obj.x, obj.y);
	ctx.scale (obj.scale, obj.scale);
	ctx.rotate(radian(obj.rot));
	//
	ctx.globalCompositeOperation = "lighter";
	ctx.translate(-obj.pic.width/2, -obj.pic.height/2);
	ctx.drawImage(obj.pic, 0, 0, obj.pic.width, obj.pic.height);
	ctx.translate(obj.pic.width/2, obj.pic.height/2);
	//
	ctx.restore();
}
function drawDarker(dObj)
{
	var ctx = dObj.canvas.getContext("2d");
	//
	ctx.clearRect(0, 0, w, h);
	//
	var grd=ctx.createRadialGradient(w/2,h/2,15,w/2,h/2,w/2);
	grd.addColorStop(0,"rgba(0, 0, 0, " + Math.round(dObj.alpha*100)/100 + ")");
	grd.addColorStop(1,"rgba(0, 0, 0, " + Math.round(dObj.alpha*1.2*100)/100 + ")");	
	ctx.fillStyle=grd;
	ctx.fillRect(0,0,w,h);
	
	
	//ctx.fillStyle = "rgba(0, 0, 0, " + dObj.alpha + ")";
	//ctx.fillRect(0, 0, w, h);
}
function drawPlate(obj)
{
	var ctx = canvasMain.getContext("2d");
	//
	ctx.save();
	ctx.globalAlpha = obj.alpha;
	ctx.translate(obj.x, obj.y);
	ctx.rotate(radian(obj.rot));
	ctx.scale (obj.scale, obj.scale);
	//
	if(frameNum === 2)
	{
		ctx.beginPath();
		ctx.moveTo(0, -4);
		ctx.lineTo(w, -4);
		ctx.lineTo(w, 0);
		ctx.lineTo(0, 0);
		ctx.closePath();
		ctx.fillStyle = "rgb(71,8,8)";
		ctx.fill();

		ctx.beginPath();
		ctx.moveTo(0, -4);
		ctx.lineTo(autoPlayTimer/760*w, -4);
		ctx.lineTo(autoPlayTimer/760*w, 0);
		ctx.lineTo(0, 0);
		ctx.closePath();
		ctx.fillStyle = "rgb(218, 0, 0)";		
		ctx.fill();
	}
	//
	ctx.beginPath();
	ctx.moveTo(0, 0);
	ctx.lineTo(w, 0);
	ctx.lineTo(w, 120);
	ctx.lineTo(0, 120);
	ctx.closePath();
	var grd = ctx.createLinearGradient(0, 120, 0, 0);
	grd.addColorStop(0,"rgba(79, 79, 79, "+ trueAlpha(0.3*obj.alpha) +")");
	grd.addColorStop(1,"rgba(0, 0, 0, "+ trueAlpha(0.3*obj.alpha) +")");
	ctx.fillStyle=grd;
	ctx.fill();

	var pat = ctx.createPattern(Pattern.pic,"repeat");
	ctx.fillStyle = pat;
	ctx.globalAlpha = 0.5;
	ctx.fill();
	//

	ctx.beginPath();
	ctx.moveTo(0, 0);
	ctx.lineTo(w, 0);
	ctx.lineTo(w, 1);
	ctx.lineTo(0, 1);
	ctx.closePath();
	ctx.fillStyle = "rgba(249,249,229, 1)";
	ctx.fill();
	//
	ctx.restore();
}
function drawAim(obj)
{
	var ctx = canvasMain.getContext("2d");
	//
	ctx.save();
	ctx.globalAlpha = obj.alpha;
	ctx.translate(obj.x, obj.y);
	ctx.scale (obj.scale, obj.scale);
	ctx.rotate(radian(obj.rot));
	//
	ctx.beginPath();
	ctx.moveTo(aimPoint.x, aimPoint.y);
	ctx.lineTo(700, 1000);
	ctx.moveTo(aimPoint.x - 6, aimPoint.y);
	ctx.lineTo(aimPoint.x + 6, aimPoint.y);
	ctx.moveTo(aimPoint.x, aimPoint.y - 6);
	ctx.lineTo(aimPoint.x, aimPoint.y + 6);
	ctx.closePath();
	ctx.lineWidth = 1;
	//
	ctx.strokeStyle = "rgba(0,255,0, 1)";
	ctx.stroke();
	//
	ctx.restore();
}
var aimTimer = 0;
var dot = 0;
function drawAimCirle(obj)
{
	aimTimer ++;
	var ctx = canvasMain.getContext("2d");
	//
	ctx.save();
	ctx.globalAlpha = obj.alpha;
	ctx.translate(aimPoint.x, aimPoint.y);
	ctx.rotate(radian(obj.rot));
	ctx.scale (obj.scaleX, obj.scaleY);
	//
	//red
	for(var i = 1; i< 46; i++)
    {
		ctx.rotate(8 * Math.PI / 180);
    	ctx.beginPath();
	    ctx.arc(0,- 60,1.5/obj.scaleX,0,2*Math.PI);
	    ctx.fillStyle = "rgb(255,0,0)";
	    ctx.fill();
    }
    // green
    for(var i = 1; i< dot; i++)
    {
		ctx.rotate(8 * Math.PI / 180);
    	ctx.beginPath();
	    ctx.arc(0,- 60,1.5/obj.scaleX,0,2*Math.PI);
	    ctx.fillStyle = "rgb(0,255,0)";
	    ctx.fill();
    }
    // dot
	if(aimTimer%2==0 && dot < 46 && startAim)
	{
		dot ++;
		for(var i = 1; i< dot; i++)
	    {
			ctx.rotate(8 * Math.PI / 180);
	    	ctx.beginPath();
		    ctx.arc(0,- 60,1.5/obj.scaleX,0,2*Math.PI);
		    ctx.fillStyle = "rgb(0,255,0)";
		    //ctx.fill();
	    }
	}
	if(dot === 46)
	{
		enableShot = true;
	}
	if(dot < 46)
	{
		enableShot = false;
	}

	ctx.restore();
}
function drawtankBigTow(obj)
{
	var ctx = canvasMain.getContext("2d");
	//
	ctx.save();
	ctx.globalAlpha = obj.alpha;
	ctx.translate(obj.x, obj.y);
	ctx.scale (obj.scale, obj.scale);
	ctx.rotate(radian(obj.rot));
	//
	ctx.translate(-23, -23);
	ctx.drawImage(obj.pic, 0, 0, obj.pic.width, obj.pic.height);
	ctx.translate(23, 23);

	ctx.save();
		ctx.globalCompositeOperation = "lighter";
		ctx.globalAlpha = gfx_tankFire.alpha;
		ctx.translate(gfx_tankFire.x, gfx_tankFire.y);
		ctx.scale (gfx_tankFire.scale, gfx_tankFire.scale);
		var grd=ctx.createRadialGradient(0,0,5,0,0,50);
		grd.addColorStop(0,"rgba(255, 246, 198, "+ trueAlpha(1*gfx_tankFire.alpha) +")");
		grd.addColorStop(0.2,"rgba(255, 208, 79, "+ trueAlpha(0.3*gfx_tankFire.alpha) +")");
		grd.addColorStop(0.3,"rgba(255, 102, 0, "+ trueAlpha(0.3*gfx_tankFire.alpha) +")");
		grd.addColorStop(0.33,"rgba(255, 102, 0, "+ trueAlpha(0.3*gfx_tankFire.alpha) +")");
		grd.addColorStop(1,"rgba(255, 198, 55, "+ trueAlpha(0*gfx_tankFire.alpha) +")");
		ctx.fillStyle=grd;
		ctx.fillRect(-50,-50,100,100);
	ctx.restore();

	ctx.save();
		ctx.globalCompositeOperation = "lighter";
		ctx.globalAlpha = img_tankShot.alpha;
		ctx.translate(img_tankShot.x, img_tankShot.y);
		ctx.scale (img_tankShot.scale, img_tankShot.scale);
		ctx.rotate(radian(45));
		ctx.drawImage(img_tankShot.pic, 0, 0, img_tankShot.pic.width, img_tankShot.pic.height);
	ctx.restore();
	//
	ctx.restore();
}
function drawTankSmall(obj)
{
	var ctx = canvasMain.getContext("2d");
	//
	ctx.save();
	ctx.globalAlpha = obj.alpha;
	ctx.translate(obj.x, obj.y);
	ctx.scale (obj.scale, obj.scale);
	ctx.rotate(radian(obj.rot));
	//
	ctx.translate(-34, -47);
	ctx.drawImage(obj.pic, 0, 0, obj.pic.width, obj.pic.height);
	ctx.translate(34, 47);
	//
	ctx.restore();
}
function drawtankSmallTow(obj)
{
	var ctx = canvasMain.getContext("2d");
	//
	ctx.save();
	ctx.globalAlpha = obj.alpha;
	ctx.translate(obj.x, obj.y);
	ctx.scale (obj.scale, obj.scale);
	ctx.rotate(radian(obj.rot));
	//
	ctx.translate(-19, -27);
	ctx.drawImage(obj.pic, 0, 0, obj.pic.width, obj.pic.height);
	ctx.translate(19, 27);

	ctx.save();
		ctx.globalCompositeOperation = "lighter";
		ctx.globalAlpha = gfx_tankFireS.alpha;
		ctx.translate(gfx_tankFireS.x, gfx_tankFireS.y);
		ctx.scale (gfx_tankFireS.scale, gfx_tankFireS.scale);
		var grd=ctx.createRadialGradient(0,0,5,0,0,50);
		grd.addColorStop(0,"rgba(255, 246, 198, "+ trueAlpha(1*gfx_tankFireS.alpha) +")");
		grd.addColorStop(0.2,"rgba(255, 208, 79, "+ trueAlpha(0.3*gfx_tankFireS.alpha) +")");
		grd.addColorStop(0.3,"rgba(255, 102, 0, "+ trueAlpha(0.3*gfx_tankFireS.alpha) +")");
		grd.addColorStop(0.33,"rgba(255, 102, 0, "+ trueAlpha(0.3*gfx_tankFireS.alpha) +")");
		grd.addColorStop(1,"rgba(255, 198, 55, "+ trueAlpha(0*gfx_tankFireS.alpha) +")");
		ctx.fillStyle=grd;
		ctx.fillRect(-50,-50,100,100);
	ctx.restore();

	ctx.save();
		ctx.globalCompositeOperation = "lighter";
		ctx.globalAlpha = img_tankShotS.alpha;
		ctx.translate(img_tankShotS.x, img_tankShotS.y);
		ctx.scale (img_tankShotS.scale, img_tankShotS.scale);
		ctx.rotate(radian(70));
		ctx.drawImage(img_tankShotS.pic, 0, 0, img_tankShotS.pic.width, img_tankShotS.pic.height);
	ctx.restore();
	//
	ctx.restore();
}
function drawBullet(obj)
{
	var ctx = canvasMain.getContext("2d");
	//
	ctx.save();
	ctx.globalAlpha = obj.alpha;
	ctx.translate(obj.x, obj.y);
	ctx.scale (obj.scale, obj.scale);
	ctx.rotate(radian(obj.rot));
	//
	ctx.translate(-obj.pic.width/2, -obj.pic.height/2);
	ctx.drawImage(obj.pic, 0, 0, obj.pic.width, obj.pic.height);
	ctx.translate(obj.pic.width/2, obj.pic.height/2);
	//
	ctx.font = 'normal 20pt '  + font;
	ctx.fillStyle = "rgb(0, 0, 0)";
	ctx.fillText("x" + shotNum, 18 , 14);
	ctx.fillStyle = "rgb(255, 255, 255)";
	ctx.fillText("x" + shotNum, 16 , 12);
	//
	ctx.restore();
}
function drawBigStroke(obj)
{
	var ctx = canvasMain.getContext("2d");
	//
	ctx.save();
	ctx.globalAlpha = obj.alpha;
	ctx.translate(obj.x, obj.y);
	ctx.scale (obj.scale, obj.scale);
	ctx.rotate(radian(obj.rot));
	//
	ctx.beginPath();
	ctx.moveTo(-52.95,-12.65);
	ctx.quadraticCurveTo(-52.95,-12.6,-44.25,-20.65);
	ctx.lineTo(-41.25,-17.65);
	ctx.quadraticCurveTo(-41.25,-17.6,-36.2,-22.65);
	ctx.quadraticCurveTo(-37.85,-23.4,-39.05,-24.65);
	ctx.quadraticCurveTo(-41.5,-27.2,-39.2,-29.65);
	ctx.quadraticCurveTo(-36.85,-32.2,-34.7,-30.15);
	ctx.quadraticCurveTo(-32.85,-28.4,-33,-26.95);
	ctx.lineTo(-28.25,-31.15);
	ctx.quadraticCurveTo(-30.05,-31.85,-31.4,-33.05);
	ctx.quadraticCurveTo(-34.1,-35.4,-31.7,-37.6);
	ctx.lineTo(-29.25,-38.8);
	ctx.quadraticCurveTo(-26.5,-39.1,-25.2,-34.75);
	ctx.lineTo(-19.3,-39.8);
	ctx.lineTo(-22.75,-43.8);
	ctx.lineTo(-14.75,-52);
	ctx.lineTo(22.5,-17.15);
	ctx.lineTo(22.8,-15.65);
	ctx.lineTo(52.6,12.95);
	ctx.lineTo(43.75,22.6);
	ctx.lineTo(43.5,24.75);
	ctx.lineTo(26.3,42.85);
	ctx.quadraticCurveTo(26.3,42.9,24.65,42.75);
	ctx.lineTo(14.9,51.75);
	ctx.lineTo(-52.95,-12.65);
	ctx.closePath();
	//
	ctx.lineWidth = 2;
	ctx.strokeStyle = "red";
	ctx.stroke();
	//
	ctx.restore();
}
function drawSmallStroke(obj)
{
	var ctx = canvasMain.getContext("2d");
	//
	ctx.save();
	ctx.globalAlpha = obj.alpha;
	ctx.translate(obj.x, obj.y);
	ctx.scale (obj.scale, obj.scale);
	ctx.rotate(radian(obj.rot));
	//
	ctx.beginPath();
	ctx.moveTo(-28.25,-24);
	ctx.lineTo(7.75,-35.75);
	ctx.lineTo(28.5,25.5);
	ctx.lineTo(23,26.75);
	ctx.lineTo(19.75,24.75);
	ctx.lineTo(10,30.5);
	ctx.lineTo(0,31.5);
	ctx.lineTo(0,34.75);
	ctx.lineTo(-7.5,36.75);
	ctx.lineTo(-28.25,-24);
	ctx.closePath();
	//
	ctx.lineWidth = 2;
	ctx.strokeStyle = "red";
	ctx.stroke();
	//
	ctx.restore();
}

var craters = {};
var craters2 = {};
craters.craterArray = new Array();
craters2.craterArray = new Array();
var craterObj = {};
var craterObj2 = {};
function addCraters()
{
	for(var i=0;i<7;i++)
	{
		craterObj = {};
		craterObj.pic = img_crater.pic;
		craterObj.x = 0 - img_crater.pic.width;
		craterObj.y = 0 - img_crater.pic.height;
		craterObj.alpha = 1;
		craterObj.scale = 1;
		craterObj.rot = 0;
		craters.craterArray.push(craterObj);
	}
}
function addCraters2()
{
	for(var i=0;i<7;i++)
	{
		craterObj2 = {};
		craterObj2.pic = img_crater2.pic;
		craterObj2.x = 0 - img_crater2.pic.width;
		craterObj2.y = 0 - img_crater2.pic.height;
		craterObj2.alpha = 1;
		craterObj2.scale = 1;
		craterObj2.rot = 0;
		craters2.craterArray.push(craterObj2);
	}
}

// SMOKE EFFECT
var artaSmokeArray = new Array();
var smokeTimer = 0; 

function addSmoke(x,y,scale)
{
	var obj = {};
	obj.x = x;
	obj.y = y;
	obj.sScale = scale+Math.random()*0.2;
	obj.dScale = 0;
	obj.scale = 0;
	obj.alpha = 0.3;
	obj.rotate = Math.random()*55;
	artaSmokeArray.push(obj);
}
function drawSmoke()
{
	var ctx = canvasMain.getContext("2d");
	///////////SMOKE
	for(i =0;i<artaSmokeArray.length;i++)
	{
		if(frameNum === 2)
		{
			artaSmokeArray[i].y += 0.06;
		}
		else
		{
			artaSmokeArray[i].y -= 0.26;
		}
		artaSmokeArray[i].x -=(artaSmokeArray[i].scale/2);
		artaSmokeArray[i].dScale +=(artaSmokeArray[i].sScale-artaSmokeArray[i].dScale)/4;
		artaSmokeArray[i].scale +=0.004;
		if(frameNum === 2)
		{
			artaSmokeArray[i].alpha +=(0-artaSmokeArray[i].alpha)/20;
		}
		if(frameNum === 4)
		{
			artaSmokeArray[i].alpha +=(0-artaSmokeArray[i].alpha)/40;
		}
		//
		ctx.save();
		ctx.translate(artaSmokeArray[i].x,artaSmokeArray[i].y);
		ctx.scale(artaSmokeArray[i].scale+artaSmokeArray[i].dScale,artaSmokeArray[i].scale+artaSmokeArray[i].dScale);			
		ctx.rotate(artaSmokeArray[i].rotate);	
		ctx.globalAlpha = artaSmokeArray[i].alpha;
		if(frameNum === 4)
		{
			ctx.drawImage(img_smokeW.pic,-30,-22);
		}
		if(frameNum === 2)
		{
			ctx.drawImage(img_smoke.pic,-30,-22);
		}
		ctx.restore();
		if(artaSmokeArray[i].alpha<0.01)
		{
			artaSmokeArray.splice(i,1);
			i--;
		}
	}
	if(smokeTimer==0 && frameNum === 4 && smokeFl)
	{
		addSmoke(img_artaT.x - 217*img_artaT.scale,img_artaT.y - 84*img_artaT.scale,img_artaT.scale/19);
	}
	if(smokeTimer==0 && frameNum === 2)
	{
	    addSmoke(img_tankBig.x - 26 + img_tankBig.rot/1, img_tankBig.y - 32 - img_tankBig.rot/10, img_tankBig.scale/12);	
		addSmoke(img_tankBig.x - 48 + img_tankBig.rot/1, img_tankBig.y - 32 - img_tankBig.rot/10, img_tankBig.scale/12);
		addSmoke(img_tankSmall.x - 12 + img_tankSmall.rot/2, img_tankSmall.y - 22 - img_tankSmall.rot/10,img_tankSmall.scale/22);
	}
	smokeTimer++;
	if(frameNum === 4)
	{
		smokeTimer=smokeTimer%6;
	}
	else
	{
		smokeTimer=smokeTimer%2;
	}
}
var hpWBig = 40;
function drawHPBig(obj)
{
	//hpTimer ++;
	var ctx = canvasMain.getContext("2d");
	//
	ctx.save();
	ctx.globalAlpha = obj.alpha;
	ctx.translate(obj.x, obj.y);
	ctx.scale (obj.scale, obj.scale);
	ctx.rotate(radian(obj.rot));
	//
	ctx.beginPath();
	ctx.moveTo(0 - obj.distX, 0 + 10 + obj.distY);
	ctx.lineTo(40 - obj.distX, 0 + 10 + obj.distY);
	ctx.lineTo(40 - obj.distX, 5 + 10 + obj.distY);
	ctx.lineTo(0 - obj.distX, 5 + 10 + obj.distY);
	ctx.closePath();
	//
	ctx.fillStyle = "rgba(0,0,0, 0.2)";
	ctx.fill();
	//
	ctx.beginPath();
	ctx.moveTo(0, 0);
	ctx.lineTo(40, 0);
	ctx.lineTo(40, 5);
	ctx.lineTo(0, 5);
	ctx.closePath();
	//
	ctx.fillStyle = "rgba(255,0, 0, 0.5)";
	ctx.fill();
	//
	if(aimTimer%2==0 && hpWBig > 20 && bigTankCrash === 1)
	{
		hpWBig --;
	}
	if(aimTimer%2==0 && hpWBig > 0 && bigTankCrash === 2)
	{
		hpWBig --;
	}
	ctx.beginPath();
	ctx.moveTo(0, 0);
	ctx.lineTo(hpWBig, 0);
	ctx.lineTo(hpWBig, 5);
	ctx.lineTo(0, 5);
	ctx.closePath();
	//
	ctx.fillStyle = "rgb(0,213,0)";
	ctx.fill();
	//
	ctx.restore();
}
var hpWSmall = 40;
function drawHPSmall(obj)
{
	//hpTimer ++;
	var ctx = canvasMain.getContext("2d");
	//
	ctx.save();
	ctx.globalAlpha = obj.alpha;
	ctx.translate(obj.x, obj.y);
	ctx.scale (obj.scale, obj.scale);
	ctx.rotate(radian(obj.rot));
	//
	ctx.beginPath();
	ctx.moveTo(0 - obj.distX, 0 + 10 + obj.distY);
	ctx.lineTo(40 - obj.distX, 0 + 10 + obj.distY);
	ctx.lineTo(40 - obj.distX, 5 + 10 + obj.distY);
	ctx.lineTo(0 - obj.distX, 5 + 10 + obj.distY);
	ctx.closePath();
	//
	ctx.fillStyle = "rgba(0,0,0, 0.2)";
	ctx.fill();
	//
	ctx.beginPath();
	ctx.moveTo(0, 0);
	ctx.lineTo(40, 0);
	ctx.lineTo(40, 5);
	ctx.lineTo(0, 5);
	ctx.closePath();
	//
	ctx.fillStyle = "rgba(255,0,0, 0.5)";
	ctx.fill();
	//
	if(aimTimer%2==0 && hpWSmall > 16 && smallTankCrash === 1)
	{
		hpWSmall --;
	}
	if(aimTimer%2==0 && hpWSmall > 0 && smallTankCrash === 2)
	{
		hpWSmall --;
	}
	ctx.beginPath();
	ctx.moveTo(0, 0);
	ctx.lineTo(hpWSmall, 0);
	ctx.lineTo(hpWSmall, 5);
	ctx.lineTo(0, 5);
	ctx.closePath();
	//
	ctx.fillStyle = "rgb(0,213,0)";
	ctx.fill();
	//
	ctx.restore();
}
function drawArtaShotFire(obj)
{
	var ctx = canvasMain.getContext("2d");
	//
	ctx.save();
	ctx.globalAlpha = obj.alpha;
	ctx.translate(obj.x, obj.y);
	ctx.rotate(radian(obj.rot));
	ctx.scale (obj.scaleX, obj.scaleY);
	//
	ctx.globalCompositeOperation = "lighter";
	//
	var grd=ctx.createRadialGradient(0,0,5,0,0,50);
	grd.addColorStop(0,"rgba(255, 222, 150, "+ trueAlpha(1*obj.alpha) +")");
	grd.addColorStop(0.5,"rgba(255, 68, 24, "+ trueAlpha(0.8*obj.alpha) +")");
	grd.addColorStop(1,"rgba(255, 115, 36, "+ trueAlpha(0*obj.alpha) +")");
	ctx.fillStyle=grd;
	ctx.fillRect(-50,-50,100,100);
	//
	ctx.restore();
}

var shotArray = new Array();
function drawShot()
{
	var ctx = canvasMain.getContext("2d");

	for(var i = 0;i<shotArray.length;i++)
	{
		shotArray[i].scale -=0.001;
		shotArray[i].alpha -= shotArray[i].alpha/10;
		//
		ctx.save();
		ctx.translate(shotArray[i].x,shotArray[i].y);
		ctx.rotate(shotArray[i].rotate);
		ctx.scale(shotArray[i].scale,shotArray[i].scale);				
		ctx.globalAlpha = shotArray[i].alpha;
		ctx.globalCompositeOperation = 'lighter';

		var grd=ctx.createRadialGradient(0,0,4,0,0,8);
		grd.addColorStop(0,"rgba(255, 246, 198, "+ trueAlpha(1*shotArray[i].alpha) +")");
		grd.addColorStop(0.2,"rgba(255, 208, 79, "+ trueAlpha(0.3*shotArray[i].alpha) +")");
		grd.addColorStop(0.3,"rgba(255, 102, 0, "+ trueAlpha(0.3*shotArray[i].alpha) +")");
		grd.addColorStop(0.33,"rgba(255, 102, 0, "+ trueAlpha(0.3*shotArray[i].alpha) +")");
		grd.addColorStop(1,"rgba(255, 198, 55, "+ trueAlpha(0*shotArray[i].alpha) +")");
		ctx.fillStyle=grd;
		ctx.fillRect(-8,-8,16,16);

		if(shotArray[i].alpha < 0.001)
		{
			shotArray.splice(i,1);
			i--;
		}
		ctx.restore();
	}

	if(stopShot === false)
	{
		addShot(gfx_shot.x, gfx_shot.y, 1.2);
		addShot(gfx_shot.x - 5, gfx_shot.y - 5, 1.2);
		addShot(gfx_shot.x - 10, gfx_shot.y - 10, 1.2);
		addShot(gfx_shot.x - 15, gfx_shot.y - 15, 1.2);
		addShot(gfx_shot.x - 20, gfx_shot.y - 20, 1.2);
	}
}
function addShot(x,y,scale)
{
	var obj = {};
	obj.x = x;
	obj.y = y;
	obj.scale = scale;
	obj.alpha = 0.6;
	obj.rotate = 0;
	shotArray.push(obj);
}

// Exp_Eff
var expSplashArray = new Array();
var expArray = new Array();
var sparkArray = new Array();

function addSpark(fx,fy,sAng,count)
{
	
	for(i=0;i<count;i++)
	{
		var sObj = {};
		sObj.ang = sAng-90-20+Math.random()*40;
		sObj.x = fx;
		sObj.y = fy;
		sObj.fx = fx;
		sObj.fy = fy;
		sObj.color = parseInt(Math.random()*30)+190;
		sObj.scale = 1+Math.random()*0.8;
		sObj.alpha = 1+Math.random();
		sObj.dist = Math.random()*140+80;
		sObj.length =Math.random()*4;
		sparkArray.push(sObj);
	}		
}
function drawSparks(ctx)
{
	for(var i=0;i<sparkArray.length;i++)
		{
			ctx.save();
			sparkArray[i].length = sparkArray[i].length+sparkArray[i].dist/50;//(sparkArray[i].dist-sparkArray[i].length)/sparkArray[i].dist*8;
			sparkArray[i].dist+=(0-sparkArray[i].dist)/30;
			sparkArray[i].x = Math.cos(sparkArray[i].ang*Math.PI/180)*sparkArray[i].length;
			sparkArray[i].y = Math.sin(sparkArray[i].ang*Math.PI/180)*sparkArray[i].length;
			sparkArray[i].fy += 0.6*sparkArray[i].scale;
			sparkArray[i].fx += 0.2;
			sparkArray[i].alpha -=0.04;
			ctx.fillStyle = "rgba(255, " + sparkArray[i].color +", 120, " + sparkArray[i].alpha +")"
			ctx.fillRect(sparkArray[i].x+sparkArray[i].fx,sparkArray[i].y+sparkArray[i].fy,sparkArray[i].scale,sparkArray[i].scale);
			if(sparkArray[i].alpha<0)
			{
				sparkArray.splice(i,1);
				i--;
			}
			ctx.restore();
		}
}
function drawBalck()
	{
		var ctx = canvasMain.getContext("2d");
		var nCanvas = document.createElement("CANVAS");		
		var w = 100;		
		var h = 92;		
		nCanvas.width = w;
		nCanvas.height = h;	
		var ctx = nCanvas.getContext('2d');	
		ctx.drawImage(expImg.exp,0,0);
		try{

		var buffer = ctx.getImageData(0, 0, w, h),
			data = buffer.data,
			len = data.length,
			i = 0,
			c = {r:-0, g: -0, b: -0, a:0};
		
		for(i=0; i < len; i += 4) {
			data[i] = data[i] + c.r;
			data[i + 1] = data[i + 1] + c.g;
			data[i + 2] = data[i + 2] + c.b;
			data[i + 3] = data[i + 3] + c.a;
		}
		ctx.putImageData(buffer, 0, 0);

	}catch(e){}
		
		
		expImg.bExp = nCanvas;
		//ctxInt.drawImage(expImg.bExp,0,0);		
	}

var expX = 0;
var expY = 0;
function addExp(x,y,scale)
{
	x = typeof x !== 'undefined' ? x : 0;
	y = typeof y !== 'undefined' ? y : 0;
	scale = typeof scale !== 'undefined' ? scale : 1;

	var i=0;
	var eObj = {};
	eObj.smokeArray = new Array();
	eObj.fireArray = new Array();
	eObj.sparkArray = new Array();	
	eObj.randomArray = new Array();	
	eObj.x = x;
	eObj.y = y;
	eObj.sy = y;
	eObj.scale = scale;
	eObj.lineScale = 0;
	eObj.lineAlpha = 1;
	for(i=0;i<2;i++)
	{
		var obj = {};
		obj.x = 0;
		obj.y = 0;
		obj.scale = 0;
		obj.sScale = 0.9//+Math.random()*0.3;
		obj.dScale = 0;
		obj.ang = -1.57//+Math.random()*2-1;
		obj.sDist =10//+Math.random()*10;
		obj.dist = 0;
		if(frameNum === 2 || frameNum === 3)
		{
			obj.alpha = 0.5//+Math.random()*0.6;
		}
		else
		{
			obj.alpha = 0.9//+Math.random()*0.6;
		}
		eObj.smokeArray.push(obj)
	}
	
	for(i=0;i<3;i++)
	{
		var obj = {};
		obj.x = 0;
		obj.y = 0;
		obj.scale = 0.2;
		obj.sScale = 0.4+Math.random()*0.3;	
		obj.dScale = 0;
		obj.ang = 3;
		obj.pAng = 3;
		obj.dAng =obj.pAng-Math.cos(obj.ang)*1.1;  //+Math.random()*3-1.5;
		obj.sDist = 6//+Math.random()*16;
		//obj.sScale = (22-obj.sDist)/10;
		obj.dist = 0;
		obj.speed = 12//+Math.random()*6;
		obj.alpha = 3;
		obj.bAlpha = 0;
		obj.bFAlpha = 0.8;
		obj.dy = 0;
		obj.dDy = 0.3;
		
		if(i==0)
		{	
			//obj.alpha = 0.6;
			obj.sScale = 0.6;
			
			var a =  JSON.stringify(obj);
			a =  JSON.parse(a);
		a.pAng = 3;
		a.dAng =a.pAng+Math.cos(obj.ang)*1.8;
		
		a.sScale *= 1.2;
			eObj.fireArray.push(a);
			eObj.fireArray.push(obj);
			
		}
		else
		{
		
		var a =  JSON.stringify(obj);
			a =  JSON.parse(a);
		a.pAng = 3;
		a.dAng =a.pAng+Math.cos(obj.ang)*1.8;
		a.sScale *= 1.2;
			TweenLite.delayedCall(i/30,addExpFire,[eObj,a]);
			TweenLite.delayedCall(i/30,addExpFire,[eObj,obj]);
		}
		
	}
	for(i=0;i<2;i++)
	{
		var obj = {};
		if(frameNum === 1)
		{
			obj.ang = 1.1+i*2;
		}
		else
		{
			obj.ang = -1.1+i*2;
		}
		obj.sx = 0;
		obj.sy = 20;
		obj.x = obj.sx;
		obj.y = obj.sy;	
		obj.scale = 0.2;		
		obj.alpha = 1;	
		obj.sScale = 0.5+Math.random()*0.3;
		eObj.sparkArray.push(obj);	
	}	
	for(i=0;i<120;i++)
	{
		eObj.randomArray.push(Math.random());
	}
	expArray.push(eObj);
	expX = x;
	expY = y;
	if(frameNum === 2)
	{
		target();
	}
}
function addExpFire(eObj,obj)
{
	eObj.fireArray.push(obj);
}


function drawExp()
{
	var ctx = canvasMain.getContext("2d");
	for(var i=0;i<expArray.length;i++)
	{
		expArray[i].x+=0.1*expArray[i].scale;
		expArray[i].y-=0.1*expArray[i].scale;
		ctx.save();	
		ctx.translate(expArray[i].x,expArray[i].y);
		ctx.scale(expArray[i].scale,expArray[i].scale);		
		var sArray = expArray[i].smokeArray;
		var fArray = expArray[i].fireArray;
		var sparkArray = expArray[i].sparkArray;		
		for(var s=0;s<sArray.length;s++)
		{
			if(frameNum === 0)
			{
				sArray[s].scale+=(sArray[s].sScale-sArray[s].scale)/4;
				sArray[s].dScale +=0.008;
				sArray[s].dist+=(sArray[s].sDist-sArray[s].dist)/2;
				sArray[s].x = Math.cos(sArray[s].ang)*sArray[s].dist - 12;
				sArray[s].y = Math.sin(sArray[s].ang)*sArray[s].dist-sArray[s].dScale*15 + 12;
				sArray[s].alpha -=0.01;
			}
			else
			{
				sArray[s].scale+=(sArray[s].sScale-sArray[s].scale)/4;
				sArray[s].dScale +=0.008;
				sArray[s].dist+=(sArray[s].sDist-sArray[s].dist)/2;
				sArray[s].x = Math.cos(sArray[s].ang)*sArray[s].dist - 12;
				sArray[s].y = 0;
				sArray[s].alpha -=0.004;
			}
			ctx.save();			
			ctx.translate(sArray[s].x,sArray[s].y-10);
			ctx.scale(sArray[s].scale+sArray[s].dScale,sArray[s].scale+sArray[s].dScale);
			ctx.globalAlpha = sArray[s].alpha;
			
			ctx.rotate(sArray[s].ang+sArray[s].sScale);
			ctx.drawImage(expImg.smoke,-40,-40);
			ctx.restore();
			if(expFl === false)
			{
				sArray[s].alpha = 0;
			}
			if(sArray[s].alpha<0.01)
			{
				sArray.splice(s,1);
				s--;
			}
		}		
		
		expArray[i].lineScale += (110-expArray[i].lineScale)/16;
		expArray[i].lineAlpha *=0.9;
		
		for(var f=0;f<fArray.length;f++)
		{
			fArray[f].scale+=(fArray[f].sScale-fArray[f].scale)/12;
			fArray[f].dist+=(fArray[f].sDist-fArray[f].dist)/2;
			if(frameNum === 0)
			{
				fArray[f].dScale -=0.007;
				fArray[f].x = Math.cos(fArray[f].ang)*fArray[f].dist - 1;
				fArray[f].y = Math.sin(fArray[f].ang)*fArray[f].dist;
			}
			else
			{
				fArray[f].dScale +=0.004;
				fArray[f].x = Math.cos(fArray[f].ang)*fArray[f].dist - 1;
				fArray[f].y = Math.sin(fArray[f].ang)*fArray[f].dist;
			}
			fArray[f].alpha +=(0-fArray[f].alpha)/fArray[f].speed*3.6;
			fArray[f].bAlpha +=(fArray[f].bFAlpha-fArray[f].bAlpha)/4;
			fArray[f].bFAlpha +=(0-fArray[f].bFAlpha)/fArray[f].speed/4;
			if(frameNum === 0)
			{
				fArray[f].bFAlpha-=0.01;
				fArray[f].dy -= fArray[f].dDy+fArray[f].alpha/2;
			}
			else
			{
				fArray[f].bFAlpha-=0.005;
				fArray[f].dy -= 0.1;
			}
			fArray[f].pAng+=(fArray[f].dAng-fArray[f].pAng)/10;
			ctx.save();			
			ctx.translate(fArray[f].x,fArray[f].y+fArray[f].dy);
			ctx.scale(fArray[f].scale+fArray[f].dScale,fArray[f].scale+fArray[f].dScale);
			
			
			ctx.rotate(fArray[f].pAng);
			ctx.globalAlpha = Math.round(fArray[f].bAlpha*100)/100;
			if(frameNum === 2 || frameNum === 3)
			{
				ctx.globalCompositeOperation = "lighter";
			}
			else
			{
				ctx.globalCompositeOperation = "normal";
			}
			if(frameNum > 1)
			{
				ctx.drawImage(expImg.bExp,-40,-38);
			}
			
			ctx.globalAlpha = Math.round(fArray[f].alpha*100)/100;
			if(Math.round(fArray[f].alpha*100)/100>1)
			{
			    ctx.globalAlpha = 1;	
			}
			ctx.drawImage(expImg.exp,-40,-38);
			
			ctx.restore();
			if(expFl === false)
			{
				fArray[f].bAlpha = 0;
			}
			if(fArray[f].bAlpha<0.02)
			{
				fArray.splice(f,1);
				f--;
			}
			for(var sp=0;sp<sparkArray.length;sp++)
			{
				if(frameNum === 1)
				{
					sparkArray[sp].scale+=(sparkArray[sp].sScale-sparkArray[sp].scale)/12;
				}
				else
				{
					sparkArray[sp].scale+=(sparkArray[sp].sScale-sparkArray[sp].scale)/(10 + Math.random()*20);
				}
				sparkArray[sp].alpha+=(0-sparkArray[sp].alpha)/20;
				//sparkArray[sp].ang+=0.01;
				//sparkArray[sp].y = expArray[i].sy-expArray[i].y;
				ctx.save();			
				ctx.translate(sparkArray[sp].x,sparkArray[sp].y-10);
				ctx.scale(sparkArray[sp].scale,sparkArray[sp].scale);
				ctx.globalAlpha = sparkArray[sp].alpha;
				
				ctx.rotate(sparkArray[sp].ang);
				ctx.globalCompositeOperation = "lighter";
				ctx.drawImage(expImg.sparks,-80,-148);
				ctx.restore();
			}
		}
		
		
		if(fArray.length>0)
		{
		var tpgr = ctx.createRadialGradient(0,0,12,0,0,22);
		tpgr.addColorStop(0, "rgba(250, 240, 200, "+Math.round(fArray[0].alpha/3*100)/100+")");	
		tpgr.addColorStop(1, "rgba(250, 200, 150, "+0+")");	
	
		ctx.fillStyle = tpgr;		
		ctx.globalCompositeOperation = "lighter";	
	
		ctx.fillRect(-60,-60,120,120);
		}
		
		ctx.restore();
		if(sArray.length==0&&fArray.length==0&&sparkArray.length==0)
		{
			expArray.splice(i,1);
			i--;
		}
	}
	
}


// leaves

var sparkArray = [];

// CREATE EFFECT ELEMENT
function createSplash(fx,fy,sAng,count)
{
	for(i=0; i<count; i++)
	{
		var sObj = {};
		sObj.ang = sAng - 360 + Math.random() * 360;
		sObj.x = fx;
		sObj.y = fy;
		sObj.fx = fx;
		sObj.fy = fy;
		sObj.color = parseInt(Math.random() * 70) + 100;
		sObj.scale = 0.2 + Math.random() * 0.2;
		sObj.alpha = 1;
		sObj.dist = Math.random() * 220;
		sObj.length = Math.random() * 14;
		sparkArray.push(sObj);
	}		
}

// DRAW EFFECT ELEMENT
function drawSplash()
{
	var ctx = canvasMain.getContext("2d");

	for(var i = 0; i < sparkArray.length; i++)
	{
		ctx.save();
		sparkArray[i].length = sparkArray[i].length + sparkArray[i].dist / 60;
		sparkArray[i].dist += (0 - sparkArray[i].dist) / 20;
		sparkArray[i].x = Math.cos(sparkArray[i].ang * Math.PI / 180) * sparkArray[i].length;
		sparkArray[i].y = Math.sin(sparkArray[i].ang * Math.PI / 180) * sparkArray[i].length;
		sparkArray[i].fy += 0.1 * sparkArray[i].scale;
		sparkArray[i].fx -= 0.0;
		sparkArray[i].alpha -= 0.0001;
		sparkArray[i].scale -= 0.0045;
		//
		ctx.translate(sparkArray[i].x + sparkArray[i].fx, sparkArray[i].y + sparkArray[i].fy);
		ctx.scale (sparkArray[i].scale, sparkArray[i].scale)

		ctx.beginPath();
		ctx.moveTo(5.75,-2.3);
		ctx.lineTo(0,-3.1);
		ctx.lineTo(-5.25,-2.15);
		ctx.lineTo(-9.15,1.7);
		ctx.lineTo(-10.55,10.2);
		ctx.lineTo(-6.6,8.25);
		ctx.lineTo(-4.2,8.65);
		ctx.lineTo(-3.1,10.15);
		ctx.lineTo(-2.6,12.65);
		ctx.lineTo(0.15,15.05);
		ctx.lineTo(2.65,11.4);
		ctx.lineTo(3.55,7.45);
		ctx.lineTo(7.15,8.05);
		ctx.lineTo(10.5,7.35);
		ctx.lineTo(9.3,2.5);
		ctx.lineTo(7.1,0.3);
		ctx.lineTo(5.75,-2.3);
		ctx.closePath();

		ctx.fillStyle = "rgba(70, " + sparkArray[i].color + ", 0, " + sparkArray[i].alpha +")";

		ctx.fill();
		//
		if(sparkArray[i].scale < 0.01)
		{
			sparkArray.splice(i, 1);
			i--;
		}
		//
		ctx.restore();
	}
}

// sparkles
function addSpark(x,y,width, height, ang, speed)
{
	var obj = {};
	obj.sx = x+Math.random()*width;
	obj.sy = y+Math.random()*height;	
	obj.x = obj.sx;
	obj.y = obj.sy;
	obj.sAng = Math.random()*20+ang;
	obj.dSAng = Math.random()*0.08-0.04;
	obj.dist = 0;
	obj.scale = Math.random()*0.6+0.3;
	obj.scale *= 0.5;
	obj.dDist = Math.random()*2.4+2;
	obj.dDist*= speed;
	obj.alpha = 1;	
	if(Math.random()>0.7)
	{
		obj.scale*=2;
		obj.dDist *= 2;
		obj.alpha = 0.6;
	}	
	obj.rotate = 0;	
	obj.xang = Math.random()*5;
	obj.xspeed = Math.random()*0.04-0.02;
	obj.xdist = Math.random()*50;
	sparkleImg.array.push(obj);
	
}
function drawSparkles()
{
	var ctx = canvasMain.getContext("2d");
	for(var i=0; i<sparkleImg.array.length;i++)
	{
		//position
		var obj = sparkleImg.array[i];	
		obj.ox = obj.x;
		obj.oy = obj.y;
		obj.dist+=obj.dDist;
		obj.xang+=obj.dSAng ;
		obj.dSAng*=0.99;
		obj.xdist*=0.996;
		obj.dDist*=0.994;
		//obj.dDist+=0.004;
		obj.scale*=0.999;
		obj.sAng+=obj.xspeed;
		obj.ang = obj.sAng + Math.sin(obj.xang)*obj.xdist;
		obj.x =obj.sx+Math.cos(radian(obj.ang))*obj.dist;
		obj.y =obj.sy+Math.sin(radian(obj.ang))*obj.dist;
		obj.alpha-=0.006;
		obj.rotate =  Math.atan2(obj.y-obj.oy,obj.x-obj.ox);	
		//obj.rotate =(obj.ang)
		
		//draw
		ctx.save();
		ctx.globalAlpha = obj.alpha;
		ctx.translate(obj.x, obj.y)
		ctx.scale (obj.scale, obj.scale);
		ctx.rotate(obj.rotate+0.3);		
		ctx.globalCompositeOperation = "lighter";			
		if(smokeFl)
		{
			ctx.drawImage(sparkleImg.pic, -sparkleImg.pic.width/2, -sparkleImg.pic.height/2);
		}			
		ctx.restore();
		
		//remove
		if(obj.alpha<0.01)
		{
			sparkleImg.array.splice(i,1);
			i--;
		}
	}
}

var Pattern = {};
Pattern.tPattern = {};
Pattern.bPattern = {};
Pattern.tPattern.height = 125;
Pattern.bPattern.height = 125;
Pattern.tPattern.alpha = 0;
Pattern.bPattern.alpha = 0;
Pattern.tPattern.fillGradient = [[0,1],[0.6,0.6],[1,0]];
Pattern.tPattern.patternGradient = [[0,0.9],[0.6,0.6],[1,0]];

Pattern.bPattern.fillGradient = [[0,0],[0.4,0.5],[1,1]];
Pattern.bPattern.patternGradient = [[0,0],[0.4,0.5],[1,1]];

function drawPattern(ctx)
{
	ctx.clearRect(0, 0, w, h);	
	ctx.globalAlpha = Pattern.tPattern.alpha;
	ctx.drawImage(Pattern.tPattern.pic,0,0);	
	ctx.globalAlpha = Pattern.bPattern.alpha;
	ctx.drawImage(Pattern.bPattern.pic,0,0);	
}

function drawPatternElements()
{
	var i=0;	
	var nCanvas = document.createElement("CANVAS");		
	nCanvas.width = w;
	nCanvas.height = h;	
	ctx = nCanvas.getContext('2d');			
	tpgr = ctx.createLinearGradient(0, 0, 0, Pattern.tPattern.height);
	for(i=0;i<Pattern.tPattern.patternGradient.length;i++)
	{
		tpgr.addColorStop(Pattern.tPattern.patternGradient[i][0], "rgba(0, 0, 0, "+Pattern.tPattern.patternGradient[i][1]+")");
	}		
		
	

	
	iPattern = ctx.createPattern(Pattern.pic, 'repeat');
	ctx.fillStyle = iPattern;
	ctx.fillRect(0,0,w,h);
	ctx.globalCompositeOperation = "source-in";
	ctx.fillStyle = tpgr;
	ctx.fillRect(0,0,w,h);	
	ctx.globalCompositeOperation = "destination-over";
	tpgr = ctx.createLinearGradient(0, 0, 0, Pattern.tPattern.height);
	for(i=0;i<Pattern.tPattern.fillGradient.length;i++)
	{
		tpgr.addColorStop(Pattern.tPattern.fillGradient[i][0], "rgba(0, 0, 0, "+Pattern.tPattern.fillGradient[i][1]+")");
	}
	ctx.fillStyle=tpgr;
	ctx.fillRect(0,0,w,h);
	Pattern.tPattern.pic = nCanvas;	
	
	//////////////////////////////////////////////////////////
	var nCanvas = document.createElement("CANVAS");		
	nCanvas.width = w;
	nCanvas.height = h;	
	ctx = nCanvas.getContext('2d');			
	tpgr = ctx.createLinearGradient(0, h-Pattern.bPattern.height, 0, h);
	for(i=0;i<Pattern.bPattern.patternGradient.length;i++)
	{
		tpgr.addColorStop(Pattern.bPattern.patternGradient[i][0], "rgba(0, 0, 0, "+Pattern.bPattern.patternGradient[i][1]+")");
	}	
		
	

	
	iPattern = ctx.createPattern(Pattern.pic, 'repeat');
	ctx.fillStyle = iPattern;
	ctx.fillRect(0,0,w,h);
	ctx.globalCompositeOperation = "source-in";
	ctx.fillStyle = tpgr;
	ctx.fillRect(0,0,w,h);	
	ctx.globalCompositeOperation = "destination-over";
	for(i=0;i<Pattern.bPattern.fillGradient.length;i++)
	{
		tpgr.addColorStop(Pattern.bPattern.fillGradient[i][0], "rgba(0, 0, 0, "+Pattern.bPattern.fillGradient[i][1]+")");
	}
	ctx.fillStyle=tpgr;
	ctx.fillRect(0,0,w,h);
	Pattern.bPattern.pic = nCanvas;
	
}



