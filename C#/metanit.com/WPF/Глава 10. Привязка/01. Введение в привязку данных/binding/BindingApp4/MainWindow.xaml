<Window x:Class="BindingApp4.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:BindingApp4"
        mc:Ignorable="d"
        Title="MainWindow" Height="250" Width="300">
    
    <!--
        Обновление привязки. UpdateSourceTrigger
    
        Односторонняя привязка от источника к приемнику практически мгновенно изменяет свойство приемника. 
        Но если мы используем двустороннюю привязку в случае с текстовыми полями (как в примере выше), то 
        при изменении приемника свойство источника не изменяется мгновенно. Так, в примере выше, чтобы 
        текстовое поле-источник изменилось, нам надо перевести фокус с текстового поля-приемника. И в данном
        случае в дело вступает свойство UpdateSourceTrigger класса Binding, которое задает, как будет
        присходить обновление. Это свойство принимает одно из значений перечисления UpdateSourceTrigger:

            PropertyChanged: источник привязки обновляется сразу после обновления свойства в приемнике

            LostFocus: источник привязки обновляется только после потери фокуса приемником

            Explicit: источник не обновляется до тех пор, пока не будет вызван метод BindingExpression.UpdateSource()

            Default: значение по умолчанию. Для большинства свойств это значение PropertyChanged. А для свойства Text
            элемента TextBox это значение LostFocus

        В данном случае речь идет об обновлении источника привязки после изменения приемника в режимах OneWayToSource 
        или TwoWay. То есть чтобы у нас оба текстовых поля, которые связаны режимом TwoWay, моментально обновлялись 
        после изменения одного из них, надо использовать значение UpdateSourceTrigger.PropertyChanged:
    -->
    
    <StackPanel>
        <TextBox x:Name="textBox1" Height="30" />
        <TextBox x:Name="textBox2" Height="30"
        Text="{Binding ElementName=textBox1, Path=Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
    </StackPanel>
</Window>
