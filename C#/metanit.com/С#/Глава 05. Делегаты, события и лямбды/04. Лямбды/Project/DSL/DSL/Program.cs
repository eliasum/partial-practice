/*2022.10.11 11:15 IMM*/
using System;

//Лямбды

//Лямбда-выражения представляют упрощенную запись анонимных методов. Лямбда-выражения позволяют создать емкие
//лаконичные методы, которые могут возвращать некоторое значение и которые можно передать в качестве параметров
//в другие методы.

//Ламбда-выражения имеют следующий синтаксис: слева от лямбда-оператора => определяется список параметров, а 
//справа блок выражений, использующий эти параметры:

//(список_параметров) => выражение

//С точки зрения типа данных лямбда-выражение представляет делегат. Например, определим простейшее лямбда-выражение:

namespace DSL01
{
    class Program
    {
        /*
            класс-делегат с именем Message. Метод, сообщенный с данным делегатом,
            не будет ничего принимать и ничего возвращать 
        */
        delegate void Message();

        static void Main(string[] args)
        {
            /*
                переменной делегата hello типа Message присвоить лямбда-выражение,
                которое ничего не принимает и ничего не возвращает  
            */
            Message hello = () => Console.WriteLine("Hello");
            hello();       // Hello
            hello();       // Hello
            hello();       // Hello

            Console.ReadKey();
        }
    }
}
//В данном случае переменная hello представляет делегат Message - то есть некоторое действие, которое ничего не
//возвращает и не принимает никаких параметров. В качестве значения этой переменной присваивается
//лямбда-выражение. Это лямбда-выражение должно соответствовать делегату Message - оно тоже не принимает никаких 
//параметров, поэтому слева от лямбда-оператора идут пустые скобки. А справа от лямбда-оператора идет выполняемое
//выражение - Console.WriteLine("Hello")

//Затем в программе можно вызывать эту переменную как метод.

