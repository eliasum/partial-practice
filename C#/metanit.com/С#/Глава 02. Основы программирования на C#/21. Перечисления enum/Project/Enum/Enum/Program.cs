/*2020.07.11 20:13 IMM*/

using System;

namespace Enum
{
    class Program
    {
        //Перечисления enum

        //Кроме примитивных типов данных в C# есть такой тип как enum или
        //перечисление. Перечисления представляют набор логически связанных констант.
        //Объявление перечисления происходит с помощью оператора enum. Далее идет
        //название перечисления, после которого указывается тип перечисления - он 
        //обязательно должен представлять целочисленный тип (byte, int, short, long). 
        //Если тип явным образом не указан, то по умолчанию используется тип int.
        //Затем идет список элементов перечисления через запятую:

        enum Days
        {
            Monday,
            Tuesday,
            Wednesday,
            Thursday,
            Friday,
            Saturday,
            Sunday
        }

        enum Time : byte
        {
            Morning,
            Afternoon,
            Evening,
            Night
        }

        //В этих примерах каждому элементу перечисления присваивается целочисленное
        //значение, причем первый элемент будет иметь значение 0, второй - 1 и так
        //далее. Мы можем также явным образом указать значения элементов, либо
        //указав значение первого элемента:

        enum Operation
        {
            Add = 1,  // каждый следующий элемент по умолчанию увеличивается на единицу
            Subtract, // этот элемент равен 2
            Multiply, // равен 3
            Divide    // равен 4
        }

        //Но можно и для всех элементов явным образом указать значения:
        enum Operation_
        {
            Add = 2,
            Subtract = 4,
            Multiply = 8,
            Divide = 16
        }

        //При этом контанты перечисления могут иметь одинаковые значения, либо даже
        //можно присваивать одной константе значение другой константы:

        enum Color
        {
            White = 1,
            Black = 2,
            Green = 2,
            Blue = White // Blue = 1
        }

        //Каждое перечисление фактически определяет новый тип данных. Затем в
        //программе мы можем определить переменную этого типа и использовать ее:

        static void Main(string[] args)
        {
            Operation op;
            op = Operation.Add;
            Console.WriteLine(op); // Add

            //В программе мы можем присвоить значение этой переменной. При этом в
            //качестве ее значения должна выступать одна из констант, определенных
            //в данном перечислении. То есть несмотря на то, что каждая константа
            //сопоставляется с определенным числом, мы не можем присвоить ей 
            //числовое значение, например, Operation op = 1;. И также если мы 
            //будем выводить на консоль значение этой переменной, то мы получим
            //имя константы, а не числовое значение. Если же необходимо получить
            //числовое значение, то следует выполнить приведение к числовому типу:

            op = Operation.Multiply;
            Console.WriteLine((int)op); // 3

            Console.ReadLine();
        }
    }
}