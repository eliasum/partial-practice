<!DOCTYPE html>
<html theme="dark"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<title>C# и .NET | Финализируемые объекты. Метод Dispose</title>
<meta charset="utf-8">
<meta name="description" content="Использование деструкторов в C# для реализации метода Finalize и освобождения неуправляемых ресурсов, интерфейс IDisposable и метод Dispose, комбинированный подход к очистке ресурсов">
<meta name="viewport" content="width=device-width">
<link href="C%23%20%D0%B8%20.NET%20%D0%A4%D0%B8%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7%D0%B8%D1%80%D1%83%D0%B5%D0%BC%D1%8B%D0%B5%20%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D1%8B.%20%D0%9C%D0%B5%D1%82%D0%BE%D0%B4%20Dispose_files/style30.css" rel="stylesheet" type="text/css">
<script type="text/javascript" async="" src="C%23%20%D0%B8%20.NET%20%D0%A4%D0%B8%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7%D0%B8%D1%80%D1%83%D0%B5%D0%BC%D1%8B%D0%B5%20%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D1%8B.%20%D0%9C%D0%B5%D1%82%D0%BE%D0%B4%20Dispose_files/analytics.js"></script><script type="text/javascript" src="C%23%20%D0%B8%20.NET%20%D0%A4%D0%B8%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7%D0%B8%D1%80%D1%83%D0%B5%D0%BC%D1%8B%D0%B5%20%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D1%8B.%20%D0%9C%D0%B5%D1%82%D0%BE%D0%B4%20Dispose_files/context.js" async=""></script><script type="text/javascript" src="C%23%20%D0%B8%20.NET%20%D0%A4%D0%B8%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7%D0%B8%D1%80%D1%83%D0%B5%D0%BC%D1%8B%D0%B5%20%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D1%8B.%20%D0%9C%D0%B5%D1%82%D0%BE%D0%B4%20Dispose_files/context.js" async=""></script><script type="text/javascript" async="" src="C%23%20%D0%B8%20.NET%20%D0%A4%D0%B8%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7%D0%B8%D1%80%D1%83%D0%B5%D0%BC%D1%8B%D0%B5%20%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D1%8B.%20%D0%9C%D0%B5%D1%82%D0%BE%D0%B4%20Dispose_files/embed.js"></script><link rel="prefetch" as="style" href="C%23%20%D0%B8%20.NET%20%D0%A4%D0%B8%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7%D0%B8%D1%80%D1%83%D0%B5%D0%BC%D1%8B%D0%B5%20%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D1%8B.%20%D0%9C%D0%B5%D1%82%D0%BE%D0%B4%20Dispose_files/a_data/lounge.css"><link rel="prefetch" as="script" href="C%23%20%D0%B8%20.NET%20%D0%A4%D0%B8%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7%D0%B8%D1%80%D1%83%D0%B5%D0%BC%D1%8B%D0%B5%20%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D1%8B.%20%D0%9C%D0%B5%D1%82%D0%BE%D0%B4%20Dispose_files/a_data/common.js"><link rel="prefetch" as="script" href="C%23%20%D0%B8%20.NET%20%D0%A4%D0%B8%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7%D0%B8%D1%80%D1%83%D0%B5%D0%BC%D1%8B%D0%B5%20%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D1%8B.%20%D0%9C%D0%B5%D1%82%D0%BE%D0%B4%20Dispose_files/a_data/lounge.js"><link rel="prefetch" as="script" href="C%23%20%D0%B8%20.NET%20%D0%A4%D0%B8%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7%D0%B8%D1%80%D1%83%D0%B5%D0%BC%D1%8B%D0%B5%20%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D1%8B.%20%D0%9C%D0%B5%D1%82%D0%BE%D0%B4%20Dispose_files/a_data/config.js"></head>
<body>
<div id="container">

<div id="header">
<div id="logo">
<a class="logoTitle" href="https://metanit.com/" title="На главную">METANIT.COM</a>
<div class="logoDefinition">Сайт о программировании</div> 
</div>

<div class="socialbtns">
<ul>
<li><a title="Посмотреть меню" rel="nofollow" class="fa fa-lg fa-bars"></a></li>
<li><a href="https://metanit.com/donations.php" title="Помощь сайту" rel="nofollow" class="fa fa-lg fa-usd"></a></li>
<li><a href="https://vk.com/metanit" title="Группа в ВКонтакте" rel="nofollow" class="fa fa-lg fa-vk"></a></li>
<li><a href="https://twitter.com/Eugene225" title="Твиттер" rel="nofollow" class="fa fa-lg fa-twitter"></a></li>
<li><a href="https://www.facebook.com/metanitcom" title="Страница в Facebook" rel="nofollow" class="fa fa-lg fa-facebook"></a></li>
<li><a href="https://www.youtube.com/user/Eugene22584/" title="Канал сайта на Youtube" rel="nofollow" class="fa fa-lg fa-youtube"></a></li>
<li><a href="https://t.me/metanit" title="Телеграмм" class="fa fa-lg fa-tel"></a></li>
<li><i id="toggle-theme" class="fa fa-lg fa-adjust"></i></li>
</ul>
</div>

<div id="search" class="transp">
<form action="https://www.google.ru" id="cse-search-box">
  <div>
    <input type="hidden" name="cx" value="partner-pub-3716042175333627:1096498938">
    <input type="hidden" name="ie" value="UTF-8">
    <input type="text" name="q" style="border: 1px solid rgb(126, 157, 185); padding: 2px; height: 25px; width: 263px; background: rgb(255, 255, 255) url(&quot;https://www.google.com/cse/static/images/1x/ru/branding.png&quot;) no-repeat scroll left 9px top 50%;">
    <input type="submit" name="sa" value="Найти">
  </div>
<input name="siteurl" value="metanit.com/sharp/tutorial/8.2.php" type="hidden"><input name="ref" value="metanit.com/sharp/tutorial/8.1.php" type="hidden"><input name="ss" value="" type="hidden"></form>
</div>
<div class="icon-vk"></div>
<div id="magnifying-glass"></div>

<div class="menuButton" id="menuButton">
	<span class="icon-bar"></span>
    <span class="icon-bar"></span>
    <span class="icon-bar"></span>
</div>

<div id="menu" class="menu">
<ul class="mainmenu">
<li><a href="https://metanit.com/news/">Новости</a></li>
   <li><a href="https://metanit.com/sharp/">C#/.NET</a></li>
   <li><a href="https://metanit.com/java/">Java</a></li>
   <li><a href="https://metanit.com/web/">WEB</a></li>
   <li><a href="https://metanit.com/python/">Python</a></li>
   <li><a href="https://metanit.com/cpp/">C/C++</a></li>
   <li><a href="https://metanit.com/sql/">SQL</a></li>
   <li><a href="https://metanit.com/nosql/mongodb/">MongoDB</a></li>
   <li><a href="https://metanit.com/go/">Go</a></li>
   <li><a href="https://metanit.com/visualbasic/tutorial/">VB.NET</a></li>
   <li><a href="https://metanit.com/swift/tutorial/">Swift</a></li>
   <li><a href="https://metanit.com/kotlin/tutorial/">Kotlin</a></li>
   <li><a href="https://metanit.com/dart/">Dart</a></li>
</ul>
</div>
</div>
<div id="content_right"> 
<div id="content_right_inner"> 
<div id="content_center"> 
<div id="menC" class="menC">
<div class="articleText" id="articleText">
<h2>Финализируемые объекты</h2><div class="date">Последнее обновление: 13.10.2019</div>

<div class="socialBlock">
<div class="share socialtop">
<ul>
<li><a title="Поделиться в Вконтакте" rel="nofollow" class="fa fa-lg fa-vk" onclick='window.open("http://vk.com/share.php?url=https://metanit.com/sharp/tutorial/8.2.php","Поделиться в ВКОНТАКТЕ","width=420,height=230,resizable=yes,scrollbars=yes,status=yes")'></a></li>
<li><a title="Поделиться в Одноклассниках" rel="nofollow" class="fa fa-lg fa-odnoklassniki" onclick='window.open("https://connect.ok.ru/offer?url=https://metanit.com/sharp/tutorial/8.2.php","Поделиться в Одноклассниках","width=420,height=230,resizable=yes,scrollbars=yes,status=yes")'></a></li>
<li><a title="Поделиться в Твиттере" rel="nofollow" class="fa fa-lg fa-twitter" onclick='window.open("http://twitter.com/share?url=https://metanit.com/sharp/tutorial/8.2.php","Поделиться в Твиттере","width=420,height=230,resizable=yes,scrollbars=yes,status=yes")'></a></li>
<li><a title="Поделиться в Фейсбуке" rel="nofollow" class="fa fa-lg fa-facebook" onclick='window.open("http://www.facebook.com/sharer.php?u=https://metanit.com/sharp/tutorial/8.2.php","Поделиться в Facebook","width=420,height=230,resizable=yes,scrollbars=yes,status=yes")'></a></li>
</ul>
</div>

</div>

<div style="margin-top:23px;margin-left:5px;">
<script async="" src="C%23%20%D0%B8%20.NET%20%D0%A4%D0%B8%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7%D0%B8%D1%80%D1%83%D0%B5%D0%BC%D1%8B%D0%B5%20%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D1%8B.%20%D0%9C%D0%B5%D1%82%D0%BE%D0%B4%20Dispose_files/adsbygoogle.js"></script>
<style>
.top_dark { width: 320px; height: 100px; }
@media(min-width: 480px) { .top_dark { width: 468px; height: 60px; } }
@media(min-width: 760px) { .top_dark { width: 728px; height: 90px;  } }
@media(min-width: 1000px) { .top_dark { width: 468px; height: 60px;  } }
@media(min-width: 1122px) { .top_dark{ width: 728px; height: 90px;} }
@media(min-width: 1400px) { .top_dark { width: 970px; height: 90px;} }
</style>
<!-- top_dark -->
<ins class="adsbygoogle top_dark" style="display:inline-block" data-ad-client="ca-pub-3716042175333627" data-ad-slot="7629300475"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
</div>

<p>Большинство объектов, используемых в программах на C#, относятся к 
управляемым или managed-коду, и легко очищаются сборщиком мусора. Однако
 
вместе с тем встречаются также и такие объекты, которые задействуют 
неуправляемые объекты (низкоуровневые файловые дескрипторы, сетевые 
подключения и т.д.). 
Такие неуправляемые объекты обращаются к API операционной системы через 
службы PInvoke. Сборщик мусора может справиться с управляемыми 
объектами, 
однако он не знает, как удалять неуправляемые объекты. В этом случае 
разработчик должен сам реализовывать механизмы очистки на уровне 
программного кода.</p>
<p>Освобождение неуправляемых ресурсов подразумевает реализацию одного из двух механизмов:</p>
<ul>
<li><p>Создание деструктора</p></li>
<li><p>Реализация классом интерфейса System.IDisposable</p></li>
</ul>
<h3>Создание деструкторов</h3>
<p>Если вы вдруг программировали на языке C++, то наверное уже знакомы с
 концепцией деструкторов. Метод деструктора носит имя класса (как и 
конструктор), 
перед которым стоит знак тильды (<code>~</code>). Например, создадим деструктор класса Person:</p>
<div><div id="highlighter_199970" class="syntaxhighlighter  c#"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="c# keyword">public</code> <code class="c# keyword">class</code> <code class="c# plain">Person</code></div><div class="line number2 index1 alt1"><code class="c# plain">{</code></div><div class="line number3 index2 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">public</code> <code class="c# keyword">string</code> <code class="c# plain">Name { </code><code class="c# keyword">get</code><code class="c# plain">; </code><code class="c# keyword">set</code><code class="c# plain">; }</code></div><div class="line number4 index3 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number5 index4 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">~Person()</code></div><div class="line number6 index5 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">{</code></div><div class="line number7 index6 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">Console.Beep();</code></div><div class="line number8 index7 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">Console.WriteLine(</code><code class="c# string">"Disposed"</code><code class="c# plain">);</code></div><div class="line number9 index8 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">}</code></div><div class="line number10 index9 alt1"><code class="c# plain">}</code></div></div></td></tr></tbody></table></div></div>
<p>Деструктор в отличие от конструктора не может иметь модификаторов 
доступа. В данном случае в деструкторе в целях демонстрации просто 
вызывается звуковой сигнал и выводится строка на консоль, но 
в реальных программах в деструктор вкладывается логика освобождения 
неуправляемых ресурсов.</p>
<p>Однако на деле при очистке сборщик мусора вызывает не деструктор, а метод <span class="b">Finalize</span> класса Person. Все потому, что компилятор C# компилирует 
деструктор в конструкцию, которая эквивалентна следующей:</p>
<div><div id="highlighter_404395" class="syntaxhighlighter  c#"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="c# keyword">protected</code> <code class="c# keyword">override</code> <code class="c# keyword">void</code> <code class="c# plain">Finalize()</code></div><div class="line number2 index1 alt1"><code class="c# plain">{</code></div><div class="line number3 index2 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">try</code></div><div class="line number4 index3 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">{</code></div><div class="line number5 index4 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# comments">// здесь идут инструкции деструктора</code></div><div class="line number6 index5 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">}</code></div><div class="line number7 index6 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">finally</code></div><div class="line number8 index7 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">{</code></div><div class="line number9 index8 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">base</code><code class="c# plain">.Finalize();</code></div><div class="line number10 index9 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">}</code></div><div class="line number11 index10 alt2"><code class="c# plain">}</code></div></div></td></tr></tbody></table></div></div>
<p>Метод Finalize уже определен в базовом для всех типов классе Object, 
однако данный метод нельзя так просто переопределить. И фактическая 
его реализация происходит через создание деструктора.</p>
<p>Используя в программе класс Person, после ее завершения можно будет 
услышать голосовой сигнал и увидеть на консоли выводимую строку:</p>
<div><div id="highlighter_29693" class="syntaxhighlighter  c#"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="c# keyword">class</code> <code class="c# plain">Program</code></div><div class="line number2 index1 alt1"><code class="c# plain">{</code></div><div class="line number3 index2 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">static</code> <code class="c# keyword">void</code> <code class="c# plain">Main(</code><code class="c# keyword">string</code><code class="c# plain">[] args)</code></div><div class="line number4 index3 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">{</code></div><div class="line number5 index4 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">Test();</code></div><div class="line number6 index5 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">GC.Collect();</code></div><div class="line number7 index6 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">Console.ReadLine();</code></div><div class="line number8 index7 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">}</code></div><div class="line number9 index8 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">private</code> <code class="c# keyword">static</code> <code class="c# keyword">void</code> <code class="c# plain">Test()</code></div><div class="line number10 index9 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">{</code></div><div class="line number11 index10 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">Person p = </code><code class="c# keyword">new</code> <code class="c# plain">Person();</code></div><div class="line number12 index11 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">}</code></div><div class="line number13 index12 alt2"><code class="c# plain">}</code></div></div></td></tr></tbody></table></div></div>
<p>Обратите внимание, что даже после завершения метода Test и 
соответственно удаления из стека ссылки на объект Person в куче, может 
не последовать немедленного вызова деструктора. 
Лишь при завершении всей программы гарантировано произойдет очистка 
памяти и вызов деструктора. Поэтому для более быстой очистки памяти 
применяется метод GC.Collect.</p>
<p>На уровне памяти это выглядит так: сборщик мусора при размещении объекта в куче определяет, поддерживает ли данный объект метод <code>Finalize</code>.
 
И если объект имеет метод Finalize, то указатель на него сохраняется в 
специальной таблице, которая называется очередь финализации. Когда 
наступает 
момент сборки мусора, сборщик видит, что данный объект должен быть 
уничтожен, и если он имеет метод Finalize, то он копируется 
в еще одну таблицу и окончательно уничтожается лишь при следующем 
проходе сборщика мусора.</p>
<p>И здесь мы можем столкнуться со следующей проблемой: а что если нам 
немедленно надо вызвать деструктор и освободить все связанные с объектом
 неуправляемые ресурсы? 
В этом случае мы можем использовать второй подход - реализацию 
интерфейса IDisposable.</p>

<h3>Интерфейс IDisposable</h3>
<p>Интерфейс IDisposable объявляет один единственный метод <code>Dispose</code>, в котором при реализации интерфейса в классе должно происходить 
освобождение неуправляемых ресурсов. Например:</p>
<div><div id="highlighter_655511" class="syntaxhighlighter  c#"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div><div class="line number31 index30 alt2">31</div><div class="line number32 index31 alt1">32</div><div class="line number33 index32 alt2">33</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="c# keyword">class</code> <code class="c# plain">Program</code></div><div class="line number2 index1 alt1"><code class="c# plain">{</code></div><div class="line number3 index2 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">static</code> <code class="c# keyword">void</code> <code class="c# plain">Main(</code><code class="c# keyword">string</code><code class="c# plain">[] args)</code></div><div class="line number4 index3 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">{</code></div><div class="line number5 index4 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">Test();</code></div><div class="line number6 index5 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">Console.ReadLine();</code></div><div class="line number7 index6 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">}</code></div><div class="line number8 index7 alt1">&nbsp;</div><div class="line number9 index8 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">private</code> <code class="c# keyword">static</code> <code class="c# keyword">void</code> <code class="c# plain">Test()</code></div><div class="line number10 index9 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">{</code></div><div class="line number11 index10 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">Person p=</code><code class="c# keyword">null</code><code class="c# plain">;</code></div><div class="line number12 index11 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">try</code></div><div class="line number13 index12 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">{</code></div><div class="line number14 index13 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">p = </code><code class="c# keyword">new</code> <code class="c# plain">Person();</code></div><div class="line number15 index14 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">}</code></div><div class="line number16 index15 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">finally</code></div><div class="line number17 index16 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">{</code></div><div class="line number18 index17 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">if</code> <code class="c# plain">(p != </code><code class="c# keyword">null</code><code class="c# plain">)</code></div><div class="line number19 index18 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">{</code></div><div class="line number20 index19 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">p.Dispose();</code></div><div class="line number21 index20 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">}</code></div><div class="line number22 index21 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">}</code></div><div class="line number23 index22 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">}</code></div><div class="line number24 index23 alt1"><code class="c# plain">}</code></div><div class="line number25 index24 alt2"><code class="c# keyword">public</code> <code class="c# keyword">class</code> <code class="c# plain">Person : IDisposable</code></div><div class="line number26 index25 alt1"><code class="c# plain">{</code></div><div class="line number27 index26 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">public</code> <code class="c# keyword">string</code> <code class="c# plain">Name { </code><code class="c# keyword">get</code><code class="c# plain">; </code><code class="c# keyword">set</code><code class="c# plain">; }</code></div><div class="line number28 index27 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">public</code> <code class="c# keyword">void</code> <code class="c# plain">Dispose()</code></div><div class="line number29 index28 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">{</code></div><div class="line number30 index29 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">Console.Beep();</code></div><div class="line number31 index30 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">Console.WriteLine(</code><code class="c# string">"Disposed"</code><code class="c# plain">);</code></div><div class="line number32 index31 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">}</code></div><div class="line number33 index32 alt2"><code class="c# plain">}</code></div></div></td></tr></tbody></table></div></div>
<p>В данном коде используется конструкция try...finally. По сути эта 
конструкция по функционалу в общем эквивалентна следующим двум строкам 
кода:</p>
<div><div id="highlighter_747715" class="syntaxhighlighter  c#"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="c# plain">Person p = </code><code class="c# keyword">new</code> <code class="c# plain">Person();</code></div><div class="line number2 index1 alt1"><code class="c# plain">p.Dispose();</code></div></div></td></tr></tbody></table></div></div>
<p>Но конструкцию try...finally предпочтительнее использовать при вызове
 метода Dispose, так как она гарантирует, что даже в случае 
возникновения исключения 
произойдет освобождение ресурсов в методе Dispose.</p>
<h3>Комбинирование подходов</h3>
<p>Мы рассмотрели два подхода. Какой же из них лучше? С одной стороны, 
метод Dispose позволяет в любой момент времени вызвать освобождение 
связанных ресурсов, 
а с другой - программист, использующий наш класс, может забыть поставить
 в коде вызов метода Dispose. В общем бывают различные ситуации. И чтобы
 сочетать плюсы 
обоих подходов мы можем использовать комбинированный подход. Microsoft 
предлагает нам использовать следующий формализованный шаблон:</p>
<div><div id="highlighter_255997" class="syntaxhighlighter  c#"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div><div class="line number31 index30 alt2">31</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="c# keyword">public</code> <code class="c# keyword">class</code> <code class="c# plain">SomeClass: IDisposable</code></div><div class="line number2 index1 alt1"><code class="c# plain">{</code></div><div class="line number3 index2 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">private</code> <code class="c# keyword">bool</code> <code class="c# plain">disposed = </code><code class="c# keyword">false</code><code class="c# plain">;</code></div><div class="line number4 index3 alt1">&nbsp;</div><div class="line number5 index4 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# comments">// реализация интерфейса IDisposable.</code></div><div class="line number6 index5 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">public</code> <code class="c# keyword">void</code> <code class="c# plain">Dispose()</code></div><div class="line number7 index6 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">{</code></div><div class="line number8 index7 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">Dispose(</code><code class="c# keyword">true</code><code class="c# plain">);</code></div><div class="line number9 index8 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# comments">// подавляем финализацию</code></div><div class="line number10 index9 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">GC.SuppressFinalize(</code><code class="c# keyword">this</code><code class="c# plain">);</code></div><div class="line number11 index10 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">}</code></div><div class="line number12 index11 alt1">&nbsp;</div><div class="line number13 index12 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">protected</code> <code class="c# keyword">virtual</code> <code class="c# keyword">void</code> <code class="c# plain">Dispose(</code><code class="c# keyword">bool</code> <code class="c# plain">disposing)</code></div><div class="line number14 index13 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">{</code></div><div class="line number15 index14 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">if</code> <code class="c# plain">(!disposed)</code></div><div class="line number16 index15 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">{</code></div><div class="line number17 index16 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">if</code> <code class="c# plain">(disposing)</code></div><div class="line number18 index17 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">{</code></div><div class="line number19 index18 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# comments">// Освобождаем управляемые ресурсы</code></div><div class="line number20 index19 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">}</code></div><div class="line number21 index20 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# comments">// освобождаем неуправляемые объекты</code></div><div class="line number22 index21 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">disposed = </code><code class="c# keyword">true</code><code class="c# plain">;</code></div><div class="line number23 index22 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">}</code></div><div class="line number24 index23 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">}</code></div><div class="line number25 index24 alt2">&nbsp;</div><div class="line number26 index25 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# comments">// Деструктор</code></div><div class="line number27 index26 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">~SomeClass()</code></div><div class="line number28 index27 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">{</code></div><div class="line number29 index28 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">Dispose (</code><code class="c# keyword">false</code><code class="c# plain">);</code></div><div class="line number30 index29 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">}</code></div><div class="line number31 index30 alt2"><code class="c# plain">}</code></div></div></td></tr></tbody></table></div></div>
<p>Логика очистки реализуется перегруженной версией метода <code>Dispose(bool disposing)</code>.
 При вызове деструктора в качестве параметра 
disposing передается значение false, чтобы избежать очистки управляемых 
ресурсов, так как мы не можем быть уверенными в их состоянии, что они до
 сих 
пор находятся в памяти. И в этом случае остается полагаться на 
деструкторы этих ресурсов. Ну и в обоих случаях освобождаются 
неуправляемые ресурсы.</p>
<p>Еще один важный момент - вызов в методе Dispose метода <code>GC.SuppressFinalize(this)</code>. GC.SuppressFinalize не позволяет системе выполнить метод Finalize для данного объекта.</p>
<p>Таким образом, даже если разработчик не использует в программе метод 
Dispose, все равно произойдет очистка и освобождение ресурсов.</p>
<h4>Общие рекомендации по использованию Finalize и Dispose</h4>
<ul>
<li><p>Деструктор следует реализовывать только у тех объектов, которым 
он действительно необходим, так как метод Finalize оказывает сильное 
влияние на производительность</p></li>
<li><p>После вызова метода Dispose необходимо блокировать у объекта вызов метода Finalize с помощью  GC.SuppressFinalize</p></li>
<li><p>При создании производных классов от базовых, которые реализуют 
интерфейс IDisposable, следует также вызывать метод Dispose базового 
класса:</p>
<div><div id="highlighter_247503" class="syntaxhighlighter  c#"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="c# keyword">public</code> <code class="c# keyword">class</code> <code class="c# plain">Derived: Base</code></div><div class="line number2 index1 alt1"><code class="c# plain">{</code></div><div class="line number3 index2 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">private</code> <code class="c# keyword">bool</code> <code class="c# plain">IsDisposed = </code><code class="c# keyword">false</code><code class="c# plain">;</code></div><div class="line number4 index3 alt1">&nbsp;</div><div class="line number5 index4 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">protected</code> <code class="c# keyword">override</code> <code class="c# keyword">void</code> <code class="c# plain">Dispose(</code><code class="c# keyword">bool</code> <code class="c# plain">disposing)</code></div><div class="line number6 index5 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">{</code></div><div class="line number7 index6 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">if</code> <code class="c# plain">(IsDisposed) </code><code class="c# keyword">return</code><code class="c# plain">;</code></div><div class="line number8 index7 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">if</code> <code class="c# plain">(disposing)</code></div><div class="line number9 index8 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">{</code></div><div class="line number10 index9 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# comments">// Освобождение управляемых ресурсов</code></div><div class="line number11 index10 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">}</code></div><div class="line number12 index11 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">IsDisposed = </code><code class="c# keyword">true</code><code class="c# plain">;</code></div><div class="line number13 index12 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# comments">// Обращение к методу Dispose базового класса</code></div><div class="line number14 index13 alt1"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# keyword">base</code><code class="c# plain">.Dispose(disposing);</code></div><div class="line number15 index14 alt2"><code class="c# spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c# plain">}</code></div><div class="line number16 index15 alt1"><code class="c# plain">}</code></div></div></td></tr></tbody></table></div></div>
</li>
<li><p>Отдавайте предпочтение комбинированному шаблону, реализующему как метод Dispose, так и деструктор</p></li>
</ul>
<div style="margin-top:25px;clear:both;">
<style>
.bottom_dark { width: 300px; height: 250px; }
@media(min-width: 500px) { .bottom_dark { width: 336px; height: 280px; } }
@media(min-width: 760px) { .bottom_dark { width: 728px; height: 90px;  } }
@media(min-width: 1000px) { .bottom_dark { width: 336px; height: 280px;  } }
@media(min-width: 1122px) { .bottom_dark{ width: 728px; height: 90px;} }
@media(min-width: 1400px) { .bottom_dark{ width: 970px; height: 90px;} }
</style>
<!-- bottom_dark -->
<ins class="adsbygoogle bottom_dark" style="display:inline-block" data-ad-client="ca-pub-3716042175333627" data-ad-slot="5571426425"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
</div>


<div class="nav"><p><a href="https://metanit.com/sharp/tutorial/8.1.php">Назад</a><a href="https://metanit.com/sharp/tutorial/">Содержание</a><a href="https://metanit.com/sharp/tutorial/8.5.php">Вперед</a></p></div></div>
<div class="socialBlock">
<div class="share socialbottom">
<ul>
<li><a title="Поделиться в Вконтакте" rel="nofollow" class="fa fa-lg fa-vk" onclick='window.open("http://vk.com/share.php?url=https://metanit.com/sharp/tutorial/8.2.php","Поделиться в ВКОНТАКТЕ","width=420,height=230,resizable=yes,scrollbars=yes,status=yes")'></a></li>
<li><a title="Поделиться в Одноклассниках" rel="nofollow" class="fa fa-lg fa-odnoklassniki" onclick='window.open("https://connect.ok.ru/offer?url=https://metanit.com/sharp/tutorial/8.2.php","Поделиться в Одноклассниках","width=420,height=230,resizable=yes,scrollbars=yes,status=yes")'></a></li>
<li><a title="Поделиться в Твиттере" rel="nofollow" class="fa fa-lg fa-twitter" onclick='window.open("http://twitter.com/share?url=https://metanit.com/sharp/tutorial/8.2.php","Поделиться в Твиттере","width=420,height=230,resizable=yes,scrollbars=yes,status=yes")'></a></li>
<li><a title="Поделиться в Фейсбуке" rel="nofollow" class="fa fa-lg fa-facebook" onclick='window.open("http://www.facebook.com/sharer.php?u=https://metanit.com/sharp/tutorial/8.2.php","Поделиться в Facebook","width=420,height=230,resizable=yes,scrollbars=yes,status=yes")'></a></li>
</ul>
</div>
</div>

<style>
.commentABl { margin: 25px 0px 15px 0px;}
@media(min-width: 860px) { .commentABl { margin: 35px 10px 15px 15px;  } }
</style>
<div class="commentABl" style="clear:both;">
<div id="yandex_rtb_R-A-201190-3" style="display:inline-block;width:320px;vertical-align:top; margin-right:12px;"></div>
<div id="yandex_rtb_R-A-201190-2" style="display:inline-block;width:320px;vertical-align:top;"></div>
</div>

<div id="disqus_thread" style="margin-left:8px;margin-right:8px;clear:both;"><iframe id="dsq-app7639" name="dsq-app7639" allowtransparency="true" scrolling="no" tabindex="0" title="Disqus" style="width: 1px !important; min-width: 100% !important; border: medium none !important; overflow: hidden !important; height: 3312px !important;" src="C%23%20%D0%B8%20.NET%20%D0%A4%D0%B8%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7%D0%B8%D1%80%D1%83%D0%B5%D0%BC%D1%8B%D0%B5%20%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D1%8B.%20%D0%9C%D0%B5%D1%82%D0%BE%D0%B4%20Dispose_files/a.htm" horizontalscrolling="no" verticalscrolling="no" width="100%" frameborder="0"></iframe></div>
<script type="text/javascript">
var disqus_shortname = 'metanitcom';
(function() {
var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
(document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
})();
</script>
</div>
</div> 
<div id="menR" class="menR">
<style>
.dark_side { width: 300px; height: 250px; }
@media(min-width: 500px) { .dark_side { width: 336px; height: 280px; } }
@media(min-width: 1000px) { .dark_side { width: 160px; height: 600px; } }
</style>
<!-- dark_side -->
<ins class="adsbygoogle dark_side" style="display:inline-block" data-ad-client="ca-pub-3716042175333627" data-ad-slot="8886665532"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
<style>
.dn {font-size:12.5px;margin:3px;}
.dh{font-weight:bold;margin-left:2px;}
</style>
<div class="dn">
<div class="dh">Помощь сайту</div>
<div class="dh">WebMoney</div>
<ul>
<li>P378451176208</li>
<li>Z280152397659</li>
</ul>
<div class="dh">Yandex-деньги</div>
<ul>
<li>410011174743222</li>
</ul>
<div class="dh">PayPal</div>
<ul>
<li>metanit22@mail.ru</li>
</ul>
</div>

</div>
</div>
</div> 
<div class="menT" id="menT" style="max-height: 3928px;"><ul id="browser" class="filetree treeview"> 
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 1. Введение в C#</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/1.1.php">Язык C# и платформа .NET</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/1.2.php">Начало работы с Visual Studio. Первая программа</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/1.3.php">Компиляция в командной строке</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/1.4.php">Установка версии языка</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 2. Основы программирования на C#</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/1.5.php">Структура программы</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.25.php">Переменные</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.26.php">Литералы</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.1.php">Типы данных</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.15.php">Консольный ввод-вывод</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.3.php">Арифметические операции</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.22.php">Поразрядные операции</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.23.php">Операции присваивания</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.2.php">Преобразования базовых типов данных</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.24.php">Условные выражения</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.5.php">Условные конструкции</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.6.php">Циклы</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.4.php">Массивы</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.7.php">Программа сортировки массива</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.8.php">Методы</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.9.php">Параметры методов</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.27.php">Передача параметров по ссылке и значению. Выходные параметры</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.10.php">Массив параметров и ключевое слово params</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.18.php">Область видимости (контекст) переменных</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.11.php">Рекурсивные функции</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.12.php">Перечисления enum</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/2.19.php">Кортежи</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 3. Классы. Объектно-ориентированное программирование.</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.1.php">Классы и объекты</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.13.php">Структуры</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.16.php">Типы значений и ссылочные типы</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.25.php">Пространства имен, псевдонимы и статический импорт</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.46.php">Создание библиотеки классов</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.2.php">Модификаторы доступа</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.4.php">Свойства</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.5.php">Перегрузка методов</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.6.php">Статические члены и модификатор static</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.3.php">Константы, поля и структуры для чтения</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.36.php">Перегрузка операторов</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.26.php">Значение null</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/4.10.php">Индексаторы</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.7.php">Наследование</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.11.php">Преобразование типов</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.37.php">Перегрузка операций преобразования типов</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.19.php">Виртуальные методы и свойства</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.41.php">Сокрытие методов</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.42.php">Различие переопределения и сокрытия методов</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.8.php">Абстрактные классы</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.10.php">Класс System.Object и его методы</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.12.php">Обобщенные типы</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.38.php">Ограничения обобщений</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/3.39.php">Наследование обобщенных типов</a></span></li>
			</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 4. Обработка исключений</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.14.php">Конструкция try..catch..finally</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.28.php">Блок catch и фильтры исключений</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.29.php">Типы исключений. Класс Exception</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.17.php">Создание классов исключений</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.30.php">Поиск блока catch при обработке исключений</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/2.31.php">Генерация исключения и оператор throw</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 5. Делегаты, события и лямбды</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.13.php">Делегаты</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.43.php">Применение делегатов</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.15.php">Анонимные методы</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.16.php">Лямбды</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.14.php">События</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.28.php">Ковариантность и контравариантность делегатов</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/3.33.php">Делегаты Action, Predicate и Func</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 6. Интерфейсы</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.9.php">Определение интерфейсов</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.49.php">Применение интерфейсов</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.44.php">Явная реализация интерфейсов</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.47.php">Реализация интерфейсов в базовых и производных классах</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.48.php">Наследование интерфейсов</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.40.php">Интерфейсы в обобщениях</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.22.php">Копирование объектов. Интерфейс ICloneable</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.23.php">Сортировка объектов. Интерфейс IComparable</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/3.27.php">Ковариантность и контравариантность обобщенных интерфейсов</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 7. Дополнительные возможности ООП в C#</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.18.php">Методы расширения</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.21.php">Частичные классы и методы</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.20.php">Анонимные типы</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.20.php">Локальные функции</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.34.php">Pattern matching</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.35.php">Деконструкторы</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.45.php">Паттерны switch</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.17.php">Nullable-типы</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/2.21.php">Переменные-ссылки и возвращение ссылки</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 8. Объектно-ориентированное программирование. Практика</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.29.php">Создание проекта библиотеки классов</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.30.php">Создание классов. Часть 1</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/3.31.php">Создание классов. Часть 2</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/3.32.php">Создание главного проекта</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 9. Коллекции</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/4.3.php">ArrayList</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/4.5.php">Список List&lt;T&gt;</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/4.6.php">Двухсвязный список LinkedList&lt;T&gt;</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/4.7.php">Очередь Queue&lt;T&gt;</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/4.8.php">Стек Stack&lt;T&gt;</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/4.9.php">Словарь Dictionary&lt;T, V&gt;</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/4.13.php">Класс ObservableCollection</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/4.11.php">Интерфейсы IEnumerable и IEnumerator</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/4.12.php">Итераторы и оператор yield</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 10. Работа со строками</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/7.1.php">Строки и класс System.String</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/7.2.php">Операции со строками</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/7.5.php">Форматирование и интерполяция строк</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/7.3.php">Класс StringBuilder</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/7.4.php">Регулярные выражения</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 11. Работа с датами и временем</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/19.1.php">Структура DateTime</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/19.2.php">Форматирование дат и времени</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 12. Дополнительные классы и структуры .NET</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/20.1.php">Отложенная инициализация и тип Lazy</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/20.2.php">Математические вычисления и класс Math</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/20.4.php">Преобразование типов и класс Convert</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/20.5.php">Класс Array и массивы</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/2.33.php">Span</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/2.32.php">Индексы и диапазоны</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 13. Многопоточность</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/11.1.php">Введение в многопоточность. Класс Thread</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/11.2.php">Создание потоков. Делегат ThreadStart</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/11.3.php">Потоки с параметрами и ParameterizedThreadStart</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/11.4.php">Синхронизация потоков</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/11.5.php">Мониторы</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/11.6.php">Класс AutoResetEvent</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/11.7.php">Мьютексы</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/11.8.php">Семафоры</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/11.9.php">Таймеры</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 14. Параллельное программирование и библиотека TPL</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/12.1.php">Задачи и класс Task</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/12.2.php">Работа с классом Task</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/12.3.php">Задачи продолжения</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/12.4.php">Класс Parallel</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/12.5.php">Отмена задач и параллельных операций. CancellationToken</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 15. Aсинхронное программирование</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/13.3.php">Асинхронные методы, async и await</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/13.7.php">Возвращение результата из асинхронного метода</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/13.5.php">Последовательный и параллельный вызов асинхронных операций</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/13.4.php">Обработка ошибок в асинхронных методах</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/13.6.php">Отмена асинхронных операций</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/13.8.php">Асинхронные стримы</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 16. LINQ</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/15.1.php">Основы LINQ</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/15.2.php">Фильтрация выборки и проекция</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/15.3.php">Сортировка</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/15.4.php">Объединение, пересечение и разность коллекций</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/15.5.php">Агрегатные операции</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/15.11.php">Методы Skip и Take</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/15.6.php">Группировка</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/15.7.php">Соединение коллекций. Метод Join, GroupJoin и Zip</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/15.10.php">Методы All и Any</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/15.8.php">Отложенное и немедленное выполнение LINQ</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/15.9.php">Делегаты и анонимные методы в запросах LINQ</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 17. Parallel LINQ</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/17.1.php">Введение в Parallel LINQ. Метод AsParallel</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/17.2.php">Метод AsOrdered</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/17.3.php">Обработка ошибок и отмена параллельных операции</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 18. Рефлексия</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/14.1.php">Введение в рефлексию. Класс System.Type</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/14.2.php">Применение рефлексии и исследование типов</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/14.3.php">Динамическая загрузка сборок и позднее связывание</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/14.4.php">Атрибуты в .NET</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 19. Dynamic Language Runtime</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/9.1.php">DLR в C#. Ключевое слово dynamic</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/9.2.php">DynamicObject и ExpandoObject</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/9.3.php">Использование IronPython в .NET</a></span></li>
		</ul>
	</li>
	<li class="closed collapsable"><div class="hitarea closed-hitarea collapsable-hitarea"></div><span class="folder aMItem">Глава 20. Сборка мусора, управление памятью и указатели</span>
		<ul style="display: block;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/8.1.php">Сборщик мусора в C#</a></span></li>
			<li><span class="file aMItem"><a href="https://metanit.com/sharp/tutorial/8.2.php" class="aMItem">Финализируемые объекты. Метод Dispose</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/8.5.php">Конструкция using</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/8.3.php">Указатели</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/8.4.php">Указатели на структуры, члены классов и массивы</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 21. Работа с потоками и файловой системой</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/5.1.php">Работа с дисками</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/5.2.php">Работа с каталогами</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/5.3.php">Работа с файлами. Классы File и FileInfo</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/5.4.php">FileStream. Чтение и запись файла</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/5.5.php">Чтение и запись текстовых файлов. StreamReader и StreamWriter</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/5.6.php">Бинарные файлы. BinaryWriter и BinaryReader</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/6.2.php">Бинарная сериализация. BinaryFormatter</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/5.7.php">Архивация и сжатие файлов</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 22. Работа с JSON</span>
		<ul style="display: none;">
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/6.5.php">Сериализация в JSON. JsonSerializer</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 23. Работа с XML</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/16.1.php">XML-Документы</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/16.2.php">Работа с XML с помощью System.Xml</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/16.3.php">Изменение XML-документа</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/16.4.php">XPath</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/16.5.php">Linq to Xml. Создание Xml-документа</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/16.6.php">Выборка элементов в LINQ to XML</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/16.7.php">Изменение документа в LINQ to XML</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/6.4.php">Сериализация в XML. XmlSerializer</a></span></li>
		</ul>
	</li>
	<li class="closed expandable"><div class="hitarea closed-hitarea expandable-hitarea"></div><span class="folder">Глава 24. Процессы и домены приложения</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/18.1.php">Процессы</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/18.2.php">Домены приложений</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/18.3.php">AssemblyLoadContext и динамическая загрузка и выгрузка сборок</a></span></li>
		</ul>
	</li>
	<li class="closed expandable lastExpandable"><div class="hitarea closed-hitarea expandable-hitarea lastExpandable-hitarea"></div><span class="folder">Глава 25. Валидация модели</span>
		<ul style="display: none;">
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/22.1.php">Основы валидации модели</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/22.2.php">Атрибуты валидации</a></span></li>
			<li><span class="file"><a href="https://metanit.com/sharp/tutorial/22.3.php">Создание своих атрибутов валидации</a></span></li>
			<li class="last"><span class="file"><a href="https://metanit.com/sharp/tutorial/22.4.php">Самовалидация модели</a></span></li>
		</ul>
	</li>
</ul></div>
<div id="footer">

<div class="bootomLinks">
<a href="https://vk.com/metanit" title="Присоединиться к группе вконтакте" rel="nofollow">
Вконтакте</a>|
<a href="https://twitter.com/Eugene225" title="Подписаться на твит-ленту" rel="nofollow">
Twitter</a>|
<a href="https://www.youtube.com/user/Eugene22584/" title="Подписаться на канал на youtube" rel="nofollow">
Канал сайта на youtube</a>|
<a href="https://metanit.com/donations.php" rel="nofollow">Помощь сайту</a>
</div>
<p>Контакты для связи: metanit22@mail.ru</p>
<p>Copyright © metanit.com, 2012-2020. Все права защищены.</p>
</div>
</div>
<script type="text/javascript" src="C%23%20%D0%B8%20.NET%20%D0%A4%D0%B8%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7%D0%B8%D1%80%D1%83%D0%B5%D0%BC%D1%8B%D0%B5%20%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D1%8B.%20%D0%9C%D0%B5%D1%82%D0%BE%D0%B4%20Dispose_files/jquery_002.js"></script>
<script type="text/javascript" src="C%23%20%D0%B8%20.NET%20%D0%A4%D0%B8%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7%D0%B8%D1%80%D1%83%D0%B5%D0%BC%D1%8B%D0%B5%20%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D1%8B.%20%D0%9C%D0%B5%D1%82%D0%BE%D0%B4%20Dispose_files/jquery.js"></script>
<script type="text/javascript" src="C%23%20%D0%B8%20.NET%20%D0%A4%D0%B8%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7%D0%B8%D1%80%D1%83%D0%B5%D0%BC%D1%8B%D0%B5%20%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D1%8B.%20%D0%9C%D0%B5%D1%82%D0%BE%D0%B4%20Dispose_files/syntax9.js"></script>
<script type="text/javascript">SyntaxHighlighter.all();</script>
<script>
$(function() { 
	$("#menuButton").on('click', function(){
          $(this).toggleClass('menu-opened');
          var mainmenu = $('.mainmenu');
          if (mainmenu.hasClass('open')) { 
            mainmenu.removeClass('open');
          }
          else {
            mainmenu.addClass('open');
          }
        });
	$('.submenu-button').on('click', function() {
            $(this).toggleClass('submenu-opened');
            if ($(this).siblings('ul').hasClass('open')) {
              $(this).siblings('ul').removeClass('open');
			  $(this).children('span').removeClass('open');
			  $(this).children('span').addClass('close');
            }
            else {
              $(this).siblings('ul').addClass('open');
			  $(this).children('span').removeClass('close');
			  $(this).children('span').addClass('open');
            }
          });
  $("#toggle-theme").on("click", function() {
		if(document.documentElement.hasAttribute("theme")){
			document.documentElement.removeAttribute("theme");
			document.cookie="theme=1;expires=Mon, 19 Feb 2001 12:00:00 UTC;path=/;";
		}
		else{
			document.documentElement.setAttribute("theme", "dark");
			var expire = new Date();
			expire.setHours(expire.getHours() + 7);
			document.cookie="theme=1;expires=" + expire.toUTCString() + ";path=/;";
		}
	});
	$('#magnifying-glass').on('click', function() {
            if ($('#search').hasClass('transp')) {
              $('#search').removeClass('transp').show();
            }
            else {
              $('#search').addClass('transp').hide();
            }
          });
	$('#browser').treeview();$('#navigation').treeview({persist: 'location',collapsed: true, unique: true});
	
	$("li:contains('Глава 20.')").removeClass('expandable').addClass('collapsable').children('ul').css({"display":"block"});
	$("li:contains('Глава 20.')").children('div').removeClass('expandable-hitarea').addClass('collapsable-hitarea');
	$("li:contains('Глава .')").removeClass('lastExpandable').addClass('lastCollapsable').children('ul').css({"display":"block"});
	$("li:contains('Глава .')").children('div').removeClass('lastExpandable-hitarea').addClass('lastCollapsable-hitarea');
	
var url = "//metanit.com" + location.pathname;
	$('.file a[href="' + url + '"]').addClass('aMItem').parent().addClass('aMItem').closest('li.collapsable').find('span.folder').addClass('aMItem');
	

	$(".fa-bars").on('click', function() {
		$(".menT").toggleClass("menTOpened");
		$("#content_right_inner").toggleClass("contentRightInnerOpened");
	});
	
	$(".share .fa-vk").attr('onclick','window.open("http://vk.com/share.php?url=' + window.location.href+'","Поделиться в ВКОНТАКТЕ","width=420,height=230,resizable=yes,scrollbars=yes,status=yes")');
	$(".share .fa-odnoklassniki").attr('onclick','window.open("https://connect.ok.ru/offer?url=' + window.location.href+'","Поделиться в Одноклассниках","width=420,height=230,resizable=yes,scrollbars=yes,status=yes")');
	$(".share .fa-twitter").attr('onclick','window.open("http://twitter.com/share?url=' + window.location.href+'","Поделиться в Твиттере","width=420,height=230,resizable=yes,scrollbars=yes,status=yes")');
	$(".share .fa-facebook").attr('onclick','window.open("http://www.facebook.com/sharer.php?u=' + window.location.href +'","Поделиться в Facebook","width=420,height=230,resizable=yes,scrollbars=yes,status=yes")');
});
</script>
<script>
window.onload= function(){
	setMenC();
};
window.onresize= function(){
	setMenC();
};

function setMenC(){
	if(window.innerWidth >859){
			
		var h = document.getElementById("articleText").clientHeight;
		document.getElementById("menT").style.maxHeight=h + "px";
	}
}
</script>
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async="" src="C%23%20%D0%B8%20.NET%20%D0%A4%D0%B8%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7%D0%B8%D1%80%D1%83%D0%B5%D0%BC%D1%8B%D0%B5%20%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D1%8B.%20%D0%9C%D0%B5%D1%82%D0%BE%D0%B4%20Dispose_files/js"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-35780297-1');
</script>


<script async="" defer="defer" type="text/javascript" src="C%23%20%D0%B8%20.NET%20%D0%A4%D0%B8%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7%D0%B8%D1%80%D1%83%D0%B5%D0%BC%D1%8B%D0%B5%20%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D1%8B.%20%D0%9C%D0%B5%D1%82%D0%BE%D0%B4%20Dispose_files/brand"></script>
<script type="text/javascript">
    (function(w, d, n, s, t) {
        w[n] = w[n] || [];
        w[n].push(function() {
            Ya.Context.AdvManager.render({
                blockId: "R-A-201190-3",
                renderTo: "yandex_rtb_R-A-201190-3",
                horizontalAlign: false,
                async: true
            });
        });
        t = d.getElementsByTagName("script")[0];
        s = d.createElement("script");
        s.type = "text/javascript";
        s.src = "//an.yandex.ru/system/context.js";
        s.async = true;
        t.parentNode.insertBefore(s, t);
    })(this, this.document, "yandexContextAsyncCallbacks");
</script>
<script type="text/javascript">
    (function(w, d, n, s, t) {
        w[n] = w[n] || [];
        w[n].push(function() {
            Ya.Context.AdvManager.render({
                blockId: "R-A-201190-2",
                renderTo: "yandex_rtb_R-A-201190-2",
                async: true
            });
        });
        t = d.getElementsByTagName("script")[0];
        s = d.createElement("script");
        s.type = "text/javascript";
        s.src = "//an.yandex.ru/system/context.js";
        s.async = true;
        t.parentNode.insertBefore(s, t);
    })(this, this.document, "yandexContextAsyncCallbacks");
</script>

<iframe style="display: none;"></iframe></body></html>