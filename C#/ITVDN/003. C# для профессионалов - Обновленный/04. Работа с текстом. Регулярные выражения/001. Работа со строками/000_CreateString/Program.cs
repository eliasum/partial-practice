using System;

namespace CreateString
{
    static class Program
    {
        static void Main()
        {
            // "Hello"
            string s = "Hello"; // строка - это immutable type
            Console.WriteLine(s);
            Console.WriteLine(s.GetHashCode());

            /*
            Immutable (неизменным) типом в ООП называется такой тип, объект
            которого после создания становиться неизменным, так сказать 
            read-only. Соответственно mutable(изменчивые) типы готовы к 
            изменениям на всём протяжении своего существования. Immutable
            тип, например String, не содержит методов для изменения своего
            состояния. Все методы, которые якобы изменяют состояние объекта
            String, на самом деле возвращают новые строки. Плюсы неизменности
            строк следующие:
            -так как строки неизменны, их стало возможно использовать в пуле, 
            тем самым добиться экономии памяти

            String s1 = "HELLO";
            String s2 = "HELLO";

            s1 и s2 указывают на одну и ту же строку.
            -возможность кэширования хэш-кода. Мы всегда можем быть уверены 
            что хэш-код строки не изменился.
            -безопасность. Подключения к базам, соединения, аргументы методов.
            Строки везде.
            -потокобезопасность. Методы, обращающиеся из разных потоков к общей
            строке всегда видят одно и то же её состояние.
            */

            s = s.Insert(2, "mm");
            //s[2] = 'm';
            Console.WriteLine(s);
            Console.WriteLine(s.GetHashCode());

            // "-----------------------------------------------"
            String s2 = new string('-', 20);
            Console.WriteLine(s2);

            //"Hello-----------------------------------------------"
            s += s2;  //s = s + s2;
            Console.WriteLine(s);

            //"5"
            string s4 = 5.ToString();
            Console.WriteLine(s4);

            //"1 + 2 = 3"
            string s5 = String.Format("{0} + {1} = {2}", 1, 2, 1 + 2);
            Console.WriteLine(s5);
            
            // Delay
            Console.ReadKey();
        }
    }
}
