/*2020.10.20 18:26 IMM*/

using System;
using System.Threading;

/*
Когда сборщик мусора вызывает деструктор, то он его выполняет
в отдельном потоке
*/

namespace DestructorThread
{
    class MyClass
    {
        ~ MyClass()
        {
            // Возвращает уникальный идентификатор текущего управляемого потока.
            Console.WriteLine("Destructor thread ID: {0}", 
                Thread.CurrentThread.ManagedThreadId);
        }
    }
    class Program
    {
        static void Main()
        {
            // Возвращает уникальный идентификатор текущего управляемого потока.
            Console.WriteLine("Main thread ID: {0}", 
                Thread.CurrentThread.ManagedThreadId);

            MyClass my = new MyClass();
            /*
            Сборщик мусора перед уничтожением экземпляра (освобождением памяти)
            вызовет деструктор экземпляра. 

            Если у экземпляра нет деструктора, он сразу уничтожается, если 
            деструктор есть, то экземпляр помещается в очередь финализации и
            когда у сборщика мусора появляется свободное время, он уничтожает
            экземпляры из очереди финализации.

            Все деструкторы выполняются сборщиком мусора в одном потоке.
            */
        }
    }
}
